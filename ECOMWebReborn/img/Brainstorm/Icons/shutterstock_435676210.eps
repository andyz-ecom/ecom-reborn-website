%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: questions3.eps
%%Creator: Adobe Illustrator(R) 19.1
%%For: Elena Sapunkova
%%CreationDate: 6/8/2016
%%BoundingBox: 0 0 2800 1800
%%HiResBoundingBox: 0 0 2800 1800
%%CropBox: 0 0 2800 1800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.1.0 x29 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 84 8%%BeginData: 20974 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD80FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFF
%FFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAE
%FFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFF
%FFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAE
%FFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFD
%81FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFD04FFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFF
%FFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFF
%AEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFF
%FFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFF
%AEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFD81FFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFF
%AEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFF
%FFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFF
%AEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFF
%FFFFAEFFFFFFAEFFFFFFAEFFFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF83A8FFFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFD43FF7D83FD3CFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFFFFF
%AEFFAEFF52AEFFFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFD04FFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFF
%FFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFF
%AEFD04FFA8AEFFAEFFFFA8AEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFF
%FFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAE
%FFFFFFAEFFFFFFAEFFFFFFAEAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFF7DA8FFFFAEFFAFFFFFFFAEFFA8FFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFD3FFF8451FD04527D7EFF
%AEA8FD37FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFA8524AA0A6C79F9F74512784FFFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFF
%AEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFF
%FFFFAEFD07FFAEFFA8277BCFCFCEC7CDC7CDC79F267DFD04FFAEFFFFFFAE
%FFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFF
%FFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEAEAEFFAEFFAF5274CFC9FD09C72084FFFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFD36FF7D8383FFFFA84ACFCEC8
%C7C8C7CDC7C8C7CDC79F27FD36FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFA87D7DFF527BCFC8C7C8C7C7C7C8C7C7C7C8C74B84FF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFD04FFAEFFFFFFAEFF
%FFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFD07FFAEFFFFFFAEFFFFFF
%AEFFFFFFAEFFFFFFAEFD06FF52A0CFC7C8C7C8C7C8C7C8C7C8C7C77484A8
%7D7DAEAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFF
%FFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFD07FFAEFFAEFFAEFFAEFFFFCF7DA8A8FFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF27C8FD0CC7C1757DFFA8FFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFD10FFA8A75252527DAEFD07FFAE
%7D2E592E5252FD16FF529FCDC7C8C7CDC7C8C7CDC7C8C7C775A8FD14FFA8
%FD20FFAEFFAEFFAEFFAEFFAEFFAEFFAEFF7D2E2E5959592E2D7DFFAEFFFF
%FFA8272E84608B845927FFFFFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FF527BC7C8C7C7C7C8C7C7C7C8C7C79F51A8FFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFFFA752522E5252FFAEFFAEFFAEFFAEFFAEFFAEFD05FFAEFFAE
%FFAEFFAEFFAEFFAEFFFFAEFFFFFFAEFFFFFFAEFFFFFF5252848B8484848B
%602E7DFFFFFFCF52598B848B8484845952FFFFFFAEFFFFFFAEFFFFFFAEFF
%FFFFAEFD04FF7D50CDC7C8C7C8C7C8C7C8C7C8C79F52FFFFFFAEFFFFFFAE
%FFFFFFAEFFFFFFAEFFFF7D2E848484605952FD05FFAEFD05FFA8A8A7FFFF
%FFAEFFFFFFAEFFFFFFAEFFFFAEFFAEFFAEFFAEFFAEFFAEFF7D2E60846084
%60846084592EA8AE2DA72E8460842E5960845952AEFFAEFFAEFFAEFFAEFD
%07FFAEFF7D83A851FD0AC79FC74A7DFFFFAEFFAEFFAEFD05FFAEFFAEFFFF
%7D2E846084608460527CFFAEFFAEFFAEFFAE7D272E2E2E277DCFFFAEFFAE
%FFAEFFAEFFAEFD0DFF525A8B8485522E5985848B2EA7A87D7D59848B2E7D
%2E8484602EFD0AFFAE7D7D7DAEFFFFA87DA8FF529FC7CDC7C8C7CDC7C8C7
%C79F52AE7D7DFD05FF7D7D527DA8FD04FFAE2E8B84842E84848B5958FD06
%FFAE522E84848B84842E52FD0BFFAEFFAEFFAEFFAEFFAEFFAEFF27608484
%5A277652608460597DFF83A827592752CF5259842E52FFFFAEFFAEFFAEFF
%A8522E592E592752A8FD04FFA826C7C7C8C7C7C7C8C1C7C7517DFF83A8FF
%FFFFA8272E2E592E2E52FFFFFF585984842E522760606052FFAEFFAEFFCF
%522F8460848484608B277DFFFFAEFFAEFFAEFFAEFD04FFAEFFFFFFAEFD04
%FF7D2759592E7DFF2E8484842E7DFFFFFFA87DA8FF7D2E8B602E83FFAEFF
%FFFFAEFFAE52598B8484848B5952AEFD04FF5274C8C7C8C7C7C1C7C79F27
%FD04FFA852A827848485848B845252FFFF7D2E8B842EA87D5984597DFFFF
%AEFFFF832E8B848459598484846052FD05FFAEFFFFFFAEAEFFAEFFAEFFAE
%FFAEFFAEFFFFA8525252FF7D2E6084592EA8FFAEFFAEFFFFA82784605927
%FFAEFFAEFFAEFFA85259845A8460845A8B2E52CFFFAEFF8451C7C79FC79F
%C79FC726A8FFFFAEFF52A85259608459606084602783FFA72E2E5252FF52
%5A602E7CFFAEFFAEFF27606084592E515960845952A8FFAEFFAEFFAEFFAE
%FD12FFAE52598B845952FD07FF526084842E7DFD07FFA8278B848B592E59
%8B84842DFD05FF52749FFD05C77452FD05FFA8A852608B842E2784848B2E
%A8FFFFAECFA8FFA85284842EFD06FF7C2884602E7DFF2D8484592DFD0AFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFA8525984605927FFAEFFAEFFAEFF
%A82E6084602E7DFFAEFFAEFFAEFFA8522E602F52A7525A84592EA8FFAEFF
%FFAEF82726514A514A27A8FFAEFFAEFFAEFF7D2E2E277D7D278B602E7DFF
%AEFFAEFFFF5235843552FFFFAEFFAEFFCF7D275252FF7D528484057DFFFF
%AEFFAEFFAEFFAEFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFAE52598B606027
%AEFFFFAEFD05FF5259595927FD05FFAEFFFFFFA87D5252A8FF278484592D
%FD06FF527D845359595952FFFFFFAEFD05FFA8A8A8FF2784848427CFFD05
%FFA82E8B602E7DFD05FFAEFD05FF7D27608B2E52FD04FFAEFFFFFFAEFFFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAE522E845984277DFFFFAEFFAEFFAEFF
%AEAE525252AEFFFFAEFFAEFFAEFFAEFD04FFA8275984600583FFFFAEFFAE
%FF525984A884A82E7DFFFFAEFFAEFFAEFFAEFFFFA8055A84842E7DFFFFAE
%FFAEFF832E2E5258FF83FFAEFFAEFFAEFFAEFF522760845927A8FFAEFFAE
%FFAEFFAEFFAEFD10FF522E2E592E52FD0CFF7D7D58AEFD0BFF5827848484
%277DFD07FFA827A884A8842EA8FD0BFF278484845952FD08FFAE7D527DA8
%A87DFD07FF7D2E8484602E7DFD0CFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FF7D52527DA8FFAEFFAEFFAEFFAEFFAEFF7D2E595927FFAEFFAEFFAEFFAE
%FFAE522E846084277CFFFFAEFFAEFFAEFFFF7D27522E2752FFAEFFAEFFAE
%FFAEFFAEFF52598484592783FFAEFFAEFFAEFFFF7D2E845952A883FFFFAE
%FFAEFFFF273584606027FFFFFFAEFFAEFFAEFFAEFFAEFD04FFAEFFFFFFAE
%FFFFFFAEFFFFFFFD04527DFF7DA8FD04FFAEFD04FF52598B6027A8FFAEFF
%FFFFAEFFFF7D278B60842E7CFFFFAEFFFFFFAEFD04FFA87D7DA7FFFFFFAE
%FFFFFFAEFD04FF525984605952FFAEFFFFFFAEFFFFFF2E84848427FFFFFF
%AEFD05FF522E2E592E52AEFFFFFFAEFFFFFFAEFFFFFFAEAEFFAEFFAEFFAE
%FFAEFFAEFFAEFF7D2E608B602E838352FFAEFFAEFFAEFFAEFF7D272E2752
%FFAEFFAEFFAEFFAEFFA82E2E595927A8FFAEFFAEFFAEFFAEFFAEFFAEFFFF
%FFAEFFAEFFAEFFAEFFAEFFAEFF832E2E5327AEFFFFAEFFAEFFAEFFFFA827
%52277DAEFFAEFFAEFFAEFFAEFF7D52277DA8FFAEFFAEFFAEFFAEFFAEFFAE
%FD0FFFA82E8B848B2EA8A8A8FD0AFFAEA8A8FD0BFFA752525859FD1DFFAE
%7D7DFD0DFFA8FD0BFFA8522E5952FF83A8FD0BFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFFF5205592E52AEFFAEFFAEFFAEFFAEFFAEFFAEFFFFFFAEFFAEFF
%AEFFAEFFAEFF522E2E527DFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFA87D52527DFFAEFFAEFFAEFFAEFFAEFFAEFFFFFF
%AEFFAEFFAEFFAEFFA82E5984845927A827FFAEFFAEFFAEFFAEFFAEFFFFAE
%FFFFFFAEFFFFFFAEFFFFFFAEFFFFA87D83FD06FFAEFFFFFFAEFD07FFAEFF
%FFFFAEFFFFFF7D2E848B602EA87DA8FFFFFFAEFFFFFFAEFD07FFAEFFFFFF
%AEFFFFFFAEFFFFA82E8B602EA8FFFFFFAEFFFFFFAEFD07FFAEFFFFFFAEFF
%FFCF27858484602EAE7DA8FFFFFFAEFFFFFFAEFFFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFD05FFAEFFAEFFAEFFAEFFAEFFAEFFA87D58AEFFFFAEFFAE
%FFAEFFFF7D278B60842EA758A8AEFFAEFFAEFFAEFFAEFF837D58A8FFFFAE
%FFAEFFAEFFAEFFAEFF7D2E596027A8AEFFAEFFAEFFAEFFAE83587DAEFFAE
%FFAEFFAEFFAEFFFF520559592E52FFAEFFAEFFAEFFAEFFAEFFAEFD20FFA8
%527DA852A8FD09FF582E60352EAEA8A8FD09FF7D527DA852A8FD0CFF5252
%2E7DFD09FF7D7DA87D7DFD0BFFA7525858FD0EFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFD05FFAEFFAEFFAEFFAE52A8FFFFFF52FFAEFFAEFF
%AEFFAEFFAE7D525283FFFFFFAEFFAEFFAEFFAEFFA852A8FFFFFF52FFAEFF
%AEFFAEFFAEFFAEFFFFFFA8FD05FFAEFFAEFFFF7D52FFFFFF527DFFFFAEFF
%AEFFAEFFAEFD05FFAEFFAEFFAEFFAEFFAEFFAEFFAEFD04FFAEFFFFFFAEFF
%FFFFAEFFFFFFAEFF83FD04527DAEFFFFFFAEFFFFAE52FD04FF7DA8FFAEFF
%FFFFAEFD07FFAEFFFFFFAEFFFFFFAEFFFFAE52FD04FF7DAEFFAEFFFFFFAE
%FD09FF7DA8FD04FFAEFF58A8FFFFFFA852FFFFFFAEFFFFFFAEFFFFFFAEFF
%FFFFAEFFFFFFAEFFFFFFAEFFFFFFAEAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FF7D52A8A8F8FF7D52A8FFAEFFAEFFA852A8FFFFFF52FFAEFFAEFFAEFFAE
%FFAEFD05FFAEFFAEFFAEFFAEFFAEFFFF527DFFFFA852FFAEFFAEFFAEFFAE
%FFA858527DA8FFA85252A8AEFFAEFFAEA852FFFFFF527DFFFFAEFFAEFFAE
%FFAEAE5258527DFFFFAEFFAEFFAEFFAEFFAEFFAEFD11FF52A8FFFF7D52FF
%A852FD06FF7D52A8A852AEFD0BFFA87D7D83FD0BFF52527D7D277DFD08FF
%AE52A8FFA858AE83A8A883FD06FF7D52A8527DFD0AFF52A8FFFF7D7DFD0D
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF27FD04FF5227FF52A8FFFFAEFF
%FFAEF85227277DFFAEFFAEFFAEFFAEFFFF7DF87DA87D7DFFAEFFAEFFAEFF
%FFA827A8FFFFA8FF7D7DAEFFAEFFAEFFFF7D7DFFFFFF7D7D52FF7DA8FFFF
%AEFFAEFF7D277D277DAE7DFFAEFFAEFFAEFF7D52FD04FF52FFAEFFAEFFAE
%FFAEFFAEFFAEFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFF837DFFFFFF277D
%FF52A8FD05FF52A8FFFFFF52A8FD09FF27A852FFFF52AEFFFFFFAEFFFFAE
%2DFD07FF7D58FFFF7DFFFFFF58A8FFFFFFA8277DFF7DA8A8FD05FF52A8FF
%A852A852AEFFFFFFAEFFFF8352FFFFFFA852FFFFAEFFFFFFAEFFFFFFAEFF
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFA827527D527DFF7D52FFAEFFAE
%FF587DFD04FF7D7DA87D27A8AEFFAEFF7D7DFF52A8FF52AEAEFFAEFFAEAE
%27FFA8FD05FFA8FF7D7DFF52A8FFAEA827FFFFFF2752FFA852FF52FFAEFF
%FFA827FF52FF52A852A8AEFFAEFFAEFFAE527DFFA8527DFFAEFFAEFFAEFF
%AEFFAEFFAEFD10FFA852A8FFA8FFFFFF2DFD05FFAE7D7DFD05FF5252A852
%A8FFAE7DFF7DFF7D7DFFA87DFD06FF7D7DFF5252FD04FF7D27FF52A87DFD
%04FFA8277D7DA8FFFF52A87DA8FD04FF5252FF7DFF7DA8A8A8FFFFFFA8FF
%FFFF52527D7D27A8FD0DFFAEFFAEFFAEFFAEFFAEFFAEFFA8FFA852A8FD05
%FF27A8FFFFAEFFFFA8527DA8FFFFFF7DFFFF7D58FFAEA852FF27FF275252
%27A8FFAEFFAEFFAEA852FF2752FD04FF7D27A87D83A8AEFFAEFF8352A8FF
%FFFF7D52AEA8AEFFAEFFA8277DFF52FF27A8AEFFAEFF7D7D7DFF277DFD04
%FF27A8FFFFAEFFAEFFAEFFAEFFAEFD04FFAEFFFFFFAEFFFFFFA87DFF7D7D
%FFA8FD04FF52AEFFFFFFAEFFA87D7DFD04FF52527D52A8A8FFA852AE7DFF
%A852FF7D58FFFFAEFD04FF7D7DFF52FD04FF7D7DA858FFFFFFAEFFFF58A8
%FD04FF52A8FD06FF7D52A87DA87D527DFFFFFFA87DFF7D27A8FD06FF52FF
%7DA8FD04FFAEFFFFFFAEAEFFAEFFAEFFAEFFAEFFFFA858FF52FF5252FD04
%FF52FFAEFFAEFFAE83527DFD04FF5283837D52FFAEFF7D83A87DFD04FF52
%83FFFFAEFFAEFFAE525252A8FFFFFF525252FFAEFFAEFFAEA852A8A8FFFF
%FF52FFAEFFAEFFAEFF2752A852A8527D7DFFFFAEFF7D52A8FF7DA8FFFFFF
%A87DA858A858FFAEFFAEFFAEFFAEFD0CFFAEA8FF52FF7D52FD04FF7DAEFD
%05FFA8277DFF7D7DFF7DAEAE7DFD07FF58A8FD04FF52FD08FF5227FFA87D
%FFA852FD07FF837D58FFFFFFA87DFD07FFA827FF2D527DCB52FD05FF8358
%52277DFFFFFF7D7DA87DA8A8FD09FFAEFFAEFFAEFFAEFFAEFFAEFFAEFF7D
%52A87DFD04FF52FFAEFFAEFFAEFF527DFF5227FF7DA8FFFFAEFFAEFFAEFF
%FFA852FFFFFFA852A8FFAEFFAEFFAEFFA87DFF7D27A8A87DFFFFAEFFAEFF
%FF837D7DFD04FF52FFAEFFAEFFAEFFAE7DFF2727FFA87DFFFFAEFFAEFFAE
%AE7DA8FFFFFF7DA85283FFAEFFAEFFAEFFAEFFAEFFFFAEFFFFFFAEFFFFFF
%AEFFFFFFAEFF58277DFFA8FFFF7DAEFFAEFD04FFA87DFF58A8A8A87DFFFF
%FFAEFFFFFFAEFFAE7DFFFFFFA827A8FFFFAEFD04FFA87DFF7DA87DFF52FF
%FFFFAEFFFFFF7D7D7DFFFFFFA87DFD04FFAEFFFFAE52FF587DA8FF52FFAE
%FFFFFFAEFFFF7DA2FFFFFF52527DFD05FFAEFFFFFFAEFD12FF2DA8A8527D
%FF52FD07FF837DA87DA8A87D83FD0AFF52FFFFFFA85258FFFFFFAEFFFFFF
%7D7DA87D837DA87DFD04FFAEFFFF7D27A8FF527DFF52FFAEFFFFFFAEFF83
%7DA87D7DA8A852FFFFAEFFFFFFAEFF52FFA87DFFA852FFAEFFAEFFFFFFAE
%FFFFFFAEFF7D587D7D7D587D7D7D58FD047D837D52FF7D277DFF7D58837D
%A87D837D7D7DA8527D7DFF52A87D837DA87DA883A88352FD04FF2752A8A8
%83FD04A87D7DFF527D7DFF52A8A8A883A8A8A87D277DFF277DFF52A8FFA8
%A883A8A87D7DA8587D7DFF52A883A883A8A8FFA852FF7D27FFA87DAEAEA8
%AE83A87DA87DA87DA87D7D837D837D837D837D837D837D837D8352FF527D
%52FF527D83837D837D8352A8A858587DFF5283837D837D837D837D832DFF
%2752FF5258A87D837D837D835283A852587DFF527DA87D837D837DA852A8
%A85252FF528383A87D837DA82DA8527D587DA85283A87D837D83838352FF
%527D7DFF2DA883837D837D7D587D587D587DAEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AE837DFF7D8358FF7D58AEA8AE83AEA8FD047DA852A858AEA8AEA8AE
%A8AEA8AEA87DA85227FF7D83A8AEA8AE83AEAE7D52A858AE27A852AEA8AE
%A8AE83AEA87D7DA8587DA87D83AE83AEA8AEA87D2758A8AE2727527D527D
%A8AEA8AE7D7DFF58837DFF5883AEA8AE83AEA8AEA8AEAEAEA883AEA8A883
%AEA8A883A883A883AE838352FF2DAE2DFF7D5883A883A883A883522DA883
%52277D588383A883A883A883A852FF5852A87D58A883A8837D528383522D
%83A858277D7D7D83A883A883AE58A87D7D52FF52A883A883A883A8837D83
%A883837DA87D837DA883A8837D7DFF52A852FF52A883A883A883A883A883
%AEA8A8AEA8AEA8AEA8AEA8AEA8AEA8A87DA883527758AE7D527D7DA883AE
%A8AEA8AEA8AEA8AEA8AE7D7D7DAEA8AEA8AEA8AE837DFF7D2DFF7D7DA8AE
%A8AE83A883AEA8AEA8AEA8AEA8A883AEA8AEA8AEAE7D7DA87D58A858A8AE
%A8AEA8AEA8AEA8AE83AEA8AEA8AEA8AE83AEA8AE52CBA87DA87DFF7D83AE
%A8AEA8AEA8AEA8AEA8AEA883AEA8A883AEA8A883AE83A87D587DAE525283
%A8837D58A82D5883A883A883A883A883A883AEA8A883A883A883A883A858
%FF7D52A87D52AE83A883A883AE83A883A883A883A883A883A8837D588383
%5827A8522758AE83A883A883A883A883A883A883A883A883A87D7D835852
%527DAE527D527D588383A883AEA8A883AEA8A8AEA8AEA8AEA8AEA8AEA8AE
%A8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AE83AEA8A8
%83AEA8AEA8AEA852FF7D277D527DA8AE83AEA8AE83AEA8A883AEA8AE83AE
%A8AE83AE585858AE8383A8AE83AE83AEA8AEA8AEA8AEA8AEA8AEA8AEA8AE
%83AEA8A85283A85858AEA88327FD047DAEA8AEA8AEA8AEA8AEA8A8A883AE
%A8A883AEA8A883AEA8A883AE83A883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AE83A883A87D7D52A852522D832D5883A883A883A883A883A8
%83A883A883A883A883A883AEA8A883A883A883AE83A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8AE83A8A8AE83A8A8AE83AEA8A883AEA8A883AE
%A8A883AEAEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA883527D7DAE83AEA8AEA8AEA8
%AE83AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8A8A883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8A8AEA8AEA8AE
%83A883A883A883A883A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8
%A8AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEAEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AE83AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA883AE
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEAEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8A8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEAEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEA8A8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8
%AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA8AEA883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8
%83AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AE
%A8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A883AEA8A8FFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFD7FFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Печать</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-06-08T13:40:14+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-06-08T13:40:14+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-06-08T13:40:13+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>168</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAqAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Q5S0OxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVQur60tPR+syrF68qwQhju8j/ZRR3O2Kq+KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVBaVqsGpRXDxK0b&#xA;W1zPaTRSUDq8EhSpAJ2dQJF8VYHCqW+YdButU13y1dAr9T0a9mvrhWNCzmzmtoqChrQ3JbqOmKU/&#xA;wIaVlYVUgipFRvuDQ/jireKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2Kpf5g17TPL+iXutapMINP0+Jp7mU70VR0A7segHc4VebWunebvOsH6a8z6leeW/L9&#xA;x8dh5b02Q2ty0ZHwNe3UdJjIy/ajRlVem++ajP2kADIGoD+Lqf6v697927scWk6HeX3e9Qf8t/J6&#xA;Ei0jvrcAUjlTUr9Zht19RZw1c5vJ25qOImMjw+Yj+p2cdDjrcb/FRmtfzA8txvc+X9Zn1+xUH6z5&#xA;f1yX1mlQ7MLe/IE8T8enqF1r1zY6P2iJNZht3j9I/U4ubswVcHonkHzNoHmLyvaX2hxG1s4h9VfT&#xA;2URyWksHwPbSIPstHSlPChGxGdSCCLHIumlEg0WRYodirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVUorq1ldo4pkkdPtqrAkdtwDtiqrirsVdirsVSXVPKenXs8l5BNcaXqUlC1/Y&#xA;SmGRmUcQ0qHlDNRRQetG+G1thP5pW89x/gTypf3bXaalq6PqdzIqR/WI9Ot5LsiRIwqANLGjcQKb&#xA;Zia7JwYZG65D3cRAv7XI0sbyBkGo3Qnnom0MfwRKOlB3+nOE1+p8SdD6I7B6LBj4Y78zzQmYLc09&#xA;ODV6UNcI5qkHkCS40rz95ptrKA3EWoabaaqtkjKha7ieW3k4lyqK0yLGCSeq753HYGUz09H+GRHw&#xA;5/pdD2pADJfeHpOmahq9y9LzSnsE33kmikPTbaIt+vN261MsCuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KvMPNPn7XtS1m90HypKljbac/oap5gdBM4uAKvb2cTgxl49g8j8lU/DxJBpdjxcW7Rnzj&#xA;H5ljkvlaK4b1bzVtZurrr9ZbVb+NgfFUhmiiTxoqAe2ZIwxcE6zJ3/YiLLzf5q8kzJPqGoTa/wCU&#xA;uVL0XlHv7KMnedLgAGeNOrrJV+O4Y0plOTDW4crDquI1Lm9V1LzRounahYWF1PxudSSea2CgsPRt&#xA;Y/VmldhsqKCo5HuwHfMdy6eOvc6n59X9M6/PMuhXf7zSfLsbtFbi2Y1iluwhUzyyLRirngtaBa75&#xA;l48Iqy4Go1RB4YoO08o/l5qMH1jQ7ayt5ImKxanoxjt54ZF2qlxa8WVlPavzy3giWjxssDuT8XpX&#xA;5T+ZtV1XSr7S9am+s6zoFz9TuL3iF+sxMiy29wVXZWaN+LgftKcwZxo07PHPiiJd7OcgzdirsVdi&#xA;ry/837yyeHRPMFlcRz/4V1yGPV2iYP6EV7G1nMr0rRk+tRsy9QvXtmJ2hh8TBOPePu3cnST4MgKa&#xA;55u9O7FVC8k4xce7bfRhCQhPyljbUfMHmjzFubUSQaJYk9CLD1JLhx2IM9yyV/yM73sXT+FpxfOX&#xA;q+fL7Hne0cvFl92z03Nq4DsVdiqG1PU7DS9OudS1CZbaxtI2muZ3+yiIKsTTf7sVeYXfnXz1rsnr&#xA;6dInlvSjvbI8C3GoSLXZ5RLWGDkP918HYd2B2zJhp+9w8msETUd1D/Gf5geXwb+5u4/MmmRfFeWb&#xA;28dveCIfae3lg4RMyCp9N4/i6chhng22XHrATUhT1fT7+01GwttQspRNZ3kSXFtMv2XilUOjD2Kk&#xA;HMVzERirGvMX5jeTPL119S1HUVOokBhptrHLd3ZB6H6vbLLKAexK0yQiTyU7blL9O/OLyFeXcdpN&#xA;dz6XcTsEgXVbS609ZGPQJJcxxRsSdgvKuJgRzQJA8jbNcil2KuxV2KuxV2KvBNO0/wAzeT4X0XWN&#xA;D1C7SKed7fV9Mt5dQiuUmmaX1ZFtxJNFIS55q6dehOZePKAKLg6jTSlLiCC1TRNYGh33ni/n1TSd&#xA;QfUrKz8raLKzQK9u0sMUiz2TUq1wzSsQ45KiqdqZE5CZbNscEY46kBdbpr5xvrWz8vahPdUMEVvK&#xA;8i+ICEcfm1aDMmXJ1mMEyAHez/TfIkV35f0hNULRX8Xl19CvOO7hbqKATEOa0ZWg8N6+2a63e2xK&#xA;f8pvOUujtpWq+ZrCz0SOAwXd3Z2ciXT2qpxYh5p3jgYoDVqPTqMuOc1TjjTQEuLdJdAksLvUNV8y&#xA;abaJp+i6kLa30a1RPTL2ljGYorlloKGcNVVpsgXvXL8MSA4mtyAmu5mn5IWbS6JqnmV608w3zzWn&#xA;/MJaqLWBqf8AFnpNID4MMxcsrk52GHDAB6PlbYwDzz5+1G31U+WPK4hfWVjWXU9QnBkg0+KTePlG&#xA;CvqzyipSPkKD4m2oGtx4+Jqy5RAWWKPYeYpyJLvzZrMtzuTLHPHbLyI7QwRxxUHYFTmT4EXBOtn3&#xA;BG6X5z1zR7qHRvN92dX8u6q62UWtFVt7q2lnIjjjuzB6SNHKx4iVFUqxo3XkKcmHh3Dl4NQJ7cpP&#xA;Rrjyl5dm8s3HllbGKDRLm3ktZLOBFjQRyqVbiFGx3rXx3yi3It5r5O1O/htLnQdbYvrfl6c6ffTE&#xA;f3yooa3uadaTwMj/ADJHbOA7X0fg5zX0y3H6vg9No83iYweoT572ID4QWP3DNXTl0xrzXqmpCK30&#xA;3SaN5g1qUWOkId1SRgWedx/vuCMNI/yp3zY9l6L8xlAP0Dc+79rj6vOMUL69Gfaf+XOh2Gh6JpNt&#xA;cX1vHoSFbaa2u57ZpWcVlkuFidY5mkertzU7k0pU56E8uSkWu/mtfW1lqR0vSfWuf0k2h+X3uJeK&#xA;3l5B6gvJnjVQyW1q0TguGJcqRRdiZRjZpjMiIssXfTPMt+pl1vzTqtxdPu4sbh9Mt0P8sUdmYm4j&#xA;/Ldj4nMsYIh10tbI8tlx81eaPJHHVZNTudb8swMp1awviJ7mCAmj3FtcUEjekPiaOQtyANCDleTC&#xA;KsN2DVcR4ZMp/Ou5K+V9KnKvNov6VtJtXliDSIlrGrzRyuEDVjFykNT07nbKcdcW7k5ATE1zYN+l&#xA;NP8AN2q6ToXl7VGu1ubxDqtxpMoZobOON3kZ7iMOsVWCL1BNaDrmTlyUNi4OmwHiuQ281+j6hLb+&#xA;XbttQvPrUenXV9ajUnAUzW9lcywrMwG1THFUkdevfJwlcbLTqIATIi9Q/KuzuLT8uPLkNwhil+oQ&#xA;yGFtjGJV9RYyP+Kw3H6MwDzduUN+aPmq+0XR7XT9JkEWva9cfUNNmIDeiODSz3PE7H0YUZlB2LcQ&#xA;dslCPEaYzkIxJPR5+kWheU9IL0cI0iiSTi893dXMzhQW4hpZ5pXb3JOZ20Q6gmeWXeURb3eka/p9&#xA;zA8JlhDNb31jdwtHJG4oWjngmVXQ0INGXpQ4QRIIlCWM77FP/wAkdRvEs9a8sXE7XMHl+5iTTZJG&#xA;LyrZ3MIlihdmqzek3NVJP2aDtmFljUna4ZmcBIvTMqbXYq7FXYq7FUFrWsafouk3mrajL6NhYxPP&#xA;cy0LUSMVNFFST4AbnCrxq41HU/M+rxeY9djNtBbcjoGhEg/VVccTcXFKhrmRTTwjX4RvyJzMWKty&#xA;63VakH0x5KvkrRJvPPmRtQuRTyp5fu+Kqa/6dqNuQaf8YLZ+v80g8FNa82ToG7SYOEcR5l7bmM5j&#xA;FfzT0nVtX/L7XNM0lGlvbq34CBG4NLHyUzRKx25SRBkFe5wjmoeP6jqep6zYXGjaFpGpHWLiFra3&#xA;tnsLq2itpJFKKbiWWOOKJYyatVunSu2ZsssadZj0k+MGXK3vmh6Vb6Roun6TbALb6fbRWsSjYBIU&#xA;CL+C5hOzR2BXlnmH8vfNun+ZdT1rystpqFjrUq3WoaXeSvbTR3KxLE0lvOEmVldY1rG4FD0ahoLs&#xA;eXh2aM2AZOtFh/mbRrnSLWS/1q/eL8wNQuYP8MeXrC7lljito2QSLNEnpxSI/wC8aaWRKKKBWqBW&#xA;XiSlLZAwQjCj813n2U3dja+XrUerquuXUNpYwLuxb1Fd5KdlhjUyM3amX5TUXC0kScgPc+gcwHav&#xA;F/zt8sajH5v8seYtF1STRZ9SlfRtTnjjWZJaQy3Fn6kTkK3FkkTkd/iFCMqzaPFqBw5Bbdi1E8Vm&#xA;KVGw/NOEcf0vo00Q63EtjcrJ8+CXXDNcfZjT3zn8x+pyB23OuQTr8ldD1O+8y695o1y8XUZ9OcaL&#xA;pMiQ+hFGoSOe8eOPlJu0jpHy5E/ARmdptDj0wMYdebRm1Us1GT2PMhoYd5v/AC6j1mOxl0m9Gjaj&#xA;ps11PbT+gtzETfNzuRJEzIT6j/FVXU/Rk4TMTbGcBIUXlXn7ybHakWnmnUoPMXmK7tZ4PLOgafby&#xA;WccM0tF/SVwzT3DAQcdmYgDcLyY5ZxymWuEIYgS7zC1/Y+TINE5nU9dvbeLSrcftXN5NH6QYg12L&#xA;VkfwUEnMmZqO7rsUePLtyu/g970mxNhpVlYl/UNpBFBzpTl6aBa096ZgO3Y5+a3mO68v+SL68tJV&#xA;trqYx2cN854x2puXERuXY7AQqxffaophiLKCaFvH9LttH8yxaT5P8tMNR0oTW0OoyW/76CPToHV7&#xA;n1rhf3fKaNDH15Fm6d8yskwI0HAwYpnJxyD6Ktri2uIEmtpUmgb7EkbBkIBpsVqO2YbsEk85eSdH&#xA;82afFa37TW89rJ69hqNo/pXNtNxK84nIYbqxVlYFSOowgkckEAii8/1ryxofkprDXvNvmXUNbFlc&#xA;iTRtHWC1WS5vFB9FVjt4kklkWpI+JUH2mpTLDklLZhDFCG4FMeudXu9Pi1zzf5jRbW/1eVJn062/&#xA;e+ikUa29tbow3lmZVWpGxc0ApmTCPBHd1+efizEYvRfyh8oanoOgXN9rahPMGv3H1/UYVPIQAosc&#xA;FsG6H0YkAJ/mr2zEnKzbsoQEQIjozvIMnYq7FXYq7FWMfmPqeg2PlK7GuWDatZXpSyXS0UM1zLOw&#xA;WOMFiqr8W/MsONK9slEEnZSa3eH3OlR6dC8+p2Gr6b5d4N9aGm66b+a1h7t6d1ZpJxVevpzswH2a&#xA;5kGMwObiRyYZS5b+57T5VvdA0XULLyLpFk1tp8OljUNIuVcSQz24lCTfESX5q8yMxb7XOteuYxcw&#xA;suwIdir5v13zTZ3Gu67/AI01u403WLC9uYrPT1vbiwW3tEkK20ttFFJF6plj4v6gDFiaf5OZWOMK&#xA;3cTPPKJVAbPZvytv/MGoeQtJvPMCzLqcqSlzcoIp2hEzi2eZABxkeAIz7dScxpc9nLZVgVhX5vea&#xA;Na8t+TJb/SOENxJPDbS6lKvOKximbi926U+IR9q/DUjltXJRFlBNC+bymOTQvLOgahr9sW1CX0Hu&#xA;r7V5ZPrF1eFFLVec8q8iNhXiOwGZwAiNnUTnPJMA9/yel/lr+XMmjsfMnmFlu/N1/EBK/WKyhajf&#xA;VLYHoAftv1c9dqDMKczIu1x4xAUHoGQZpH5y8paf5q0KXSrx5IDzSe0vISBNb3MLc4ZoyduSMO+x&#xA;Gx2OEGleeyflz+bMjfVW1nR/QHw/pMwXLTFaU5/VeYjD/wDPWmW+K1+FF6B5H8o23lPy5b6NDcyX&#xA;rxvLNdX0/ESzz3EjSyyMFoBV3NB2FBlRNtifYFdir54s9YtLTzL5kl1+5ig81TahcC7S5cI6Wccr&#xA;LYpFz4kwfVwrKV2JJJ3rmbhIAddrBMy5HhZZ+UeiDXNXuvPN5+9tYGksfLIP2PSAC3N4tdmMz1jR&#xA;h+wu32jlGadmnK02LgjvzPN63lLekvnW712z8o6vdaDF6+sw2kr2MYXmTKFNCqftsOoX9o7d8IUP&#xA;BZNetpxCPLHmO/1TzrM8ZtVW9uZpzOWAP1qzD+lHEP8AdiPGqKvYUzKlGAi4eOWYz3Gz6C0jQ7fT&#xA;LnU5oGPDUrr62YAOKRMYY43CKDx+N42kYgCrMSfHMVzEywK8X/MnTvM9p+YreZLnSbrVdDgsIrbS&#xA;biyVJxZu7MbvnAGEoaSifvFVvh2rl+GYHNo1GOU41FA+WNP1LzT518t3jaPqCaJpc8uoXVxf20lp&#xA;EZY4XS2KrMEd3SdgwAFBSvhWWbICKDVpdPKBJk92zGcx2KuxV2KuxV2KpH5z8qWnmnQZdKnnktZO&#xA;cc9pew09SC4hYPFKoOzUYbqdiKjvhBo2gixRecz/AJS+f9SiOlatrVgNJnHpXt7aRTpdyQmquscT&#xA;s8cTuu3Pm3Guwy85yQ48NJCMr3eq2uj6da3CXEEISWK3SzhNSeEEZJCLXpv18aCvQZQ5KNwK7FUt&#xA;k1jy42rJYSXtmdXSvpWjSxfWRUb8YyefT2wqmWBXYq81/MrzXr6eZLHylpV0ulx3ljLfXmpGOOaV&#xA;kWRYRBbrMrxA/FydmVqClBvXLcUOItWfLwRt5/oPlPy/onnbSE1OytNc0/VrwQB57S2huba84GWG&#xA;X/REtoZkZoqMHj5DY17ZZlx8IsNen1JyGjze5eVfMDa7pkl3JatZTwXV1ZXFszCTjJaXDwMQ4ADK&#xA;3p8gadDmO5JTjArsVS1fM3lttROmLqtmdSDcDYi4iM4YbcfS5c6/RhWkywK7FXYq8U806rqvmHzN&#xA;qsQv7CK10W6NpZ2zafb3kiuiIzPO9yJGBLsaLHw+GhrvmTjxAi3Fz6rwzVPRfy58yy+Y/KVrqM0E&#xA;dvcRyT2c6QV9AyWc72zvDX/dbNFVR26b0yiQo05INi+9k2RSp3NzbWsD3FzKkFvEOUs0rBEVR3Zm&#xA;oAMVQul63omrRvLpV/bX8cZAke1mjmVWI2DGMtQ4VR2BXYq8K88tbav+Z+q6P5rHr2FrDayeW9Lu&#xA;am1mhaLlcXCwn93NIJyyEsCVAHSu+TgiC4mrnKIHDyU/J1naad+Y9t5e8v8A+iaPrdhenX9KtC0U&#xA;capGqw3caxlRbvzb0+a05V8VqHPEBdHklIG96eu+SbTXLPyrp1nrkrT6nbRmKaeRg0jqjFYmkYEh&#xA;pDGFLnu1cxy5ZTzArsVdirsVdirsVYdqP5hyHUb+w8u6Lda++kFl1a6geKG1glVOZg9aVl9ScKRV&#xA;I1bjX4iMkIshG0q0H86bG+0ay17V9Dv9E8u6kA1lrc/oz2gUtwU3LW8kj23JtqyqF/ysTFTAvRVZ&#xA;WUMpDKwqCNwQcixYr+aWqahpnkLVbvT5mtrnjDCbtNmginnjhmuFPYwxSNJXtSuEJHNFD8r/AMvx&#xA;ojaMNCtBZspVm9JfXLHf1fXp6vq8vi9Tly5b1rlrch/yvvtQvvIWj3OoTNc3JiZBdvu88UUjRwzs&#xA;e5liVXJ71rlRaTzZTgQkHm7yTofmq1hi1FZIrm0YyWGoWz+lc27sKMYnoRRhsysCrdwckJEckEAi&#xA;jySTy7+Uul6VrdvrV9ql9rd5Y8v0ct79XSK3Z04NIsdtFAGlKMw5PWlTxAyUshlzYQxRh9IpmlrZ&#xA;2tpE0VtEsMbSSTMiCgMk8jSyt83kdmPucrbFbFWK/mje3lj5C1e5tLiW0dI0E15BX1YLd5UW5mSn&#xA;Ro4Gdwe1K4Qkc0VD+Xn5dny0mkR6LYPofpgqvpoylaVE3q/aLn7Xq8uVd613y1uUfy0u7y78haHc&#xA;Xlw93M9qtLuXeSaMEiKVj+0ZIwrFu9a5UWk82TYEITVdX0rSLJ7/AFW8hsLKKgkubiRYowSaAcnI&#xA;FSdgMKsOk8v/AJReedVnvEWz1HVkjVbuS1neG4aLohnEDxu6dlL1HhhshSO9Hab5w8o6Zr0XknTr&#xA;WW1jsfTsoZYbdl0+O4MP1hLJZV+ETfVx6nGlKd+W2Ck0ebLsCGDa1aWWsfmrpOk60iz6ZZ6XNqWm&#xA;2MwBhnvhOkTyFD8Mj20TDiD9n1OXWhycWcF3n3TdO0rV/LOtaVDHaa9Nq1rp1YFEbXVncMRdQyhR&#xA;+8SOHnOK/ZZKim+SlyZS5M3ypqdirFfPlz+XBt7aw86GwlWdi1jaXirLMzr1eCOjS1XuyDbxwi0i&#xA;2/IUH5cpZ3EnkqLT0i5iO+axRFl9RRstxQCTkB09TfE2pZTgQ7FXYq7FXYq7FXYq8v8AIHnryT5S&#xA;/THk7X9as9N1bS9TvZ5bi9nigS6jv7mS8ilErlUMgjnCOhPJSvhTLQ3A7Jf5Xh0R/wAwNb8xeXHS&#xA;y/KxNJf9O8lZdKvb5mZ5ZreJx6RRIB+9ljHFum9ScKWW/k/DPH5AsOUUtvZyy3c2k2txX1YdNlup&#xA;XsYn5En4bVowAeg27ZUebTLmmfnrWbXTfL8sUtkuqXGqMNNsdJcgLdz3QKiBiQQEK8mkJGyBj2xA&#xA;UC2CWP5I+fF8mR+Xb38yNTeIW3pNBFDAIw/Dj6frMpuXgH2eBcVXwy1uZZ5U83WkXk9rjXvq+kXW&#xA;hOdN1qBPgghubfjGFiHXhKrI8Kjcq6jrlRG7SRun+ha/o+vacmpaRcrd2TvJGsqhl+OFzHIpVgrA&#xA;q6kbjFFJX+YfmS68veU7290+P19ZmC2mi2tORmv7k+lbIF7j1GDN/kgnEBIFsE8k+T9autX1zSdY&#xA;1u6l8waVBZzf4isb+/PpXt2srPbTW80zWcvpKkcnFYFjKuvwDLKbaD0DyFr93r/lDTNWvERLyeMr&#xA;dCOojM0TtFI0dd+DOhK+2VlqIT53REZ3YKiglmJoAB1JOBDAA9z+YjhxdPYfl6zNCrxSNBcay5PE&#xA;hJF4vHZncAowebtRPt2CLZGKZSfkz+X76Y+ki1votIkXg+lwarqkNmUPVfq0VykND3HHfJM0FY6y&#xA;fKN9b6ZeX41HyjPN9Q07WWkWSSwu4z6f1G+kGxDMOEUrfEG+B/iKsYSi1yiymw12C71rVNIEMkVz&#xA;pfoM7Px4Sx3KFkkjKkmnJHQ8gDVfChyLBjWqRWtx+b+hx6uEa0g0u5n0COWnBtREyCd1B2M0dvx4&#xA;dwpcjvkotkED+dPmPTfLk/lPVQjy66NWjhsbW1X1Lu5tpUZLqBI13dWVl2Pw8+B60yRDIi0JYade&#xA;22p+TtEvgq6/dXt95t8xKjBxEDDLF6fL+VJb2KFD3WM0wHkxlsGf+XNah13QNP1mCNoYNRt47qKN&#xA;6cgkqh1rTbocg1lg35tW1vrmu+TvKdvPJY6zqN/JdxarasEu7K0soWluZIJNyjS/BF4Hkag0yUWc&#xA;EHpdnBp3nrRNdj1K61zSvMUd1pem3Wru0sum6hbrLKyQA+mFW4jglWTYPWMDlQ0wyTPkznyPrd/r&#xA;XlezvtRjji1NWmtdRjhqIxd2c72txwDEkL6sLcQT0yBaynuBWC+Rvqp/MTzq+qFR5l+sQJZRyU5j&#xA;RVt4zbm3ruY2nMxk47epUHtlkeTbHkqam1s/5xaSul0N7DpV2fMbRU2t3eL6itxT9r1BIYgd6c6b&#xA;VxkifJm2VtbsVdirsVdiqyeZIYZJn+xEpdqbmiipxV5/qPmXzNrflPy7Z6eBput+cxVLqE8hp9i6&#xA;G4kmBYjlPHbFUWm3qmv2RkgN2QG6efl+PIA0vUPL/lVI5bLQ7trDUhxLcrxArymWRx++kq3xvU/F&#xA;ljagPzIgfWPMXlLyrPvo2pXNze6vDUj14tOiWSK3anWN55I2cHqFp3wSLGR2ZsAAKDYDKmp5T+b8&#xA;ks2u2VrDI0c1vo2ptbyKQGjutSns9Kt5V3qGVbyajUpk4s4PXURURUUUVQFUddht3ybY8E067a60&#xA;W38zT+VRH5q0znYv5u1O7t00lGsJHsv0jOn1ktJJF6JNDDz5bKwWjYLYkvUfy8tLS18p2cdos5t2&#xA;Mky3V4OFzdNNI0sl3KhClGuJHaXiezDYfZFZay8/8uyz21v5AvNXEkEXlee50jzJDOrVi1a4hW3g&#xA;vXJ29OR3fjIKik4PStJDmzjzVdK8h/nTZ+W/M2iafrWm6XJdalfz2WqPbPNeXMd0fWSZp1nojH1P&#xA;S5PCXTjsCArGbNnH5cajpt75O0+Owszpo09P0fc6Uxq9pcWn7qW3Y9+DLs37Qo3fKi0kbp/f2cN9&#xA;Y3FlNUQ3UTwycTRuMilTQ770OBDwrzUEg0fy9pGv3kVr5k/Lm+sr61tZGSGPWNNtJo2WayEhVTcN&#xA;FBw4qeSvyT7Lg5aC3A2+hMKXzrpltDr3+NtDsWtpdT84aheaa2n29GaysYNQujPqmpcGIWf/AEgp&#xA;CrULBIl3HLiCaQTT3DTdCtLDUL6/jZ3uL5YI3ZzXjFbR8I0HsCzt82OVtLD/AM24NN1iLTPLF66W&#xA;0F00uqahqZoJbKx00I089u5qY5meaOFHH2Q5O9KExDKAZZoPkXytocqXNjZB9Qjj9EaldPJdXnp9&#xA;1+s3DSS8T/Lyp7ZY2sP8naNJ5rsdc82X88sE/motaWZj+CS30W3leOCGM9UadC8ruDUM+32Rlci1&#xA;SO70K3t4La3it7eNYoIUWOKJBRVRRRVUDoABkWLw/R/N+m3HnzXfzEvpEltdE0q+9C2Vg0kUC3Yt&#xA;LOKg5cZZ5LS6enX96oPQZaA2xFBdIdZ0++8m+XS4ZfLUumXXmLifh/SuuXZXgG6/u1ec8e6yLXti&#xA;eSZcntGm6baadbvb2q8InnuLlh/xZdTvcSn6ZJWOVNLzvy95j/MJlItgNf1ayAs/Mnl28ktrO5sr&#xA;wKWjubeaOGJJLS4HxDkpPGhU1DJk+Fs4QeSM8ufl55T8wyXGs+aZrPzd5mhne2vp1czWdhKoVmsr&#xA;SEsViWIMKkj1GJ5N1oJAMgKUdX8u6J5L1h9T8k262upxwfXtd8t23LhqGnRt6ckscRPBbmEnlGy0&#xA;LfYb7QISLQRbKdN83Wuoa5bWFtH6thqGlx6vpepo1Y54mcK68CAV4rLEynfkG7U3rpqpP8CuxV2K&#xA;uxV2KsT83eVLubTtNu/LIitdc8uSevosclVt3TgYpbOSleMM0R4bfZIVh9nJApiaY1+XHmjRNE8s&#xA;eY/NWpWcmgaTrGv3E1vYOhnuDdFIre6VRb+qZS95BNx4r9kV6dLG5PvMt7a3Hnb8vtRtXWe1vzqE&#xA;VvcIao8c9gblStOvJbeoPhkZcmM+TM8ramA/mj5b0+9uvLOsEyQ6hY61pkImhYr6tvLqEDvbzDo8&#xA;ZkiR6HoygjvWUSygd0vmvNbf8yZ9bGp3g06y1220BNKWVxZvby6Yskjtb1CGT63dKfUO9Ep02yd7&#xA;s73T/wAl6fp91p2p2d5bQ3K2HmDVJ4RMiyBJZb6W7SReYNHX6xsw6ZCXNhLmy/IsUNqem2Op6dc6&#xA;dfwrcWV5E8FzC/2XjkUqyn5g4qlP5Z6jd6j5E0e4vLg3d2sJt57pt2le2doGdqftMY6t75c3sV8p&#xA;6tcRfm95q0iVEi+uA3DRR1AL2SWvG4I6cpbfUYY2Pcw/PISYTD0nINbBvze0vSb/AEHSlvrdJZl1&#xA;7REs5mRWeJptUto5ChI+HlEWU+OSjzZR5pVqmrar/wArNfUU1K4W00jV7DQZNMV2Fo0Go2AmZ5Ix&#xA;8LSm4uoirnpxC9zk73bL3T/yRawWfmLzzaRRLGP02tyCqheQutOtJmJp1PrNJ1yEmE+bL8iweR/m&#xA;U8N158TSpuJF5YaVaIhYgmK916FboBa94oPDJxbIPT4/NflyXzHL5aj1CF9egh+szacGrKkXw/Ew&#xA;7f3imnWhB6ZNmkH5T+l/yrby4sXH00sYkULSg4jjx28KUyo82k82WYEPEPNnl7S5rX8zk0uJbK61&#xA;7V9D0VZbfiha+YWsgmHEj4ka+5v/AKrHrXLBybY8kbBp1ppf5WmS4eS81a1822J1i/mYvcXN1beY&#xA;re3E8jE9Xt0TivRVIHbD0T0exZU0pFr/AJJ8s69cJdajaubyOJ4FvLaeezuPRk+1EZraSGQof5S1&#xA;MIKQaY7+UkflrQPKuo3MBtdJ0i+13UFslZlgiIhuTYwhebbs62gI7nLA2jkgvNcfmdvzXlg0W3WL&#xA;UtR0GK10/W5WBgsLVLt21CX0q8pZ2aS2EaU41UEsACCk0pNM20LyvpGiW9jBZRtTT7CDS7V5GLst&#xA;tbCiLU9225kfaoK9BlbTabYFdirzL/Bmnf8AVx1z/uO6z/2V5HiLDjLv8Gad/wBXHXP+47rP/ZXj&#xA;xFeMqT+U9NBouoa4T4/p3Wf+yvHiK8ZVF8vwKoUahq9BsK6xqjH7zcknBxFHGWMWlvDe+Ufy10iS&#xA;W49O5m1LW2cXEsc7BFmAczIyzbtqKmvP51y6RoN8zUVw4Tflz+XUbyywy6Lr02il4ZpYZlW0gv8A&#xA;TgqyQtHItRGnfp7YyOyZH02yj9Cxf8t+q/8AcV1H/soyniLj8ZSbzJaR6Z+iNUeTVbyz0/VLO6vo&#xA;hdahf8YYpeRk+rGWYuI24seKE0GShLdnCe+6UzPMba/8420GqyxnzHFq8Vgj3aSTWUN5CruLB3Re&#xA;RtomZVZAxFBkuL1MuP1Jnpdxpera75h1OK+v7O21TUFudOgN5e6bK8P1O2haRrRZIGWtxFIFLICQ&#xA;B2pgnLfZGSW+ydtokZFBqGqj3Gq6j/GfIcRa+Mq4spgABqOoUG297ck/i+PEV4ywTUvMnmzyr+VH&#xA;liTy/em2jtr7Wri/lZUkeeLTpLy59BvU5bS+keRG/vl97OTezJdb0ey/5XVq2oxSzRXN3oOmyR3N&#xA;tLJDVGuLqOReUbDlX0IjkchphlNJjeBbO1lurnVNQjghUvI/1y5NAPYOTlfEWnjLG9d1G0u7LSdT&#xA;sL671mwsNY026v0inuL0pBBdJI8voBnZvT4ctlJoKgZKMt92cJG90JrE93eJ5j82afHf3EY8w2Or&#xA;2VoEnha4t9M+oo/G0b0mYslpIq8lq33ZIy9TIz9SPi8yaVqPmnXvMX1y70bR9SayhsprqSfSmnmi&#xA;tysoEUphZuGyg03oabDBOXcuSW+zJvqc3/Vx1D/pNuf+a8r4i1cZY55g8tabN5q8n6vcma51Cy1i&#xA;2jt57iaSZlR+RZP3hbbkA3zGThI22Y5ElFaIx/5XFJfs7q17rWo2vDsRDpcMQrSm1LH9XfLL3bAf&#xA;VTf5fC4g8n2EEN3cRwx+skaLKwAVZnAAyqUt2mcjacfU5v8Aq46h/wBJtz/zXkeIseMsL03TPMlz&#xA;fNo17ZXdtYWvmC512XW2uwxukMBgs44yrmcMvJWbkBT0xvvTLDPZsOT0+anqNr5rjGseUYNJubzS&#xA;NZ1zTdZTXWu0HoQQPazXaMWYTep6lkfToN+daim6J7JGQcPmyHTb7Wbu69G4stf06Oh/0m51CFo9&#xA;va3vZ5N/9XIcTWZFOGmnsLWaZtQvPSiVpZC9xI5AUVO8jGmw8cHEUcRYVN5dt9Y8k/lz5W1NPUhu&#xA;tIu9av0IDUmmgjiqa/tctTkKnrUE5dM0G/JKgnv6ZvdQl/LvWHmkhu7/AEW+tb94yw5XC/UndSw/&#xA;lkgkpX3xmdlyHZPpvrkqcHv7sDrVJ5EP3oVOU8RaOMoJtHu55arrmrQCn2I7xyP+HDn8cIkkTLf+&#xA;Hb3/AKmPWf8ApL/5sw8SeNOsiwdiqlJASaqevbAikqtNCurbUZ7s6jeTxTFiLKVomgTka/BSMSAD&#xA;tV8UpZ5c8gWmh3MU8d7fXy2kD2mlwXsqSR2VtJIJHhtwqIQrFVHxFjRVFaDJGRLKUyVSDyFp0OrN&#xA;qEc12qNePqS2HrsbRb2SJoXuFh6c2Vz7V3pjxGqRxGqR+i6Lq1iki32rzasX48HuI7eIpStafV4o&#xA;QeVe47YCgpl6D+2BFO9B/bFaQdxoWm3E/r3FjBNPt++eJHfbp8RFdsU7oggjrtgQhzqOni4FsbmI&#xA;XLbLDzXmaf5Na4Vp51rOr2mveTvL3lizgf8AxJaajq51HThG3qW8ElpqVu0juyqqiRrmMoa0YkUr&#xA;l5OzkkjhZBoWry+YvNNtrkdjd2cFvoFpp12Ly2ltGW9SeSSWJVmALhK7stV98hkLDKQWW5U0uxVv&#xA;i3gcKtYFQ9+b8Wcp09YnvKfuVuGZIia/tMiuwFPAYVSo6fr2o20f6TNtZXlpcwXljNZu86rNbSCR&#xA;eYlSLkjceLKKVUkVHXCDRZCVGwlkXkzzFBaaZPZ68IfMljqV1qsuqG1Ekckl/wCuLhPq7PQLxuSE&#xA;+I0oMlx72yGTe2R6Docej6PaaXbs8sVpGIxLLTm5G7O1Ao5M1SaDIHdgTaYiB/YYop31d/EYrTvQ&#xA;f2xWmvRkr0xWkh1DTfMepw6rpV2tvb6Ze289vb3tvJI1ynqpwVmieP06qGJ+31wp5LND0vzG2oJq&#xA;Ovi0We00+30qwgsPVaNYoSWklYyhSGmcr8IFFCjc9clOVs5ztLbPRPOMM9raCGyWw0W41W40m6Ms&#xA;rPKupSmWKKWIRjgIfUZSwc1AXbqcTKxSTMEUyfTE1loW/SUcCzV+H6uzspFO/MKeuQakxii4bnri&#xA;lUwq7FXYq7FXYq7FXYq7FXYq7FXYq4gHqK4qk0nk3yq9012dHsvrbOZWuDbQmQyE8i5fjy5E71rj&#xA;abKYmBx0ocDGnCB+9BitKiwKOu+KaXhVHQUwq3iriAeoriq0xRn9nArhFGP2cVXUGFXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYqm/+HLr/fqfj/TJ+GW3wi7/AA5df79T8f6Y+GV8Iu/w5df79T8f&#xA;6Y+GV8Iu/wAOXX+/U/H+mPhlfCLv8OXX+/U/H+mPhlfCLv8ADl1/v1Px/pj4ZXwi7/Dl1/v1Px/p&#xA;j4ZXwi7/AA5df79T8f6Y+GV8Iu/w5df79T8f6Y+GV8Iu/wAOXX+/U/H+mPhlfCLv8OXX+/U/H+mP&#xA;hlfCLv8ADl1/v1Px/pj4ZXwi7/Dl1/v1Px/pj4ZXwi7/AA5df79T8f6Y+GV8Iu/w5df79T8f6Y+G&#xA;V8Iu/wAOXX+/U/H+mPhlfCLv8OXX+/U/H+mPhlfCLv8ADl1/v1Px/pj4ZXwi7/Dl1/v1Px/pj4ZX&#xA;wi7/AA5df79T8f6Y+GV8Iu/w5df79T8f6Y+GV8Iu/wAOXX+/U/H+mPhlfCLv8OXX+/U/H+mPhlfC&#xA;Lv8ADl1/v1Px/pj4ZXwi7/Dl1/v1Px/pj4ZXwi7/AA5df79T8f6Y+GV8Iu/w5df79T8f6Y+GV8Iu&#xA;/wAOXX+/U/H+mPhlfCLv8OXX+/U/H+mPhlfCLv8ADl1/v1Px/pj4ZXwi7/Dl1/v1Px/pj4ZXwi7/&#xA;AA5df79T8f6Y+GV8Iv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:c74c7eb6-2516-4b47-b35a-020dbe733bdf</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:c74c7eb6-2516-4b47-b35a-020dbe733bdf</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7603e8d4-da1f-8a41-b60b-8d4202f0d68c</stRef:instanceID>
            <stRef:documentID>xmp.did:7603e8d4-da1f-8a41-b60b-8d4202f0d68c</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0ffb6a64-2fc6-3548-80e8-962979b5087b</stEvt:instanceID>
                  <stEvt:when>2016-04-05T23:01:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c13ea3fd-f7b9-154a-bc69-617ba4d05f7b</stEvt:instanceID>
                  <stEvt:when>2016-04-13T00:39:47+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:332da856-809b-8448-9cff-fa70bc567d3d</stEvt:instanceID>
                  <stEvt:when>2016-04-13T02:13:35+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:db540554-3181-2544-9521-cf6c677f4415</stEvt:instanceID>
                  <stEvt:when>2016-04-14T15:21:32+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:efd3c417-a97e-8e40-aac9-a743e0a76dbd</stEvt:instanceID>
                  <stEvt:when>2016-04-20T22:15:01+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1af2c124-23a3-eb40-ab02-76448b69f5b2</stEvt:instanceID>
                  <stEvt:when>2016-04-20T22:30:53+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8651cc40-8dee-184f-8b9d-0dd82d8614e7</stEvt:instanceID>
                  <stEvt:when>2016-04-25T18:52:12+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e0d12e7a-5ae8-9a45-a97d-0e0727d1ddd2</stEvt:instanceID>
                  <stEvt:when>2016-06-08T13:00:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7603e8d4-da1f-8a41-b60b-8d4202f0d68c</stEvt:instanceID>
                  <stEvt:when>2016-06-08T13:33:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c74c7eb6-2516-4b47-b35a-020dbe733bdf</stEvt:instanceID>
                  <stEvt:when>2016-06-08T13:40:14+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2800,000000</stDim:w>
            <stDim:h>1800,000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1800 li
2800 1800 li
2800 0 li
cp
clp
417.826 1334.17 mo
418.512 1334.18 419.196 1334.18 419.875 1334.19 cv
419.196 1334.18 418.512 1334.18 417.826 1334.17 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.780392 .878431 .780392 rgb
f
410.997 1334.12 mo
411.798 1334.12 412.597 1334.13 413.39 1334.14 cv
412.597 1334.13 411.798 1334.12 410.997 1334.12 cv
cp
f
421.554 1334.2 mo
421.992 1334.21 422.429 1334.21 422.864 1334.22 cv
422.429 1334.21 421.992 1334.21 421.554 1334.2 cv
cp
f
414.223 1334.14 mo
415.046 1334.15 415.864 1334.16 416.678 1334.16 cv
415.865 1334.16 415.046 1334.15 414.223 1334.14 cv
cp
f
401.149 1334.04 mo
401.674 1334.05 402.201 1334.05 402.722 1334.05 cv
402.201 1334.05 401.674 1334.05 401.149 1334.04 cv
cp
f
392.062 1333.98 mo
392.211 1333.98 392.358 1333.98 392.507 1333.98 cv
392.358 1333.98 392.211 1333.98 392.062 1333.98 cv
cp
f
398.294 1334.02 mo
398.597 1334.03 398.904 1334.03 399.206 1334.03 cv
398.904 1334.03 398.598 1334.03 398.294 1334.02 cv
cp
f
404.501 1334.07 mo
405.091 1334.07 405.683 1334.08 406.27 1334.08 cv
405.683 1334.08 405.091 1334.07 404.501 1334.07 cv
cp
f
407.811 1334.09 mo
408.48 1334.1 409.149 1334.1 409.813 1334.11 cv
409.149 1334.1 408.48 1334.1 407.811 1334.09 cv
cp
f
439.719 1334.38 mo
440.447 1334.39 441.165 1334.4 441.881 1334.4 cv
441.165 1334.4 440.446 1334.39 439.719 1334.38 cv
cp
f
424.788 1334.23 mo
425.25 1334.24 425.71 1334.24 426.169 1334.25 cv
425.71 1334.24 425.25 1334.24 424.788 1334.23 cv
cp
f
436.991 1334.35 mo
437.613 1334.36 438.23 1334.36 438.844 1334.37 cv
438.23 1334.36 437.614 1334.36 436.991 1334.35 cv
cp
f
445.59 1334.44 mo
446.275 1334.45 446.95 1334.46 447.623 1334.47 cv
446.95 1334.46 446.275 1334.45 445.59 1334.44 cv
cp
f
442.698 1334.41 mo
443.263 1334.42 443.82 1334.42 444.377 1334.43 cv
443.82 1334.42 443.263 1334.42 442.698 1334.41 cv
cp
f
427.735 1334.26 mo
428.404 1334.27 429.069 1334.27 429.731 1334.28 cv
429.069 1334.27 428.404 1334.27 427.735 1334.26 cv
cp
f
430.665 1334.29 mo
431.321 1334.29 431.971 1334.3 432.619 1334.31 cv
431.971 1334.3 431.321 1334.29 430.665 1334.29 cv
cp
f
434.009 1334.32 mo
434.489 1334.33 434.964 1334.33 435.439 1334.34 cv
434.964 1334.33 434.489 1334.33 434.009 1334.32 cv
cp
f
358.388 1333.78 mo
358.616 1333.78 358.845 1333.78 359.074 1333.78 cv
358.845 1333.78 358.616 1333.78 358.388 1333.78 cv
cp
f
334.432 1333.66 mo
334.751 1333.66 335.071 1333.66 335.39 1333.66 cv
335.071 1333.66 334.751 1333.66 334.432 1333.66 cv
cp
f
337.85 1333.67 mo
338.58 1333.68 339.31 1333.68 340.038 1333.69 cv
339.31 1333.68 338.58 1333.68 337.85 1333.67 cv
cp
f
340.688 1333.69 mo
341.854 1333.69 343.018 1333.7 344.179 1333.71 cv
343.018 1333.7 341.854 1333.69 340.688 1333.69 cv
cp
f
328.956 1333.63 mo
329.856 1333.64 330.756 1333.64 331.653 1333.65 cv
330.756 1333.64 329.856 1333.64 328.956 1333.63 cv
cp
f
316.917 1333.58 mo
318.304 1333.59 319.689 1333.59 321.073 1333.6 cv
319.689 1333.59 318.304 1333.59 316.917 1333.58 cv
cp
f
289.556 1333.47 mo
296.147 1333.49 302.737 1333.52 309.301 1333.55 cv
302.737 1333.52 296.147 1333.49 289.556 1333.47 cv
cp
f
326.382 1333.62 mo
326.763 1333.62 327.145 1333.62 327.525 1333.63 cv
327.145 1333.63 326.763 1333.62 326.382 1333.62 cv
cp
f
381.073 1333.91 mo
381.348 1333.91 381.62 1333.91 381.894 1333.91 cv
381.62 1333.91 381.347 1333.91 381.073 1333.91 cv
cp
f
345.629 1333.71 mo
346.212 1333.72 346.796 1333.72 347.378 1333.72 cv
346.796 1333.72 346.212 1333.72 345.629 1333.71 cv
cp
f
366.063 1333.82 mo
366.326 1333.82 366.588 1333.82 366.851 1333.82 cv
366.588 1333.82 366.326 1333.82 366.063 1333.82 cv
cp
f
373.474 1333.86 mo
373.958 1333.87 374.44 1333.87 374.923 1333.87 cv
374.44 1333.87 373.958 1333.87 373.474 1333.86 cv
cp
f
369.939 1333.84 mo
370.141 1333.84 370.343 1333.84 370.545 1333.85 cv
370.343 1333.84 370.141 1333.84 369.939 1333.84 cv
cp
f
377.306 1333.89 mo
377.734 1333.89 378.16 1333.89 378.587 1333.89 cv
378.16 1333.89 377.734 1333.89 377.306 1333.89 cv
cp
f
354.333 1333.76 mo
354.671 1333.76 355.01 1333.76 355.348 1333.76 cv
355.01 1333.76 354.671 1333.76 354.333 1333.76 cv
cp
f
350.878 1333.74 mo
350.954 1333.74 351.029 1333.74 351.104 1333.74 cv
351.029 1333.74 350.954 1333.74 350.878 1333.74 cv
cp
f
448.249 1334.48 mo
449.063 1334.49 449.865 1334.5 450.661 1334.51 cv
449.866 1334.5 449.063 1334.49 448.249 1334.48 cv
cp
f
362.142 1333.8 mo
362.44 1333.8 362.738 1333.8 363.036 1333.8 cv
362.738 1333.8 362.44 1333.8 362.142 1333.8 cv
cp
f
2537.15 1338.95 mo
2550.28 1338.95 2563.55 1338.94 2576.87 1338.94 cv
2563.55 1338.94 2550.28 1338.95 2537.15 1338.95 cv
cp
f
2450.21 1338.98 mo
2452.08 1338.98 2453.95 1338.98 2455.83 1338.98 cv
2453.95 1338.98 2452.08 1338.98 2450.21 1338.98 cv
cp
f
2469.03 1338.97 mo
2472.77 1338.97 2476.53 1338.97 2480.31 1338.97 cv
2476.53 1338.97 2472.77 1338.97 2469.03 1338.97 cv
cp
f
2585.38 1338.93 mo
2588.42 1338.93 2591.47 1338.93 2594.51 1338.93 cv
2591.47 1338.93 2588.42 1338.93 2585.38 1338.93 cv
cp
f
2513.22 1338.96 mo
2519.74 1338.96 2526.31 1338.95 2532.9 1338.95 cv
2526.31 1338.95 2519.74 1338.96 2513.22 1338.96 cv
cp
f
2488.02 1338.97 mo
2494.8 1338.96 2501.64 1338.96 2508.53 1338.96 cv
2501.64 1338.96 2494.8 1338.96 2488.02 1338.97 cv
cp
f
2370.82 1339 mo
2375.02 1339 2379.29 1339 2383.63 1339 cv
2379.29 1339 2375.02 1339 2370.82 1339 cv
cp
f
2430.42 1338.98 mo
2436.09 1338.98 2441.83 1338.98 2447.63 1338.98 cv
2441.83 1338.98 2436.08 1338.98 2430.42 1338.98 cv
cp
f
2392.5 1339 mo
2400.76 1338.99 2409.22 1338.99 2417.88 1338.99 cv
2409.22 1338.99 2400.76 1338.99 2392.5 1339 cv
cp
f
2667.86 1351.6 mo
2667.31 1351.04 2666.76 1350.49 2666.19 1349.99 cv
2665.77 1349.62 2665.31 1349.25 2664.84 1348.89 cv
2664.71 1348.8 2664.58 1348.72 2664.45 1348.64 cv
2664.07 1348.41 2663.7 1348.18 2663.32 1347.95 cv
2667.5 1352.39 2668.58 1352.65 2667.86 1351.6 cv
cp
f
2597.8 1338.93 mo
2606.41 1338.92 2615.02 1338.92 2623.63 1338.92 cv
2615.02 1338.92 2606.41 1338.92 2597.8 1338.93 cv
cp
f
2627.24 1338.92 mo
2633.91 1338.91 2640.58 1338.91 2647.24 1338.91 cv
2649.36 1339.87 2651.39 1340.8 2652.28 1341.28 cv
2656.08 1343.33 2659.65 1345.69 2663.32 1347.95 cv
2662.84 1347.44 2662.33 1346.88 2661.77 1346.26 cv
2662.6 1347.18 2663.75 1348.04 2664.84 1348.89 cv
2666.32 1349.85 2667.42 1350.97 2667.86 1351.6 cv
2670.77 1354.6 2673.49 1358.26 2676.54 1360.91 cv
2676.65 1361.07 2676.77 1361.23 2676.87 1361.4 cv
2677.42 1362.27 2677.92 1363.22 2678.41 1364.2 cv
2678.45 1363.21 2679.5 1363.93 2680.22 1366.35 cv
2680.66 1367.8 2681.18 1369.22 2681.66 1370.66 cv
2680.47 1368.65 2679.48 1366.35 2678.41 1364.2 cv
2678.38 1365.09 2679.17 1367.36 2681.77 1371.03 cv
2681.91 1371.43 2682.03 1371.82 2682.15 1372.23 cv
2682.43 1373.18 2682.65 1374.18 2682.84 1375.22 cv
2683.21 1374.75 2683.88 1375.8 2683.9 1378.09 cv
2683.91 1379.48 2684.01 1380.87 2684.08 1382.25 cv
2684.34 1383.36 2684.65 1384.43 2685.05 1385.41 cv
2684.69 1384.54 2684.39 1383.74 2684.12 1382.98 cv
2684.13 1383.4 2684.15 1383.81 2684.16 1384.23 cv
2684.2 1387.28 2683.92 1390.31 2683.8 1393.34 cv
2683.67 1394.06 2683.54 1394.77 2683.39 1395.48 cv
2682.47 1399.6 2681.32 1403.67 2679.98 1407.68 cv
2679.65 1408.68 2679.24 1409.69 2678.83 1410.7 cv
2677.35 1413.59 2675.92 1416.5 2674.28 1419.32 cv
2672.44 1422.51 2670.46 1425.62 2668.38 1428.65 cv
2667.08 1430.24 2665.3 1432.44 2664.7 1433.11 cv
2659.08 1439.35 2652.45 1444.32 2646.58 1450.21 cv
2647.98 1448.81 2649.08 1447.71 2649.94 1446.87 cv
2648.48 1448.18 2646.64 1449.74 2645.1 1450.73 cv
2640.68 1453.61 2636.12 1456.28 2631.43 1458.7 cv
2630.09 1459.39 2628.72 1460.04 2627.37 1460.7 cv
2622.42 1462.22 2617.56 1464.04 2612.59 1465.49 cv
2598.98 1469.45 2585.18 1472.02 2571.27 1474.62 cv
2570.62 1474.74 2570.06 1474.85 2569.57 1474.95 cv
2569.35 1474.97 2569.12 1474.99 2568.88 1475.02 cv
2566.01 1475.32 2563.16 1475.67 2560.29 1475.96 cv
2553.81 1476.62 2547.32 1477.14 2540.82 1477.56 cv
2525.53 1478.55 2510.2 1478.96 2494.88 1479.03 cv
2467.32 1479.16 2439.77 1478.17 2412.22 1477.41 cv
2384.21 1476.65 2356.16 1477.06 2328.17 1475.6 cv
2297.24 1474 2266.43 1470.62 2235.68 1466.95 cv
2178.23 1460.09 2120.64 1452.26 2062.64 1453.84 cv
1938.81 1457.22 1816.23 1484.83 1694.87 1507.5 cv
1694.24 1507.62 1693.22 1507.85 1692.25 1508.09 cv
1690.28 1508.28 1688.24 1508.36 1686.38 1508.51 cv
1678.87 1509.11 1671.34 1509.38 1663.81 1509.39 cv
1648.87 1509.4 1634.04 1508.16 1619.2 1506.59 cv
1618.75 1506.54 1618.34 1506.5 1617.96 1506.46 cv
1614.4 1505.9 1610.83 1505.4 1607.27 1504.84 cv
1601.37 1503.9 1595.49 1502.89 1589.61 1501.85 cv
1574.14 1499.13 1558.73 1496.17 1543.25 1493.48 cv
1511.17 1487.92 1478.58 1482.91 1445.95 1482.57 cv
1415.01 1482.25 1383.68 1486.53 1353.58 1493.57 cv
1299.9 1506.13 1249.37 1529.18 1195.82 1542.24 cv
1189.34 1543.82 1182.83 1545.26 1176.29 1546.55 cv
1171.61 1547.47 1164.25 1550.04 1158.67 1550.29 cv
1157.46 1550.18 1156.05 1550.12 1154.85 1550.24 cv
1151.19 1550.6 1147.52 1550.89 1143.85 1551.09 cv
1136.71 1551.49 1129.55 1551.57 1122.4 1551.38 cv
1115.42 1551.18 1108.52 1550.52 1101.57 1549.95 cv
1100.92 1549.89 1100.27 1549.89 1099.66 1549.91 cv
1097.65 1549.51 1095.59 1548.92 1093.82 1548.58 cv
1080.36 1546.06 1067.1 1542.65 1054 1538.67 cv
999.269 1522.03 947.861 1496.05 892.825 1480.33 cv
834.035 1463.53 772.232 1456.28 711.211 1454.91 cv
599.894 1452.42 488.966 1467.52 377.632 1467.52 cv
359.942 1467.52 342.25 1467.38 324.575 1466.61 cv
315.211 1466.2 305.854 1465.62 296.516 1464.8 cv
292.028 1464.41 287.545 1463.96 283.069 1463.45 cv
282.701 1463.41 282.332 1463.36 281.964 1463.32 cv
281.362 1463.23 280.574 1463.11 279.684 1463 cv
280.011 1463.05 280.32 1463.1 280.596 1463.14 cv
278.932 1462.92 277.268 1462.69 275.602 1462.54 cv
276.998 1462.67 278.438 1462.84 279.684 1463 cv
279.272 1462.93 278.828 1462.86 278.33 1462.78 cv
260.075 1459.85 241.915 1455.68 224.588 1449.15 cv
224.388 1449.08 224.224 1449.02 224.041 1448.95 cv
223.575 1448.72 223.054 1448.46 222.419 1448.15 cv
218.771 1446.38 215.19 1444.47 211.698 1442.41 cv
209.275 1440.98 206.945 1439.44 204.623 1437.87 cv
203.104 1436.44 201.427 1435.13 199.943 1433.68 cv
197.188 1430.97 194.879 1427.84 192.168 1425.12 cv
204.148 1437.14 195.004 1428.62 192.073 1423.39 cv
191.715 1422.75 191.385 1422.09 191.053 1421.44 cv
189.811 1416.76 188.046 1412.19 186.876 1407.46 cv
186.458 1407.29 185.976 1406.05 185.938 1403.33 cv
185.931 1402.83 185.932 1402.34 185.926 1401.85 cv
186.243 1403.55 186.438 1405.61 186.585 1406.27 cv
186.674 1406.67 186.778 1407.06 186.876 1407.46 cv
187.591 1407.74 188.114 1404.86 185.918 1400.77 cv
185.893 1398.08 185.892 1395.39 185.916 1392.7 cv
186.171 1391.46 186.395 1390.21 186.732 1389.02 cv
186.894 1388.45 187.082 1387.89 187.267 1387.33 cv
187.751 1386.6 188.274 1385.82 188.818 1385.03 cv
188.292 1385.49 187.974 1385.54 187.925 1385.29 cv
188.022 1384.99 188.123 1384.69 188.216 1384.39 cv
188.464 1383.96 188.869 1383.41 189.464 1382.78 cv
190.358 1381.85 191.227 1380.89 192.103 1379.94 cv
191.129 1381.62 189.947 1383.37 188.818 1385.03 cv
189.607 1384.32 190.856 1382.67 192.347 1379.68 cv
192.82 1379.17 193.288 1378.66 193.778 1378.16 cv
195.793 1376.12 197.922 1374.23 200.069 1372.35 cv
201.787 1371.2 203.448 1369.93 205.177 1368.8 cv
212.557 1364.01 220.283 1359.77 228.155 1355.85 cv
231.991 1353.94 235.869 1352.11 239.769 1350.33 cv
243.664 1348.56 261.638 1341.53 243.841 1348.41 cv
256.232 1343.62 268.571 1338.59 280.848 1333.44 cv
283.612 1333.45 286.378 1333.46 289.144 1333.47 cv
204.626 1333.15 120.305 1332.98 95.441 1332.76 cv
88.2927 1333.08 48.6382 1333.35 0 1333.49 cv
0 1800 li
2800 1800 li
2800 1338.84 li
2747.05 1338.87 2687.41 1338.89 2627.24 1338.92 cv
cp
f
450.96 1334.51 mo
451.854 1334.52 452.737 1334.53 453.607 1334.54 cv
452.737 1334.53 451.854 1334.52 450.96 1334.51 cv
cp
f
2684.12 1382.98 mo
2684.1 1382.74 2684.09 1382.5 2684.08 1382.25 cv
2683.56 1379.98 2683.27 1377.53 2682.84 1375.22 cv
2682.42 1375.74 2682.4 1378.2 2684.12 1382.98 cv
cp
f
2089.61 1339.46 mo
2128.27 1339.35 2166.93 1339.2 2205.59 1339.12 cv
2166.93 1339.2 2128.27 1339.35 2089.61 1339.46 cv
cp
f
2365.75 1339 mo
2322.34 1339.02 2286.68 1339.03 2263.67 1339.03 cv
2244.31 1339.04 2224.95 1339.07 2205.59 1339.12 cv
2224.95 1339.07 2244.31 1339.04 2263.67 1339.03 cv
2286.68 1339.03 2322.34 1339.02 2365.75 1339 cv
cp
f
2649.94 1446.87 mo
2652.54 1444.53 2653.88 1442.99 2649.94 1446.87 cv
2649.94 1446.87 li
cp
f
533.444 1336.21 mo
518.046 1336.21 502.65 1335.96 487.256 1335.26 cv
486.921 1335.25 486.567 1335.23 486.198 1335.22 cv
486.568 1335.23 486.92 1335.25 487.256 1335.26 cv
502.65 1335.96 518.046 1336.21 533.444 1336.21 cv
cp
f
481.065 1335.05 mo
481.37 1335.06 481.663 1335.06 481.956 1335.07 cv
481.663 1335.06 481.369 1335.06 481.065 1335.05 cv
cp
f
466.412 1334.73 mo
466.847 1334.74 467.28 1334.75 467.705 1334.76 cv
467.28 1334.75 466.847 1334.74 466.412 1334.73 cv
cp
f
461.667 1334.66 mo
462.215 1334.67 462.759 1334.67 463.294 1334.68 cv
462.76 1334.67 462.214 1334.67 461.667 1334.66 cv
cp
f
470.487 1334.81 mo
470.951 1334.82 471.41 1334.82 471.861 1334.83 cv
471.41 1334.82 470.951 1334.82 470.487 1334.81 cv
cp
f
468.521 1334.77 mo
468.972 1334.78 469.421 1334.79 469.86 1334.8 cv
469.42 1334.79 468.973 1334.78 468.521 1334.77 cv
cp
f
464.247 1334.7 mo
464.681 1334.71 465.115 1334.71 465.54 1334.72 cv
465.115 1334.71 464.681 1334.71 464.247 1334.7 cv
cp
f
456.711 1334.59 mo
457.377 1334.59 458.041 1334.6 458.692 1334.61 cv
458.041 1334.6 457.378 1334.59 456.711 1334.59 cv
cp
f
485.052 1335.17 mo
485.423 1335.19 485.779 1335.2 486.121 1335.21 cv
485.779 1335.2 485.423 1335.19 485.052 1335.17 cv
cp
f
453.691 1334.54 mo
454.515 1334.56 455.329 1334.57 456.132 1334.58 cv
455.329 1334.57 454.515 1334.56 453.691 1334.54 cv
cp
f
458.939 1334.62 mo
459.659 1334.63 460.371 1334.64 461.072 1334.65 cv
460.372 1334.64 459.659 1334.63 458.939 1334.62 cv
cp
f
477.917 1334.97 mo
478.259 1334.97 478.591 1334.98 478.921 1334.99 cv
478.591 1334.98 478.259 1334.97 477.917 1334.97 cv
cp
f
472.485 1334.85 mo
472.918 1334.85 473.345 1334.86 473.766 1334.87 cv
473.345 1334.86 472.918 1334.85 472.485 1334.85 cv
cp
f
482.52 1335.09 mo
482.803 1335.1 483.075 1335.11 483.346 1335.12 cv
483.075 1335.11 482.803 1335.1 482.52 1335.09 cv
cp
f
479.572 1335.01 mo
479.884 1335.01 480.187 1335.02 480.488 1335.03 cv
480.187 1335.02 479.884 1335.01 479.572 1335.01 cv
cp
f
483.831 1335.13 mo
484.168 1335.14 484.49 1335.15 484.808 1335.17 cv
484.49 1335.15 484.168 1335.14 483.831 1335.13 cv
cp
f
474.389 1334.89 mo
474.794 1334.89 475.192 1334.9 475.584 1334.91 cv
475.192 1334.9 474.794 1334.89 474.389 1334.89 cv
cp
f
476.2 1334.92 mo
476.579 1334.93 476.949 1334.94 477.315 1334.95 cv
476.949 1334.94 476.579 1334.93 476.2 1334.92 cv
cp
f
602.766 1327.13 mo
681.185 1326.21 978.585 1328.27 996.271 1329.6 cv
1040.63 1332.95 1298.02 1329.25 1382.36 1329.17 cv
1457.83 1329.1 1755.7 1332.17 1829.18 1332.04 cv
1918.44 1331.88 2204.43 1329.77 2258.12 1330.97 cv
2324.72 1332.45 2559.41 1332.69 2610.12 1331.42 cv
2673.42 1329.83 2736.71 1330.53 2800 1330.63 cv
2800 0 li
0 0 li
0 1323.81 li
75.8751 1324.95 380.694 1324.1 426.712 1325.51 cv
485.373 1327.29 544.049 1327.81 602.766 1327.13 cv
cp
.941176 1 .941176 rgb
f
289.144 1333.47 mo
289.282 1333.47 289.419 1333.47 289.556 1333.47 cv
296.147 1333.49 302.737 1333.52 309.301 1333.55 cv
311.845 1333.56 314.383 1333.57 316.917 1333.58 cv
318.304 1333.59 319.689 1333.59 321.073 1333.6 cv
322.846 1333.61 324.616 1333.61 326.382 1333.62 cv
326.763 1333.62 327.145 1333.63 327.525 1333.63 cv
328.003 1333.63 328.479 1333.63 328.956 1333.63 cv
329.856 1333.64 330.756 1333.64 331.653 1333.65 cv
332.581 1333.65 333.506 1333.65 334.432 1333.66 cv
334.751 1333.66 335.071 1333.66 335.39 1333.66 cv
336.212 1333.67 337.031 1333.67 337.85 1333.67 cv
338.58 1333.68 339.31 1333.68 340.038 1333.69 cv
340.255 1333.69 340.471 1333.69 340.688 1333.69 cv
341.854 1333.69 343.018 1333.7 344.179 1333.71 cv
344.663 1333.71 345.145 1333.71 345.629 1333.71 cv
346.212 1333.72 346.796 1333.72 347.378 1333.72 cv
348.548 1333.73 349.714 1333.73 350.878 1333.74 cv
350.954 1333.74 351.029 1333.74 351.104 1333.74 cv
352.183 1333.75 353.259 1333.75 354.333 1333.76 cv
354.671 1333.76 355.01 1333.76 355.348 1333.76 cv
356.364 1333.77 357.377 1333.77 358.388 1333.78 cv
358.616 1333.78 358.845 1333.78 359.074 1333.78 cv
360.099 1333.79 361.122 1333.79 362.142 1333.8 cv
362.44 1333.8 362.738 1333.8 363.036 1333.8 cv
364.048 1333.81 365.057 1333.81 366.063 1333.82 cv
366.326 1333.82 366.588 1333.82 366.851 1333.82 cv
367.883 1333.83 368.913 1333.84 369.939 1333.84 cv
370.141 1333.84 370.343 1333.84 370.545 1333.85 cv
371.524 1333.85 372.501 1333.86 373.474 1333.86 cv
373.958 1333.87 374.44 1333.87 374.923 1333.87 cv
375.719 1333.88 376.514 1333.88 377.306 1333.89 cv
377.734 1333.89 378.16 1333.89 378.587 1333.89 cv
379.418 1333.9 380.248 1333.9 381.073 1333.91 cv
381.347 1333.91 381.62 1333.91 381.894 1333.91 cv
385.329 1333.94 388.722 1333.96 392.062 1333.98 cv
392.211 1333.98 392.358 1333.98 392.507 1333.98 cv
394.455 1334 396.383 1334.01 398.294 1334.02 cv
398.598 1334.03 398.904 1334.03 399.206 1334.03 cv
399.858 1334.03 400.502 1334.04 401.149 1334.04 cv
401.674 1334.05 402.201 1334.05 402.722 1334.05 cv
403.318 1334.06 403.909 1334.06 404.501 1334.07 cv
405.091 1334.07 405.683 1334.08 406.27 1334.08 cv
406.786 1334.08 407.298 1334.09 407.811 1334.09 cv
408.48 1334.1 409.149 1334.1 409.813 1334.11 cv
410.209 1334.11 410.602 1334.11 410.997 1334.12 cv
411.798 1334.12 412.597 1334.13 413.39 1334.14 cv
413.669 1334.14 413.945 1334.14 414.223 1334.14 cv
415.046 1334.15 415.865 1334.16 416.678 1334.16 cv
417.062 1334.17 417.444 1334.17 417.826 1334.17 cv
418.512 1334.18 419.196 1334.18 419.875 1334.19 cv
420.438 1334.2 420.996 1334.2 421.554 1334.2 cv
421.992 1334.21 422.429 1334.21 422.864 1334.22 cv
423.509 1334.22 424.15 1334.23 424.788 1334.23 cv
425.25 1334.24 425.71 1334.24 426.169 1334.25 cv
426.693 1334.25 427.215 1334.26 427.735 1334.26 cv
428.404 1334.27 429.069 1334.27 429.731 1334.28 cv
430.043 1334.28 430.355 1334.29 430.665 1334.29 cv
431.321 1334.29 431.971 1334.3 432.619 1334.31 cv
433.084 1334.31 433.548 1334.32 434.009 1334.32 cv
434.489 1334.33 434.964 1334.33 435.439 1334.34 cv
435.958 1334.34 436.477 1334.35 436.991 1334.35 cv
437.614 1334.36 438.23 1334.36 438.844 1334.37 cv
439.136 1334.37 439.43 1334.38 439.719 1334.38 cv
440.446 1334.39 441.165 1334.4 441.881 1334.4 cv
442.153 1334.41 442.428 1334.41 442.698 1334.41 cv
443.263 1334.42 443.82 1334.42 444.377 1334.43 cv
444.782 1334.44 445.189 1334.44 445.59 1334.44 cv
446.275 1334.45 446.95 1334.46 447.623 1334.47 cv
447.831 1334.47 448.043 1334.47 448.249 1334.48 cv
449.063 1334.49 449.866 1334.5 450.661 1334.51 cv
450.759 1334.51 450.861 1334.51 450.96 1334.51 cv
451.854 1334.52 452.737 1334.53 453.607 1334.54 cv
453.635 1334.54 453.662 1334.54 453.691 1334.54 cv
454.515 1334.56 455.329 1334.57 456.132 1334.58 cv
456.327 1334.58 456.517 1334.58 456.711 1334.59 cv
457.378 1334.59 458.041 1334.6 458.692 1334.61 cv
458.775 1334.61 458.856 1334.62 458.939 1334.62 cv
459.659 1334.63 460.372 1334.64 461.072 1334.65 cv
461.273 1334.65 461.468 1334.65 461.667 1334.66 cv
462.214 1334.67 462.76 1334.67 463.294 1334.68 cv
463.616 1334.69 463.93 1334.69 464.247 1334.7 cv
464.681 1334.71 465.115 1334.71 465.54 1334.72 cv
465.834 1334.72 466.122 1334.73 466.412 1334.73 cv
466.847 1334.74 467.28 1334.75 467.705 1334.76 cv
467.98 1334.76 468.25 1334.77 468.521 1334.77 cv
468.973 1334.78 469.42 1334.79 469.86 1334.8 cv
470.071 1334.8 470.278 1334.8 470.487 1334.81 cv
470.951 1334.82 471.41 1334.82 471.861 1334.83 cv
472.071 1334.84 472.278 1334.84 472.485 1334.85 cv
472.918 1334.85 473.345 1334.86 473.766 1334.87 cv
473.975 1334.88 474.183 1334.88 474.389 1334.89 cv
474.794 1334.89 475.192 1334.9 475.584 1334.91 cv
475.791 1334.92 475.997 1334.92 476.2 1334.92 cv
476.579 1334.93 476.949 1334.94 477.315 1334.95 cv
477.517 1334.96 477.719 1334.96 477.917 1334.97 cv
478.259 1334.97 478.591 1334.98 478.921 1334.99 cv
479.139 1335 479.359 1335 479.572 1335.01 cv
479.884 1335.01 480.187 1335.02 480.488 1335.03 cv
480.681 1335.04 480.877 1335.04 481.065 1335.05 cv
481.369 1335.06 481.663 1335.06 481.956 1335.07 cv
482.144 1335.08 482.336 1335.08 482.52 1335.09 cv
482.803 1335.1 483.075 1335.11 483.346 1335.12 cv
483.507 1335.12 483.674 1335.13 483.831 1335.13 cv
484.168 1335.14 484.49 1335.15 484.808 1335.17 cv
484.888 1335.17 484.973 1335.17 485.052 1335.17 cv
485.423 1335.19 485.779 1335.2 486.121 1335.21 cv
486.146 1335.22 486.173 1335.22 486.198 1335.22 cv
486.567 1335.23 486.921 1335.25 487.256 1335.26 cv
502.65 1335.96 518.046 1336.21 533.444 1336.21 cv
544.992 1336.21 556.54 1336.07 568.09 1335.88 cv
602.738 1335.3 637.392 1334.24 672.049 1334.98 cv
687.023 1335.3 702.001 1335.38 716.981 1335.39 cv
741.947 1335.39 766.919 1335.18 791.882 1335.48 cv
793.038 1335.49 794.231 1335.5 795.46 1335.52 cv
796.689 1335.53 797.954 1335.55 799.253 1335.56 cv
804.452 1335.63 810.207 1335.69 816.434 1335.76 cv
817.991 1335.78 819.577 1335.8 821.191 1335.82 cv
821.999 1335.83 822.813 1335.84 823.634 1335.85 cv
826.919 1335.89 830.314 1335.92 833.81 1335.96 cv
834.683 1335.97 835.564 1335.98 836.45 1336 cv
839.108 1336.03 841.821 1336.06 844.585 1336.09 cv
847.348 1336.12 850.162 1336.15 853.022 1336.18 cv
858.742 1336.25 864.646 1336.31 870.699 1336.38 cv
872.717 1336.41 874.751 1336.43 876.801 1336.45 cv
881.924 1336.51 887.143 1336.57 892.438 1336.62 cv
895.614 1336.66 898.818 1336.69 902.044 1336.73 cv
904.195 1336.75 906.355 1336.78 908.525 1336.8 cv
909.61 1336.81 910.697 1336.82 911.786 1336.83 cv
917.231 1336.89 922.727 1336.95 928.253 1337.01 cv
930.464 1337.04 932.679 1337.06 934.898 1337.08 cv
938.226 1337.12 941.563 1337.15 944.903 1337.19 cv
947.13 1337.21 949.358 1337.23 951.587 1337.26 cv
958.273 1337.33 964.962 1337.4 971.62 1337.46 cv
972.729 1337.47 973.838 1337.49 974.945 1337.5 cv
977.161 1337.52 979.372 1337.54 981.577 1337.56 cv
985.988 1337.61 990.377 1337.65 994.733 1337.69 cv
996.911 1337.72 999.081 1337.74 1001.24 1337.76 cv
1004.48 1337.79 1007.7 1337.82 1010.9 1337.85 cv
1013.03 1337.87 1015.15 1337.89 1017.25 1337.91 cv
1018.3 1337.92 1019.35 1337.93 1020.4 1337.94 cv
1026.68 1338 1032.84 1338.05 1038.84 1338.11 cv
1057.85 1338.28 1075.31 1338.41 1090.1 1338.51 cv
1092.44 1338.52 1094.71 1338.54 1096.91 1338.55 cv
1113.03 1338.64 1125.35 1338.68 1132.13 1338.62 cv
1146.61 1338.5 1197.72 1338.19 1259.82 1337.88 cv
1262.46 1337.86 1265.13 1337.85 1267.81 1337.84 cv
1286.57 1337.75 1306.21 1337.66 1326.06 1337.57 cv
1328.89 1337.56 1331.73 1337.55 1334.57 1337.54 cv
1340.26 1337.51 1345.95 1337.49 1351.63 1337.47 cv
1354.47 1337.46 1357.31 1337.44 1360.15 1337.43 cv
1367.24 1337.41 1374.31 1337.38 1381.32 1337.36 cv
1384.12 1337.35 1386.92 1337.34 1389.71 1337.33 cv
1398.06 1337.3 1406.32 1337.27 1414.44 1337.25 cv
1418.49 1337.24 1422.51 1337.23 1426.48 1337.22 cv
1431.78 1337.21 1437 1337.19 1442.13 1337.18 cv
1444.69 1337.18 1447.23 1337.17 1449.75 1337.17 cv
1451 1337.16 1452.25 1337.16 1453.5 1337.16 cv
1458.47 1337.15 1463.34 1337.14 1468.09 1337.14 cv
1469.28 1337.14 1470.46 1337.14 1471.63 1337.13 cv
1479.83 1337.13 1487.65 1337.12 1495 1337.13 cv
1496.05 1337.13 1497.09 1337.13 1498.12 1337.13 cv
1501.21 1337.13 1504.21 1337.13 1507.12 1337.13 cv
1508.09 1337.14 1509.04 1337.14 1509.99 1337.14 cv
1515.68 1337.15 1520.97 1337.16 1525.83 1337.18 cv
1526.63 1337.18 1527.43 1337.19 1528.22 1337.19 cv
1536.06 1337.22 1542.64 1337.27 1547.72 1337.33 cv
1574.34 1337.66 1600.96 1338.09 1627.58 1338.5 cv
1636.46 1338.63 1645.33 1338.76 1654.2 1338.89 cv
1689.69 1339.39 1725.19 1339.77 1760.69 1339.76 cv
1850.91 1339.71 1941.13 1339.72 2031.35 1339.59 cv
2050.77 1339.56 2070.19 1339.52 2089.61 1339.46 cv
2128.27 1339.35 2166.93 1339.2 2205.59 1339.12 cv
2224.95 1339.07 2244.31 1339.04 2263.67 1339.03 cv
2286.68 1339.03 2322.34 1339.02 2365.75 1339 cv
2367.43 1339 2369.12 1339 2370.82 1339 cv
2375.02 1339 2379.29 1339 2383.63 1339 cv
2386.55 1339 2389.52 1339 2392.5 1339 cv
2400.76 1338.99 2409.22 1338.99 2417.88 1338.99 cv
2422.02 1338.99 2426.2 1338.99 2430.42 1338.98 cv
2436.08 1338.98 2441.83 1338.98 2447.63 1338.98 cv
2448.49 1338.98 2449.36 1338.98 2450.21 1338.98 cv
2452.08 1338.98 2453.95 1338.98 2455.83 1338.98 cv
2460.2 1338.97 2464.6 1338.97 2469.03 1338.97 cv
2472.77 1338.97 2476.53 1338.97 2480.31 1338.97 cv
2482.87 1338.97 2485.44 1338.97 2488.02 1338.97 cv
2494.8 1338.96 2501.64 1338.96 2508.53 1338.96 cv
2510.09 1338.96 2511.66 1338.96 2513.22 1338.96 cv
2519.74 1338.96 2526.31 1338.95 2532.9 1338.95 cv
2534.32 1338.95 2535.73 1338.95 2537.15 1338.95 cv
2550.28 1338.95 2563.55 1338.94 2576.87 1338.94 cv
2579.7 1338.93 2582.54 1338.93 2585.38 1338.93 cv
2588.42 1338.93 2591.47 1338.93 2594.51 1338.93 cv
2595.61 1338.93 2596.7 1338.93 2597.8 1338.93 cv
2606.41 1338.92 2615.02 1338.92 2623.63 1338.92 cv
2624.83 1338.92 2626.03 1338.92 2627.24 1338.92 cv
2687.41 1338.89 2747.05 1338.87 2800 1338.84 cv
2800 1330.63 li
2736.71 1330.53 2673.42 1329.83 2610.12 1331.42 cv
2559.41 1332.69 2324.72 1332.45 2258.12 1330.97 cv
2204.43 1329.77 1918.44 1331.88 1829.18 1332.04 cv
1755.7 1332.17 1457.83 1329.1 1382.36 1329.17 cv
1298.02 1329.25 1040.63 1332.95 996.271 1329.6 cv
978.585 1328.27 681.185 1326.21 602.766 1327.13 cv
544.049 1327.81 485.373 1327.29 426.712 1325.51 cv
380.694 1324.1 75.8751 1324.95 0 1323.81 cv
0 1333.49 li
48.6382 1333.35 88.2927 1333.08 95.441 1332.76 cv
120.305 1332.98 204.626 1333.15 289.144 1333.47 cv
cp
0 0 0 rgb
f
280.596 1463.14 mo
280.32 1463.1 280.011 1463.05 279.684 1463 cv
278.438 1462.84 276.998 1462.67 275.602 1462.54 cv
277.268 1462.69 278.932 1462.92 280.596 1463.14 cv
cp
.741176 .839216 .741176 rgb
f
189.464 1382.78 mo
188.869 1383.41 188.464 1383.96 188.216 1384.39 cv
188.123 1384.69 188.022 1384.99 187.925 1385.29 cv
187.974 1385.54 188.292 1385.49 188.818 1385.03 cv
189.947 1383.37 191.129 1381.62 192.103 1379.94 cv
191.227 1380.89 190.358 1381.85 189.464 1382.78 cv
cp
f
185.926 1401.85 mo
185.932 1402.34 185.931 1402.83 185.938 1403.33 cv
185.976 1406.05 186.458 1407.29 186.876 1407.46 cv
186.778 1407.06 186.674 1406.67 186.585 1406.27 cv
186.438 1405.61 186.243 1403.55 185.926 1401.85 cv
cp
f
2680.22 1366.35 mo
2679.5 1363.93 2678.45 1363.21 2678.41 1364.2 cv
2679.48 1366.35 2680.47 1368.65 2681.66 1370.66 cv
2681.18 1369.22 2680.66 1367.8 2680.22 1366.35 cv
cp
f
2685.05 1385.41 mo
2684.65 1384.43 2684.34 1383.36 2684.08 1382.25 cv
2684.09 1382.5 2684.1 1382.74 2684.12 1382.98 cv
2684.39 1383.74 2684.69 1384.54 2685.05 1385.41 cv
cp
f
2683.9 1378.09 mo
2683.88 1375.8 2683.21 1374.75 2682.84 1375.22 cv
2683.27 1377.53 2683.56 1379.98 2684.08 1382.25 cv
2684.01 1380.87 2683.91 1379.48 2683.9 1378.09 cv
cp
f
2667.86 1351.6 mo
2667.42 1350.97 2666.32 1349.85 2664.84 1348.89 cv
2665.31 1349.25 2665.77 1349.62 2666.19 1349.99 cv
2666.76 1350.49 2667.31 1351.04 2667.86 1351.6 cv
cp
f
2597.8 1338.93 mo
2596.7 1338.93 2595.61 1338.93 2594.51 1338.93 cv
2591.47 1338.93 2588.42 1338.93 2585.38 1338.93 cv
2582.54 1338.93 2579.7 1338.93 2576.87 1338.94 cv
2563.55 1338.94 2550.28 1338.95 2537.15 1338.95 cv
2535.73 1338.95 2534.32 1338.95 2532.9 1338.95 cv
2526.31 1338.95 2519.74 1338.96 2513.22 1338.96 cv
2511.66 1338.96 2510.09 1338.96 2508.53 1338.96 cv
2501.64 1338.96 2494.8 1338.96 2488.02 1338.97 cv
2485.44 1338.97 2482.87 1338.97 2480.31 1338.97 cv
2476.53 1338.97 2472.77 1338.97 2469.03 1338.97 cv
2464.6 1338.97 2460.2 1338.97 2455.83 1338.98 cv
2453.95 1338.98 2452.08 1338.98 2450.21 1338.98 cv
2449.36 1338.98 2448.49 1338.98 2447.63 1338.98 cv
2441.83 1338.98 2436.09 1338.98 2430.42 1338.98 cv
2426.2 1338.99 2422.02 1338.99 2417.88 1338.99 cv
2409.22 1338.99 2400.76 1338.99 2392.5 1339 cv
2389.52 1339 2386.55 1339 2383.63 1339 cv
2379.29 1339 2375.02 1339 2370.82 1339 cv
2369.12 1339 2367.43 1339 2365.75 1339 cv
2322.34 1339.02 2286.68 1339.03 2263.67 1339.03 cv
2244.31 1339.04 2224.95 1339.07 2205.59 1339.12 cv
2166.93 1339.2 2128.27 1339.35 2089.61 1339.46 cv
2070.19 1339.52 2050.77 1339.56 2031.35 1339.59 cv
1941.13 1339.72 1850.91 1339.71 1760.69 1339.76 cv
1725.19 1339.77 1689.69 1339.39 1654.2 1338.89 cv
1645.33 1338.76 1636.46 1338.63 1627.58 1338.5 cv
1600.96 1338.09 1574.34 1337.66 1547.72 1337.33 cv
1542.64 1337.27 1536.06 1337.22 1528.22 1337.19 cv
1527.43 1337.19 1526.63 1337.18 1525.83 1337.18 cv
1520.97 1337.16 1515.68 1337.15 1509.99 1337.14 cv
1509.04 1337.14 1508.09 1337.14 1507.12 1337.13 cv
1504.21 1337.13 1501.21 1337.13 1498.12 1337.13 cv
1497.09 1337.13 1496.05 1337.13 1495 1337.13 cv
1487.65 1337.12 1479.83 1337.13 1471.63 1337.13 cv
1470.46 1337.14 1469.28 1337.14 1468.09 1337.14 cv
1463.34 1337.14 1458.47 1337.15 1453.5 1337.16 cv
1452.25 1337.16 1451 1337.16 1449.75 1337.17 cv
1447.23 1337.17 1444.69 1337.18 1442.13 1337.18 cv
1437 1337.19 1431.78 1337.21 1426.48 1337.22 cv
1422.51 1337.23 1418.49 1337.24 1414.44 1337.25 cv
1406.32 1337.27 1398.06 1337.3 1389.71 1337.33 cv
1386.92 1337.34 1384.12 1337.35 1381.32 1337.36 cv
1374.31 1337.38 1367.24 1337.41 1360.15 1337.43 cv
1357.31 1337.44 1354.47 1337.46 1351.63 1337.47 cv
1345.95 1337.49 1340.26 1337.51 1334.57 1337.54 cv
1331.73 1337.55 1328.89 1337.56 1326.06 1337.57 cv
1306.21 1337.66 1286.57 1337.75 1267.81 1337.84 cv
1265.13 1337.85 1262.46 1337.86 1259.82 1337.88 cv
1197.72 1338.19 1146.61 1338.5 1132.13 1338.62 cv
1125.35 1338.68 1113.03 1338.64 1096.91 1338.55 cv
1094.71 1338.54 1092.44 1338.52 1090.1 1338.51 cv
1075.31 1338.41 1057.85 1338.28 1038.84 1338.11 cv
1032.84 1338.05 1026.68 1338 1020.4 1337.94 cv
1019.35 1337.93 1018.3 1337.92 1017.25 1337.91 cv
1015.15 1337.89 1013.03 1337.87 1010.9 1337.85 cv
1007.7 1337.82 1004.48 1337.79 1001.24 1337.76 cv
999.081 1337.74 996.911 1337.72 994.733 1337.69 cv
990.377 1337.65 985.988 1337.61 981.577 1337.56 cv
979.372 1337.54 977.161 1337.52 974.945 1337.5 cv
973.838 1337.49 972.729 1337.47 971.62 1337.46 cv
964.962 1337.4 958.273 1337.33 951.587 1337.26 cv
949.358 1337.23 947.13 1337.21 944.903 1337.19 cv
941.563 1337.15 938.226 1337.12 934.898 1337.08 cv
932.679 1337.06 930.464 1337.04 928.253 1337.01 cv
922.727 1336.95 917.231 1336.89 911.786 1336.83 cv
910.697 1336.82 909.61 1336.81 908.525 1336.8 cv
906.355 1336.78 904.195 1336.75 902.044 1336.73 cv
898.818 1336.69 895.614 1336.66 892.438 1336.62 cv
887.143 1336.57 881.924 1336.51 876.801 1336.45 cv
874.751 1336.43 872.717 1336.41 870.699 1336.38 cv
864.646 1336.31 858.742 1336.25 853.022 1336.18 cv
850.162 1336.15 847.348 1336.12 844.585 1336.09 cv
841.821 1336.06 839.108 1336.03 836.45 1336 cv
835.564 1335.98 834.683 1335.97 833.81 1335.96 cv
830.314 1335.92 826.919 1335.89 823.634 1335.85 cv
822.813 1335.84 821.999 1335.83 821.191 1335.82 cv
819.577 1335.8 817.991 1335.78 816.434 1335.76 cv
810.207 1335.69 804.452 1335.63 799.253 1335.56 cv
797.954 1335.55 796.689 1335.53 795.46 1335.52 cv
794.231 1335.5 793.038 1335.49 791.882 1335.48 cv
766.919 1335.18 741.947 1335.39 716.981 1335.39 cv
702.001 1335.38 687.023 1335.3 672.049 1334.98 cv
637.392 1334.24 602.738 1335.3 568.09 1335.88 cv
556.54 1336.07 544.992 1336.21 533.444 1336.21 cv
518.046 1336.21 502.65 1335.96 487.256 1335.26 cv
486.92 1335.25 486.568 1335.23 486.198 1335.22 cv
486.173 1335.22 486.146 1335.22 486.121 1335.21 cv
485.779 1335.2 485.423 1335.19 485.052 1335.17 cv
484.973 1335.17 484.888 1335.17 484.808 1335.17 cv
484.49 1335.15 484.168 1335.14 483.831 1335.13 cv
483.674 1335.13 483.507 1335.12 483.346 1335.12 cv
483.075 1335.11 482.803 1335.1 482.52 1335.09 cv
482.336 1335.08 482.144 1335.08 481.956 1335.07 cv
481.663 1335.06 481.37 1335.06 481.065 1335.05 cv
480.877 1335.04 480.681 1335.04 480.488 1335.03 cv
480.187 1335.02 479.884 1335.01 479.572 1335.01 cv
479.359 1335 479.139 1335 478.921 1334.99 cv
478.591 1334.98 478.259 1334.97 477.917 1334.97 cv
477.719 1334.96 477.517 1334.96 477.315 1334.95 cv
476.949 1334.94 476.579 1334.93 476.2 1334.92 cv
475.997 1334.92 475.791 1334.92 475.584 1334.91 cv
475.192 1334.9 474.794 1334.89 474.389 1334.89 cv
474.183 1334.88 473.975 1334.88 473.766 1334.87 cv
473.345 1334.86 472.918 1334.85 472.485 1334.85 cv
472.278 1334.84 472.071 1334.84 471.861 1334.83 cv
471.41 1334.82 470.951 1334.82 470.487 1334.81 cv
470.278 1334.8 470.071 1334.8 469.86 1334.8 cv
469.421 1334.79 468.972 1334.78 468.521 1334.77 cv
468.25 1334.77 467.98 1334.76 467.705 1334.76 cv
467.28 1334.75 466.847 1334.74 466.412 1334.73 cv
466.122 1334.73 465.834 1334.72 465.54 1334.72 cv
465.115 1334.71 464.681 1334.71 464.247 1334.7 cv
463.93 1334.69 463.616 1334.69 463.294 1334.68 cv
462.759 1334.67 462.215 1334.67 461.667 1334.66 cv
461.468 1334.65 461.273 1334.65 461.072 1334.65 cv
460.371 1334.64 459.659 1334.63 458.939 1334.62 cv
458.856 1334.62 458.775 1334.61 458.692 1334.61 cv
458.041 1334.6 457.377 1334.59 456.711 1334.59 cv
456.517 1334.58 456.327 1334.58 456.132 1334.58 cv
455.329 1334.57 454.515 1334.56 453.691 1334.54 cv
453.662 1334.54 453.635 1334.54 453.607 1334.54 cv
452.737 1334.53 451.854 1334.52 450.96 1334.51 cv
450.861 1334.51 450.759 1334.51 450.661 1334.51 cv
449.865 1334.5 449.063 1334.49 448.249 1334.48 cv
448.043 1334.47 447.831 1334.47 447.623 1334.47 cv
446.95 1334.46 446.275 1334.45 445.59 1334.44 cv
445.189 1334.44 444.782 1334.44 444.377 1334.43 cv
443.82 1334.42 443.263 1334.42 442.698 1334.41 cv
442.428 1334.41 442.153 1334.41 441.881 1334.4 cv
441.165 1334.4 440.447 1334.39 439.719 1334.38 cv
439.43 1334.38 439.136 1334.37 438.844 1334.37 cv
438.23 1334.36 437.613 1334.36 436.991 1334.35 cv
436.477 1334.35 435.958 1334.34 435.439 1334.34 cv
434.964 1334.33 434.489 1334.33 434.009 1334.32 cv
433.548 1334.32 433.084 1334.31 432.619 1334.31 cv
431.971 1334.3 431.321 1334.29 430.665 1334.29 cv
430.355 1334.29 430.043 1334.28 429.731 1334.28 cv
429.069 1334.27 428.404 1334.27 427.735 1334.26 cv
427.215 1334.26 426.693 1334.25 426.169 1334.25 cv
425.71 1334.24 425.25 1334.24 424.788 1334.23 cv
424.15 1334.23 423.509 1334.22 422.864 1334.22 cv
422.429 1334.21 421.992 1334.21 421.554 1334.2 cv
420.996 1334.2 420.438 1334.2 419.875 1334.19 cv
419.196 1334.18 418.512 1334.18 417.826 1334.17 cv
417.444 1334.17 417.062 1334.17 416.678 1334.16 cv
415.864 1334.16 415.046 1334.15 414.223 1334.14 cv
413.945 1334.14 413.669 1334.14 413.39 1334.14 cv
412.597 1334.13 411.798 1334.12 410.997 1334.12 cv
410.602 1334.11 410.209 1334.11 409.813 1334.11 cv
409.149 1334.1 408.48 1334.1 407.811 1334.09 cv
407.298 1334.09 406.786 1334.08 406.27 1334.08 cv
405.683 1334.08 405.091 1334.07 404.501 1334.07 cv
403.909 1334.06 403.318 1334.06 402.722 1334.05 cv
402.201 1334.05 401.674 1334.05 401.149 1334.04 cv
400.502 1334.04 399.858 1334.03 399.206 1334.03 cv
398.904 1334.03 398.597 1334.03 398.294 1334.02 cv
396.383 1334.01 394.455 1334 392.507 1333.98 cv
392.358 1333.98 392.211 1333.98 392.062 1333.98 cv
388.722 1333.96 385.329 1333.94 381.894 1333.91 cv
381.62 1333.91 381.348 1333.91 381.073 1333.91 cv
380.248 1333.9 379.418 1333.9 378.587 1333.89 cv
378.16 1333.89 377.734 1333.89 377.306 1333.89 cv
376.514 1333.88 375.719 1333.88 374.923 1333.87 cv
374.44 1333.87 373.958 1333.87 373.474 1333.86 cv
372.501 1333.86 371.524 1333.85 370.545 1333.85 cv
370.343 1333.84 370.141 1333.84 369.939 1333.84 cv
368.913 1333.84 367.883 1333.83 366.851 1333.82 cv
366.588 1333.82 366.326 1333.82 366.063 1333.82 cv
365.057 1333.81 364.048 1333.81 363.036 1333.8 cv
362.738 1333.8 362.44 1333.8 362.142 1333.8 cv
361.122 1333.79 360.099 1333.79 359.074 1333.78 cv
358.845 1333.78 358.616 1333.78 358.388 1333.78 cv
357.377 1333.77 356.364 1333.77 355.348 1333.76 cv
355.01 1333.76 354.671 1333.76 354.333 1333.76 cv
353.259 1333.75 352.183 1333.75 351.104 1333.74 cv
351.029 1333.74 350.954 1333.74 350.878 1333.74 cv
349.714 1333.73 348.548 1333.73 347.378 1333.72 cv
346.796 1333.72 346.212 1333.72 345.629 1333.71 cv
345.145 1333.71 344.663 1333.71 344.179 1333.71 cv
343.018 1333.7 341.854 1333.69 340.688 1333.69 cv
340.471 1333.69 340.255 1333.69 340.038 1333.69 cv
339.31 1333.68 338.58 1333.68 337.85 1333.67 cv
337.031 1333.67 336.212 1333.67 335.39 1333.66 cv
335.071 1333.66 334.751 1333.66 334.432 1333.66 cv
333.506 1333.65 332.581 1333.65 331.653 1333.65 cv
330.756 1333.64 329.856 1333.64 328.956 1333.63 cv
328.479 1333.63 328.003 1333.63 327.525 1333.63 cv
327.145 1333.62 326.763 1333.62 326.382 1333.62 cv
324.616 1333.61 322.846 1333.61 321.073 1333.6 cv
319.689 1333.59 318.304 1333.59 316.917 1333.58 cv
314.383 1333.57 311.845 1333.56 309.301 1333.55 cv
302.737 1333.52 296.147 1333.49 289.556 1333.47 cv
289.419 1333.47 289.282 1333.47 289.144 1333.47 cv
286.378 1333.46 283.612 1333.45 280.848 1333.44 cv
268.571 1338.59 256.232 1343.62 243.841 1348.41 cv
261.638 1341.53 243.664 1348.56 239.769 1350.33 cv
235.869 1352.11 231.991 1353.94 228.155 1355.85 cv
220.283 1359.77 212.557 1364.01 205.177 1368.8 cv
203.448 1369.93 201.787 1371.2 200.069 1372.35 cv
197.922 1374.23 195.793 1376.12 193.778 1378.16 cv
193.288 1378.66 192.82 1379.17 192.347 1379.68 cv
190.856 1382.67 189.607 1384.32 188.818 1385.03 cv
188.274 1385.82 187.751 1386.6 187.267 1387.33 cv
187.082 1387.89 186.894 1388.45 186.732 1389.02 cv
186.395 1390.21 186.171 1391.46 185.916 1392.7 cv
185.892 1395.39 185.893 1398.08 185.918 1400.77 cv
188.114 1404.86 187.591 1407.74 186.876 1407.46 cv
188.046 1412.19 189.811 1416.76 191.053 1421.44 cv
191.385 1422.09 191.715 1422.75 192.073 1423.39 cv
195.004 1428.62 204.148 1437.14 192.168 1425.12 cv
194.879 1427.84 197.188 1430.97 199.943 1433.68 cv
201.427 1435.13 203.104 1436.44 204.623 1437.87 cv
206.945 1439.44 209.275 1440.98 211.698 1442.41 cv
215.19 1444.47 218.771 1446.38 222.419 1448.15 cv
223.054 1448.46 223.575 1448.72 224.041 1448.95 cv
224.224 1449.02 224.388 1449.08 224.588 1449.15 cv
241.915 1455.68 260.075 1459.85 278.33 1462.78 cv
278.828 1462.86 279.272 1462.93 279.684 1463 cv
280.574 1463.11 281.362 1463.23 281.964 1463.32 cv
282.332 1463.36 282.701 1463.41 283.069 1463.45 cv
287.545 1463.96 292.028 1464.41 296.516 1464.8 cv
305.854 1465.62 315.211 1466.2 324.575 1466.61 cv
342.25 1467.38 359.942 1467.52 377.632 1467.52 cv
488.966 1467.52 599.894 1452.42 711.211 1454.91 cv
772.232 1456.28 834.035 1463.53 892.825 1480.33 cv
947.861 1496.05 999.269 1522.03 1054 1538.67 cv
1067.1 1542.65 1080.36 1546.06 1093.82 1548.58 cv
1095.59 1548.92 1097.65 1549.51 1099.66 1549.91 cv
1100.27 1549.89 1100.92 1549.89 1101.57 1549.95 cv
1108.52 1550.52 1115.42 1551.18 1122.4 1551.38 cv
1129.55 1551.57 1136.71 1551.49 1143.85 1551.09 cv
1147.52 1550.89 1151.19 1550.6 1154.85 1550.24 cv
1156.05 1550.12 1157.46 1550.18 1158.67 1550.29 cv
1164.25 1550.04 1171.61 1547.47 1176.29 1546.55 cv
1182.83 1545.26 1189.34 1543.82 1195.82 1542.24 cv
1249.37 1529.18 1299.9 1506.13 1353.58 1493.57 cv
1383.68 1486.53 1415.01 1482.25 1445.95 1482.57 cv
1478.58 1482.91 1511.17 1487.92 1543.25 1493.48 cv
1558.73 1496.17 1574.14 1499.13 1589.61 1501.85 cv
1595.49 1502.89 1601.37 1503.9 1607.27 1504.84 cv
1610.83 1505.4 1614.4 1505.9 1617.96 1506.46 cv
1618.34 1506.5 1618.75 1506.54 1619.2 1506.59 cv
1634.04 1508.16 1648.87 1509.4 1663.81 1509.39 cv
1671.34 1509.38 1678.87 1509.11 1686.38 1508.51 cv
1688.24 1508.36 1690.28 1508.28 1692.25 1508.09 cv
1693.22 1507.85 1694.24 1507.62 1694.87 1507.5 cv
1816.23 1484.83 1938.81 1457.22 2062.64 1453.84 cv
2120.64 1452.26 2178.23 1460.09 2235.68 1466.95 cv
2266.43 1470.62 2297.24 1474 2328.17 1475.6 cv
2356.16 1477.06 2384.21 1476.65 2412.22 1477.41 cv
2439.77 1478.17 2467.32 1479.16 2494.88 1479.03 cv
2510.2 1478.96 2525.53 1478.55 2540.82 1477.56 cv
2547.32 1477.14 2553.81 1476.62 2560.29 1475.96 cv
2563.16 1475.67 2566.01 1475.32 2568.88 1475.02 cv
2569.12 1474.99 2569.35 1474.97 2569.57 1474.95 cv
2570.06 1474.85 2570.62 1474.74 2571.27 1474.62 cv
2585.18 1472.02 2598.98 1469.45 2612.59 1465.49 cv
2617.56 1464.04 2622.42 1462.22 2627.37 1460.7 cv
2628.72 1460.04 2630.09 1459.39 2631.43 1458.7 cv
2636.12 1456.28 2640.68 1453.61 2645.1 1450.73 cv
2646.64 1449.74 2648.48 1448.18 2649.94 1446.87 cv
2653.88 1442.99 2652.54 1444.53 2649.94 1446.87 cv
2649.08 1447.71 2647.98 1448.81 2646.58 1450.21 cv
2652.45 1444.32 2659.08 1439.35 2664.7 1433.11 cv
2665.3 1432.44 2667.08 1430.24 2668.38 1428.65 cv
2670.46 1425.62 2672.44 1422.51 2674.28 1419.32 cv
2675.92 1416.5 2677.35 1413.59 2678.83 1410.7 cv
2679.24 1409.69 2679.65 1408.68 2679.98 1407.68 cv
2681.32 1403.67 2682.47 1399.6 2683.39 1395.48 cv
2683.54 1394.77 2683.67 1394.06 2683.8 1393.34 cv
2683.92 1390.31 2684.2 1387.28 2684.16 1384.23 cv
2684.15 1383.81 2684.13 1383.4 2684.12 1382.98 cv
2682.4 1378.2 2682.42 1375.74 2682.84 1375.22 cv
2682.65 1374.18 2682.43 1373.18 2682.15 1372.23 cv
2682.03 1371.82 2681.91 1371.43 2681.77 1371.03 cv
2679.17 1367.36 2678.38 1365.09 2678.41 1364.2 cv
2677.92 1363.22 2677.42 1362.27 2676.87 1361.4 cv
2676.77 1361.23 2676.65 1361.07 2676.54 1360.91 cv
2673.49 1358.26 2670.77 1354.6 2667.86 1351.6 cv
2668.58 1352.65 2667.5 1352.39 2663.32 1347.95 cv
2659.65 1345.69 2656.08 1343.33 2652.28 1341.28 cv
2651.39 1340.8 2649.36 1339.87 2647.24 1338.91 cv
2640.58 1338.91 2633.91 1338.91 2627.24 1338.92 cv
2626.03 1338.92 2624.83 1338.92 2623.63 1338.92 cv
2615.02 1338.92 2606.41 1338.92 2597.8 1338.93 cv
cp
.737255 .847059 .737255 rgb
f
2664.84 1348.89 mo
2663.75 1348.04 2662.6 1347.18 2661.77 1346.26 cv
2662.33 1346.88 2662.84 1347.44 2663.32 1347.95 cv
2663.7 1348.18 2664.07 1348.41 2664.45 1348.64 cv
2664.58 1348.72 2664.71 1348.8 2664.84 1348.89 cv
cp
.741176 .839216 .741176 rgb
f
1072.19 1084.35 mo
1085.51 1082.28 1094.11 1092.49 1094.39 1105.91 cv
1094.52 1112.48 1091.11 1119.59 1088.47 1125.18 cv
1082.84 1137.06 1076.73 1144.1 1070.19 1155.5 cv
1066.08 1162.66 1067.08 1166.18 1074.94 1169.8 cv
1106.36 1184.26 1143.88 1158.88 1144.71 1122.23 cv
1145.06 1107.15 1139.94 1089.34 1128.14 1079.13 cv
1106.84 1060.68 1053.05 1066.21 1049.39 1096.9 cv
1055.86 1088.2 1066.11 1085.3 1072.19 1084.35 cv
cp
1 1 1 rgb
f
1134.72 1190.78 mo
1132.78 1187.97 1130.07 1185.69 1127.79 1183.1 cv
1124.36 1179.19 1120.33 1178.02 1115.43 1180.04 cv
1101.78 1185.69 1087.69 1183.95 1073.61 1181.72 cv
1073.17 1188.57 1079.32 1190.69 1081.37 1195.26 cv
1082.35 1197.44 1082.36 1199.77 1080.19 1201.44 cv
1077.9 1203.21 1075.99 1202.24 1074.32 1200.37 cv
1058.24 1182.33 1047.72 1163.79 1064.99 1144.24 cv
1083.69 1118.38 1089.69 1107.76 1082.26 1099.12 cv
1070.44 1085.39 1055.45 1100.41 1050.91 1106.67 cv
1039.44 1122.51 1028.35 1138.64 1021.6 1157.23 cv
1018.11 1166.82 1016.17 1175.16 1019.87 1184.71 cv
1024.74 1197.28 1062.16 1247.61 1063.76 1264.33 cv
1066.49 1292.89 1067.75 1321.68 1067.8 1350.38 cv
1067.86 1384.24 1062.39 1456.24 1070.38 1467.76 cv
1075.98 1476.1 1090.24 1476.53 1101.82 1469.22 cv
1109.78 1463.71 1104.16 1400.22 1101.86 1376.8 cv
1100.72 1365.27 1101 1353.94 1102.71 1342.6 cv
1103.75 1335.63 1107.78 1331.06 1114.99 1330.13 cv
1121.89 1329.24 1126.48 1333.69 1128.36 1339.12 cv
1140.83 1375.09 1139.16 1440.72 1141.8 1456.61 cv
1142.88 1463.12 1150.35 1468.81 1158.14 1467.79 cv
1175.29 1465.56 1175.88 1458.88 1175.2 1439.14 cv
1173.3 1384.05 1171.04 1328.91 1156.54 1275.22 cv
1154.83 1268.86 1153.23 1262.57 1155.48 1254.7 cv
1157.81 1257.15 1159.38 1258.13 1159.97 1259.53 cv
1168.02 1278.56 1170.19 1299.37 1178.43 1321.92 cv
1183.52 1314.6 1185.33 1309.33 1184.55 1303.54 cv
1178.86 1261.4 1158.44 1225.12 1134.72 1190.78 cv
cp
f
1178.43 1321.92 mo
1170.19 1299.37 1168.02 1278.56 1159.97 1259.53 cv
1159.38 1258.13 1157.81 1257.15 1155.48 1254.7 cv
1153.23 1262.57 1154.83 1268.86 1156.54 1275.22 cv
1171.04 1328.91 1173.3 1384.05 1175.2 1439.14 cv
1175.88 1458.88 1175.29 1465.56 1158.14 1467.79 cv
1150.35 1468.81 1142.88 1463.12 1141.8 1456.61 cv
1139.16 1440.72 1140.83 1375.09 1128.36 1339.12 cv
1126.48 1333.69 1121.89 1329.24 1114.99 1330.13 cv
1107.78 1331.06 1103.75 1335.63 1102.71 1342.6 cv
1101 1353.94 1100.72 1365.27 1101.86 1376.8 cv
1104.16 1400.22 1109.78 1463.71 1101.82 1469.22 cv
1090.24 1476.53 1075.98 1476.1 1070.38 1467.76 cv
1062.39 1456.24 1067.86 1384.24 1067.8 1350.38 cv
1067.75 1321.68 1066.49 1292.89 1063.76 1264.33 cv
1062.16 1247.61 1024.74 1197.28 1019.87 1184.71 cv
1016.17 1175.16 1018.11 1166.82 1021.6 1157.23 cv
1028.35 1138.64 1039.44 1122.51 1050.91 1106.67 cv
1055.45 1100.41 1070.44 1085.39 1082.26 1099.12 cv
1089.69 1107.76 1083.69 1118.38 1064.99 1144.24 cv
1047.72 1163.79 1058.24 1182.33 1074.32 1200.37 cv
1075.99 1202.24 1077.9 1203.21 1080.19 1201.44 cv
1082.36 1199.77 1082.35 1197.44 1081.37 1195.26 cv
1079.32 1190.69 1073.17 1188.57 1073.61 1181.72 cv
1087.69 1183.95 1101.78 1185.69 1115.43 1180.04 cv
1120.33 1178.02 1124.36 1179.19 1127.79 1183.1 cv
1130.07 1185.69 1132.78 1187.97 1134.72 1190.78 cv
1158.44 1225.12 1178.86 1261.4 1184.55 1303.54 cv
1185.33 1309.33 1183.52 1314.6 1178.43 1321.92 cv
cp
1128.14 1079.13 mo
1139.94 1089.34 1145.06 1107.15 1144.71 1122.23 cv
1143.88 1158.88 1106.36 1184.26 1074.94 1169.8 cv
1067.08 1166.18 1066.08 1162.66 1070.19 1155.5 cv
1076.73 1144.1 1082.84 1137.06 1088.47 1125.18 cv
1091.11 1119.59 1094.52 1112.48 1094.39 1105.91 cv
1094.11 1092.49 1085.51 1082.28 1072.19 1084.35 cv
1066.11 1085.3 1055.86 1088.2 1049.39 1096.9 cv
1053.05 1066.21 1106.84 1060.68 1128.14 1079.13 cv
cp
1142.78 1184.63 mo
1133.03 1170.53 1131.99 1169.32 1141.36 1156.85 cv
1152 1142.68 1157.11 1126.39 1153.46 1108.16 cv
1146.6 1073.89 1113.07 1055.1 1082.59 1060.13 cv
1053.92 1064.87 1039.01 1079.99 1037.32 1105.13 cv
1037.32 1105.13 1025.9 1127.25 1021.03 1137.11 cv
1018.23 1142.75 1015.29 1148.33 1012.31 1153.88 cv
1006.45 1164.82 1006.62 1175.74 1011.7 1186.95 cv
1016.5 1197.56 1023.29 1209.1 1031.06 1217.58 cv
1048.64 1244.94 1055.15 1254.02 1056.12 1277.83 cv
1056.8 1294.43 1058.04 1311.03 1058.04 1327.63 cv
1058.04 1371.87 1060.3 1412.63 1057.54 1456.88 cv
1056.53 1473.11 1064.8 1479.59 1077.23 1482.18 cv
1099.76 1487.47 1116.82 1476.07 1116.91 1453.34 cv
1116.93 1448.76 1116.83 1444.13 1116.24 1439.6 cv
1113.04 1415.1 1112.46 1390.42 1111.15 1365.79 cv
1110.71 1357.46 1111.01 1348.98 1116.68 1340.53 cv
1123.42 1346.34 1124.13 1353.07 1125.15 1359.69 cv
1129.07 1385.3 1133.76 1456.12 1134.47 1465.83 cv
1134.73 1469.41 1139.06 1473.52 1142.64 1474.85 cv
1161.33 1481.75 1185.57 1473.09 1185.56 1447.53 cv
1185.56 1435.47 1186.33 1423.42 1185.21 1411.37 cv
1183.26 1390.21 1181.56 1369.02 1179.38 1347.89 cv
1178.59 1340.21 1177.65 1333.41 1185.46 1328.02 cv
1192.89 1322.9 1193.09 1314.7 1192.13 1306.2 cv
1187.04 1261.04 1168.11 1221.28 1142.78 1184.63 cv
cp
0 0 0 rgb
f
996.844 1221.37 mo
997.604 1218.76 995.912 1217.16 994.333 1215.64 cv
973.802 1195.87 966.872 1172.93 977.601 1145.64 cv
978.811 1142.56 979.343 1138.85 974.53 1137.66 cv
954.975 1165.44 963.3 1215.58 996.844 1221.37 cv
cp
f
977.507 1487.63 mo
975.138 1487.91 973.53 1489.72 974.021 1492.5 cv
974.547 1495.48 977.081 1495.96 979.231 1495.72 cv
1001.38 1493.18 1023.68 1494.72 1045.91 1492.02 cv
1023.63 1480.13 1000.5 1484.89 977.507 1487.63 cv
cp
f
1894.87 1039.59 mo
1893.23 1034.52 1889.04 1031.11 1883.08 1030.76 cv
1877.21 1030.41 1873.38 1034.26 1871.28 1039.25 cv
1868.39 1046.12 1865.94 1053.19 1863.68 1060.29 cv
1860.55 1070.14 1857.03 1079.81 1853.26 1089.45 cv
1837.55 1129.68 1805.35 1147.84 1765.45 1154.95 cv
1755.67 1156.7 1747.86 1160.35 1741.58 1167.12 cv
1731.36 1178.15 1723.31 1190.66 1719.16 1205.4 cv
1711.14 1233.85 1709.95 1263.1 1708.83 1292.34 cv
1708.63 1297.43 1709.91 1302.6 1710.7 1307.7 cv
1711.54 1313.1 1713.76 1318.89 1719.57 1318.86 cv
1727.06 1318.82 1724.92 1311.41 1725.51 1306.92 cv
1728.95 1280.76 1731.97 1254.54 1735.26 1228.36 cv
1736.09 1221.73 1736.42 1214.8 1743.93 1207 cv
1747.52 1220.75 1744.48 1231.4 1742.5 1241.63 cv
1733.55 1287.9 1732.33 1334.68 1732.77 1381.51 cv
1732.9 1395.1 1729.76 1436.29 1753.31 1436.22 cv
1763.71 1436.29 1763.55 1422.05 1765.75 1411.77 cv
1768.22 1369.98 1770.45 1345.63 1774.32 1312.61 cv
1774.84 1308.17 1776.72 1303.7 1778.78 1299.66 cv
1782.92 1291.56 1791.83 1290 1798.85 1295.84 cv
1803.01 1299.3 1805.27 1304.06 1806.13 1309.22 cv
1808.03 1320.51 1810.65 1394.95 1814.11 1420.67 cv
1815.12 1428.21 1817.35 1434.25 1825.91 1435.1 cv
1832.26 1435.73 1839.89 1429.3 1841.32 1421.35 cv
1842.84 1412.91 1844.17 1404.25 1844.02 1395.71 cv
1843.09 1341.79 1842.26 1287.85 1840.25 1233.96 cv
1839.34 1209.32 1845.99 1187.59 1858.87 1167.19 cv
1873.6 1143.85 1906.82 1075.97 1894.87 1039.59 cv
cp
1 1 1 rgb
f
1812.51 1096.81 mo
1811.63 1070.52 1799.81 1043.5 1763.49 1044.2 cv
1729.85 1044.09 1710.18 1067.03 1709.9 1099.11 cv
1709.69 1124.71 1731.42 1147.81 1760.31 1148.08 cv
1789.95 1149.99 1813.34 1121.52 1812.51 1096.81 cv
cp
f
1840.25 1233.96 mo
1842.26 1287.85 1843.09 1341.79 1844.02 1395.71 cv
1844.17 1404.25 1842.84 1412.91 1841.32 1421.35 cv
1839.89 1429.3 1832.26 1435.73 1825.91 1435.1 cv
1817.35 1434.25 1815.12 1428.21 1814.11 1420.67 cv
1810.65 1394.95 1808.03 1320.51 1806.13 1309.22 cv
1805.27 1304.06 1803.01 1299.3 1798.85 1295.84 cv
1791.83 1290 1782.92 1291.56 1778.78 1299.66 cv
1776.72 1303.7 1774.84 1308.17 1774.32 1312.61 cv
1770.45 1345.63 1768.22 1369.98 1765.75 1411.77 cv
1763.55 1422.05 1763.71 1436.29 1753.31 1436.22 cv
1729.76 1436.29 1732.9 1395.1 1732.77 1381.51 cv
1732.33 1334.68 1733.55 1287.9 1742.5 1241.63 cv
1744.48 1231.4 1747.52 1220.75 1743.93 1207 cv
1736.42 1214.8 1736.09 1221.73 1735.26 1228.36 cv
1731.97 1254.54 1728.95 1280.76 1725.51 1306.92 cv
1724.92 1311.41 1727.06 1318.82 1719.57 1318.86 cv
1713.76 1318.89 1711.54 1313.1 1710.7 1307.7 cv
1709.91 1302.6 1708.63 1297.43 1708.83 1292.34 cv
1709.95 1263.1 1711.14 1233.85 1719.16 1205.4 cv
1723.31 1190.66 1731.36 1178.15 1741.58 1167.12 cv
1747.86 1160.35 1755.67 1156.7 1765.45 1154.95 cv
1805.35 1147.84 1837.55 1129.68 1853.26 1089.45 cv
1857.03 1079.81 1860.55 1070.14 1863.68 1060.29 cv
1865.94 1053.19 1868.39 1046.12 1871.28 1039.25 cv
1873.38 1034.26 1877.21 1030.41 1883.08 1030.76 cv
1889.04 1031.11 1893.23 1034.52 1894.87 1039.59 cv
1906.82 1075.97 1873.6 1143.85 1858.87 1167.19 cv
1845.99 1187.59 1839.34 1209.32 1840.25 1233.96 cv
cp
1709.9 1099.11 mo
1710.18 1067.03 1729.85 1044.09 1763.49 1044.2 cv
1799.81 1043.5 1811.63 1070.52 1812.51 1096.81 cv
1813.34 1121.52 1789.95 1149.99 1760.31 1148.08 cv
1731.42 1147.81 1709.69 1124.71 1709.9 1099.11 cv
cp
1903.34 1036.03 mo
1900.84 1026.55 1888.63 1017.35 1880.33 1017.77 cv
1870.04 1018.29 1865.97 1026.19 1862.52 1034.29 cv
1860.95 1037.97 1860.04 1041.93 1858.84 1045.77 cv
1853.87 1061.66 1849.84 1077.86 1842.27 1092.86 cv
1834.98 1107.31 1829.91 1113.35 1820.25 1118.01 cv
1828.98 1077.8 1810.3 1047.33 1780.34 1038.7 cv
1755.42 1031.52 1720.38 1040.17 1706.23 1069.69 cv
1691.65 1100.1 1700.26 1130.7 1738.62 1156.09 cv
1737.82 1157.55 1737.3 1159.32 1736.16 1160.45 cv
1720.02 1176.35 1711.97 1195.81 1706.94 1217.82 cv
1701.25 1242.75 1700.32 1267.95 1698.94 1293.09 cv
1698.23 1305.98 1699.7 1320.99 1714.51 1326.8 cv
1723.47 1330.32 1723.29 1336.07 1722.99 1342.96 cv
1722.16 1361.95 1723.29 1380.88 1724.21 1399.84 cv
1724.7 1409.84 1725.33 1419.06 1728.68 1428.19 cv
1732.34 1438.18 1747.05 1445.76 1756.72 1444.68 cv
1765.77 1443.68 1770.96 1436.52 1772.33 1422.97 cv
1772.68 1419.55 1776.86 1353.08 1782.01 1323.63 cv
1782.8 1319.13 1783.71 1314.58 1785.23 1310.28 cv
1786.24 1307.46 1789.18 1305.92 1792.21 1306.3 cv
1794.56 1306.6 1796.09 1308.61 1796.78 1310.95 cv
1797.9 1314.81 1799.46 1318.64 1799.93 1322.58 cv
1801.99 1339.7 1803.47 1406.34 1804.34 1422.39 cv
1805.11 1436.69 1810.26 1442.24 1821.85 1444.24 cv
1832.66 1446.12 1842.09 1440.44 1847.54 1430.16 cv
1852.02 1421.7 1853.94 1412.61 1853.69 1403.35 cv
1852.29 1352.26 1851.69 1301.12 1849.05 1250.09 cv
1847.54 1220.78 1853.17 1194.66 1869.83 1170.23 cv
1886.07 1146.43 1913.64 1079.36 1903.34 1036.03 cv
cp
0 0 0 rgb
f
1932.59 1099.23 mo
1928.59 1099.54 1929.14 1103.05 1929.2 1105.79 cv
1929.77 1132.15 1920.22 1154.57 1903.79 1174.69 cv
1927.88 1158.34 1936.59 1134.27 1937.17 1106.29 cv
1937.24 1102.99 1937.85 1098.82 1932.59 1099.23 cv
cp
f
1643.24 1445.92 mo
1643.44 1450.34 1647.92 1450.03 1651.28 1450.22 cv
1670.76 1451.34 1690.12 1450.33 1708.62 1444.22 cv
1689.28 1443.06 1669.93 1441.91 1650.59 1440.74 cv
1646.7 1440.5 1643.06 1441.87 1643.24 1445.92 cv
cp
f
791.154 1043.9 mo
794.476 1035.12 801.485 1009.65 787.224 988.865 cv
776.597 971.476 759.745 961.162 734.13 966.844 cv
705.165 973.41 692.739 990.761 691.656 1014.39 cv
690.441 1043.27 701.707 1060.51 726.819 1070.38 cv
747.188 1078.39 782.556 1066.61 791.154 1043.9 cv
cp
1 1 1 rgb
f
794.439 1192.4 mo
792.188 1178.16 789.728 1163.58 791.79 1145.61 cv
795.831 1159.76 797.484 1164.29 798.281 1171 cv
806.077 1193.07 816.602 1196.61 835.642 1195.86 cv
853.92 1195.14 888.491 1151.77 888.325 1136.67 cv
888.237 1128.79 883.238 1121.81 875.828 1125.47 cv
868.131 1129.26 860.815 1137.08 855.251 1144.19 cv
851.062 1149.54 845.901 1154.45 840.326 1158.34 cv
831.479 1164.52 824.873 1162.8 819.525 1153 cv
812.104 1139.4 805.062 1125.58 798.479 1111.56 cv
793.468 1100.89 786.671 1091.75 777.319 1084.84 cv
767.744 1077.76 724.783 1078.9 715.965 1086.83 cv
700.078 1101.12 685.504 1116.96 677.672 1137.14 cv
667.172 1164.18 664.798 1192.93 663.252 1221.66 cv
662.903 1228.14 664.591 1234.25 668.754 1239.37 cv
670.581 1241.61 673.133 1243.17 676.27 1242.77 cv
680.096 1242.29 680.145 1239.03 680.47 1236.32 cv
681.356 1228.9 682.332 1221.47 682.706 1214.02 cv
683.836 1191.5 689.462 1169.75 693.656 1147.76 cv
694.213 1144.83 695.601 1141.84 699.072 1142.37 cv
703.127 1142.98 702.303 1146.59 701.632 1149.21 cv
697.499 1165.35 694.168 1181.51 692.072 1198.16 cv
685.74 1248.45 683.81 1298.9 683.341 1349.49 cv
683.271 1357.07 677.191 1382.63 701.871 1380.72 cv
720.14 1378.8 717.532 1354.84 717.923 1346.74 cv
719.418 1315.73 721.003 1284.71 727.198 1254.18 cv
729.557 1242.56 736.547 1236.37 746.732 1236.13 cv
755.046 1235.93 760.635 1240.69 763.41 1252.73 cv
766.76 1267.27 769.268 1282.05 769.582 1297.04 cv
769.906 1312.55 773.004 1363.01 777.642 1371.65 cv
782.044 1379.85 789.296 1382.08 798.173 1380.63 cv
816.54 1377.64 810.405 1351.8 809.718 1344.87 cv
807.904 1326.59 799.56 1224.78 794.439 1192.4 cv
cp
f
798.173 1380.63 mo
789.296 1382.08 782.044 1379.85 777.642 1371.65 cv
773.004 1363.01 769.906 1312.55 769.582 1297.04 cv
769.268 1282.05 766.76 1267.27 763.41 1252.73 cv
760.635 1240.69 755.046 1235.93 746.732 1236.13 cv
736.547 1236.37 729.557 1242.56 727.198 1254.18 cv
721.003 1284.71 719.418 1315.73 717.923 1346.74 cv
717.532 1354.84 720.14 1378.8 701.871 1380.72 cv
677.191 1382.63 683.271 1357.07 683.341 1349.49 cv
683.81 1298.9 685.74 1248.45 692.072 1198.16 cv
694.168 1181.51 697.499 1165.35 701.632 1149.21 cv
702.303 1146.59 703.127 1142.98 699.072 1142.37 cv
695.601 1141.84 694.213 1144.83 693.656 1147.76 cv
689.462 1169.75 683.836 1191.5 682.706 1214.02 cv
682.332 1221.47 681.356 1228.9 680.47 1236.32 cv
680.145 1239.03 680.096 1242.29 676.27 1242.77 cv
673.133 1243.17 670.581 1241.61 668.754 1239.37 cv
664.591 1234.25 662.903 1228.14 663.252 1221.66 cv
664.798 1192.93 667.172 1164.18 677.672 1137.14 cv
685.504 1116.96 700.078 1101.12 715.965 1086.83 cv
724.783 1078.9 767.744 1077.76 777.319 1084.84 cv
786.671 1091.75 793.468 1100.89 798.479 1111.56 cv
805.062 1125.58 812.104 1139.4 819.525 1153 cv
824.873 1162.8 831.479 1164.52 840.326 1158.34 cv
845.901 1154.45 851.062 1149.54 855.251 1144.19 cv
860.815 1137.08 868.131 1129.26 875.828 1125.47 cv
883.238 1121.81 888.237 1128.79 888.325 1136.67 cv
888.491 1151.77 853.92 1195.14 835.642 1195.86 cv
816.602 1196.61 806.077 1193.07 798.281 1171 cv
797.484 1164.29 795.831 1159.76 791.79 1145.61 cv
789.728 1163.58 792.188 1178.16 794.439 1192.4 cv
799.56 1224.78 807.904 1326.59 809.718 1344.87 cv
810.405 1351.8 816.54 1377.64 798.173 1380.63 cv
cp
691.656 1014.39 mo
692.739 990.761 705.165 973.41 734.13 966.844 cv
759.745 961.162 776.597 971.476 787.224 988.865 cv
801.485 1009.65 794.476 1035.12 791.154 1043.9 cv
782.556 1066.61 747.188 1078.39 726.819 1070.38 cv
701.707 1060.51 690.441 1043.27 691.656 1014.39 cv
cp
818.056 1345.1 mo
813.636 1302.84 803.241 1206.14 807.486 1199.59 cv
813.364 1201.45 818.709 1203.51 824.23 1204.83 cv
834.761 1207.36 846.041 1206.81 853.757 1199.67 cv
870.167 1184.49 885.826 1168.25 894.956 1147.17 cv
899.795 1136 898.3 1126.14 891.127 1120.3 cv
884.045 1114.53 874.663 1115.46 864.467 1123.68 cv
859.582 1127.62 855.399 1132.44 850.992 1136.95 cv
848.185 1139.83 845.726 1143.06 842.804 1145.8 cv
833.965 1154.11 830.767 1153.97 824.381 1143.49 cv
819.316 1135.17 814.977 1126.33 811.143 1117.36 cv
803.623 1099.78 794.829 1083.27 778.621 1072.73 cv
779.028 1068.59 781.95 1067.33 783.913 1065.35 cv
819.823 1029.24 810.259 973.789 761.886 958.648 cv
740.224 951.867 712.901 960.335 698.185 975.736 cv
671.486 1003.68 676.893 1043.24 702.759 1067.28 cv
712.462 1076.3 712.477 1076.31 702.661 1086.46 cv
676.272 1113.76 658.391 1144.9 657.32 1184.06 cv
657.07 1193.2 654.881 1202.27 653.695 1211.38 cv
652.805 1218.22 652.207 1225.03 652.934 1231.99 cv
653.949 1241.73 658.247 1248.83 668.275 1249.93 cv
678.027 1251.01 678.803 1256.58 678.116 1264.33 cv
677.204 1274.63 676.773 1284.97 676.225 1295.29 cv
675.009 1318.23 676.037 1341.2 674.288 1364.17 cv
672.888 1382.58 680.467 1387.54 696.387 1390.32 cv
714.879 1393.56 723.869 1382.52 725.279 1363.4 cv
727.389 1334.8 728.372 1306.11 732.121 1277.64 cv
733.17 1269.67 733.955 1261.69 736.974 1254.12 cv
738.872 1249.37 741.858 1246.61 747.332 1246.87 cv
752.499 1247.11 754.084 1250.62 755.005 1254.7 cv
764.837 1273.68 764.131 1368.26 768.807 1377.21 cv
774.473 1388.05 785.904 1392.65 802.657 1390.51 cv
809.81 1389.6 816.437 1380.79 819.069 1370.75 cv
821.38 1361.93 818.94 1353.55 818.056 1345.1 cv
cp
0 0 0 rgb
f
849.34 1226.47 mo
846.647 1227.47 844.249 1229.96 846.538 1233.12 cv
848.574 1235.93 851.914 1235.24 854.268 1233.58 cv
865.456 1225.68 878.622 1220.57 887.643 1209.58 cv
893.655 1202.26 900.606 1195.58 900.835 1184.84 cv
886.624 1202.87 871.061 1218.35 849.34 1226.47 cv
cp
f
818.788 1396.83 mo
816.623 1397.32 814.305 1398.21 814.123 1401.03 cv
813.921 1404.17 816.253 1404.81 818.585 1404.8 cv
836.75 1404.73 854.981 1406.74 873.228 1400.85 cv
857.36 1399.35 841.495 1397.81 825.619 1396.4 cv
823.364 1396.2 820.991 1396.34 818.788 1396.83 cv
cp
f
2148.37 1105.79 mo
2136.74 1080.86 2127.65 1075.7 2100.71 1076.48 cv
2091.04 1076.76 2085.96 1080.96 2082.56 1089.2 cv
2078.57 1098.86 2076.6 1109 2074.83 1119.17 cv
2064.95 1175.73 2053.08 1231.94 2045.51 1288.89 cv
2042.49 1311.68 2039.11 1334.43 2036.28 1357.24 cv
2034.93 1368.03 2040.81 1370.93 2051.01 1368.55 cv
2066.43 1367.44 2066.36 1349.82 2067.61 1343.99 cv
2073.43 1317.05 2079.69 1290.21 2085.67 1263.3 cv
2087.18 1256.51 2087.77 1250.11 2082.49 1243.9 cv
2077.14 1237.61 2078.45 1230.66 2082.03 1223.09 cv
2097.77 1189.82 2113.64 1156.43 2107.07 1117.78 cv
2106.67 1115.47 2107.02 1113.03 2109.88 1112.4 cv
2112.61 1111.8 2114.3 1113.79 2115 1115.88 cv
2118.33 1125.8 2119.69 1135.94 2118.12 1146.43 cv
2115.46 1164.17 2110.07 1181.1 2103.61 1197.74 cv
2099.65 1207.92 2095.26 1217.96 2092.04 1228.37 cv
2089.09 1237.94 2090.73 1245.57 2100.31 1246.34 cv
2108.6 1247 2116.02 1239.43 2120.58 1232.61 cv
2126.68 1223.47 2131.4 1213.74 2134.67 1203.19 cv
2139.5 1187.63 2144.89 1172.24 2150.39 1155.74 cv
2156.65 1161.53 2154.55 1166.92 2153.36 1171.51 cv
2147.74 1193.26 2141.05 1230.67 2113.89 1252.17 cv
2113.89 1252.17 2115.32 1262.08 2119.14 1279.11 cv
2125.02 1305.41 2129.46 1332.03 2134.81 1358.45 cv
2136.76 1368.06 2145.04 1372.38 2154.05 1370.21 cv
2162.59 1368.15 2163.87 1360.82 2165.87 1352.15 cv
2166.89 1347.71 2167.18 1343.05 2167.26 1338.47 cv
2168.29 1275.19 2164.83 1212.08 2159.2 1149.09 cv
2157.88 1134.27 2154.78 1119.53 2148.37 1105.79 cv
cp
1 1 1 rgb
f
2163.74 1015.64 mo
2166.33 988.439 2141.08 963.18 2113.42 962.974 cv
2075.42 962.691 2059.3 991.107 2059.18 1019.58 cv
2059.08 1042.53 2085.17 1068.34 2108.02 1068.96 cv
2135.22 1069.69 2164.06 1052.74 2163.74 1015.64 cv
cp
f
2047.12 1216.38 mo
2048.96 1208.05 2051.09 1199.79 2052.91 1191.46 cv
2055.92 1177.64 2057.94 1161.64 2066.25 1130.51 cv
2054.24 1148.74 2037.45 1186.96 2030.1 1207.16 cv
2029.17 1209.73 2028.79 1212.81 2029.2 1215.49 cv
2030.06 1221.21 2034.14 1224.53 2039.58 1225.31 cv
2046.22 1226.27 2046.15 1220.79 2047.12 1216.38 cv
cp
f
2167.26 1338.47 mo
2167.18 1343.05 2166.89 1347.71 2165.87 1352.15 cv
2163.87 1360.82 2162.59 1368.15 2154.05 1370.21 cv
2145.04 1372.38 2136.76 1368.06 2134.81 1358.45 cv
2129.46 1332.03 2125.02 1305.41 2119.14 1279.11 cv
2115.32 1262.08 2113.89 1252.17 2113.89 1252.17 cv
2141.05 1230.67 2147.74 1193.26 2153.36 1171.51 cv
2154.55 1166.92 2156.65 1161.53 2150.39 1155.74 cv
2144.89 1172.24 2139.5 1187.63 2134.67 1203.19 cv
2131.4 1213.74 2126.68 1223.47 2120.58 1232.61 cv
2116.02 1239.43 2108.6 1247 2100.31 1246.34 cv
2090.73 1245.57 2089.09 1237.94 2092.04 1228.37 cv
2095.26 1217.96 2099.65 1207.92 2103.61 1197.74 cv
2110.07 1181.1 2115.46 1164.17 2118.12 1146.43 cv
2119.69 1135.94 2118.33 1125.8 2115 1115.88 cv
2114.3 1113.79 2112.61 1111.8 2109.88 1112.4 cv
2107.02 1113.03 2106.67 1115.47 2107.07 1117.78 cv
2113.64 1156.43 2097.77 1189.82 2082.03 1223.09 cv
2078.45 1230.66 2077.14 1237.61 2082.49 1243.9 cv
2087.77 1250.11 2087.18 1256.51 2085.67 1263.3 cv
2079.69 1290.21 2073.43 1317.05 2067.61 1343.99 cv
2066.36 1349.82 2066.43 1367.44 2051.01 1368.55 cv
2040.81 1370.93 2034.93 1368.03 2036.28 1357.24 cv
2039.11 1334.43 2042.49 1311.68 2045.51 1288.89 cv
2053.08 1231.94 2064.95 1175.73 2074.83 1119.17 cv
2076.6 1109 2078.57 1098.86 2082.56 1089.2 cv
2085.96 1080.96 2091.04 1076.76 2100.71 1076.48 cv
2127.65 1075.7 2136.74 1080.86 2148.37 1105.79 cv
2154.78 1119.53 2157.88 1134.27 2159.2 1149.09 cv
2164.83 1212.08 2168.29 1275.19 2167.26 1338.47 cv
cp
2039.58 1225.31 mo
2034.14 1224.53 2030.06 1221.21 2029.2 1215.49 cv
2028.79 1212.81 2029.17 1209.73 2030.1 1207.16 cv
2037.45 1186.96 2054.24 1148.74 2066.25 1130.51 cv
2057.94 1161.64 2055.92 1177.64 2052.91 1191.46 cv
2051.09 1199.79 2048.96 1208.05 2047.12 1216.38 cv
2046.15 1220.79 2046.22 1226.27 2039.58 1225.31 cv
cp
2059.18 1019.58 mo
2059.3 991.107 2075.42 962.691 2113.42 962.974 cv
2141.08 963.18 2166.33 988.439 2163.74 1015.64 cv
2164.06 1052.74 2135.22 1069.69 2108.02 1068.96 cv
2085.17 1068.34 2059.08 1042.53 2059.18 1019.58 cv
cp
2170.59 1171.87 mo
2167.35 1136.51 2166.34 1100.15 2135.94 1072.14 cv
2169.91 1056.41 2180.21 1022.43 2171.16 996.046 cv
2162.89 971.959 2136.51 953.923 2111.31 955.038 cv
2098.73 955.594 2088.28 958.109 2077.88 964.282 cv
2041.96 985.595 2038.64 1046.22 2078.23 1066.12 cv
2084.46 1069.25 2078.83 1073.8 2075.92 1079.92 cv
2072.48 1087.16 2068.9 1094.42 2066.4 1102 cv
2055.43 1135.4 2038.66 1166.17 2023.07 1197.44 cv
2014.42 1214.79 2016.39 1226.32 2033.98 1233.73 cv
2042.88 1237.48 2043.21 1242.43 2042.27 1249.6 cv
2038.72 1276.91 2026.44 1351.22 2026.36 1361.79 cv
2026.27 1373.81 2033.8 1378.2 2045.6 1379.04 cv
2069.32 1380.74 2074.1 1354.82 2077.22 1341.91 cv
2083.02 1317.94 2088.26 1293.82 2093.83 1269.79 cv
2095.06 1264.47 2095.54 1258.6 2101.54 1254.61 cv
2107.64 1259.74 2109.06 1266.79 2110.47 1273.09 cv
2113.61 1287.07 2115.73 1301.29 2117.95 1315.46 cv
2120.43 1331.26 2121.9 1347.25 2125.02 1362.92 cv
2128.11 1378.4 2141.47 1383.91 2156.17 1378.99 cv
2174.89 1372.71 2175.5 1365.12 2176.24 1345.44 cv
2177.46 1312.78 2177.15 1280.11 2175.15 1247.47 cv
2173.61 1222.27 2172.89 1197 2170.59 1171.87 cv
cp
0 0 0 rgb
f
2200.22 1165.96 mo
2212.56 1137.89 2207.61 1110.8 2195.16 1084.22 cv
2193.82 1081.35 2191.05 1080.09 2188.07 1081.71 cv
2185.14 1083.31 2184.61 1086.05 2186.31 1088.94 cv
2194.55 1102.96 2197.88 1118.24 2200.32 1134.22 cv
2201.98 1145.12 2198.84 1155.44 2200.22 1165.96 cv
cp
f
2191.56 1367.61 mo
2188.79 1367.49 2185.34 1366.55 2185.01 1370.69 cv
2184.71 1374.48 2188.03 1375.12 2190.86 1375.25 cv
2210.07 1376.14 2229.3 1377.34 2250.95 1375.22 cv
2243.44 1370.25 2237.29 1369.63 2231.11 1369.33 cv
2217.93 1368.69 2204.74 1368.19 2191.56 1367.61 cv
cp
f
431.832 745.294 mo
443.987 735.745 453.459 724.038 462.459 711.475 cv
471.602 698.713 478.339 683.577 482.861 668.637 cv
487.255 654.121 489.593 637.936 488.328 622.759 cv
486.76 603.948 483.045 587.822 474.323 571.052 cv
472.436 567.423 470.279 564.033 467.926 560.821 cv
467.317 560.498 466.707 560.173 466.099 559.861 cv
419.894 536.17 371.263 539.271 325.465 568.829 cv
304.042 582.656 291.258 601.909 281.578 618.918 cv
275.741 629.176 274.057 639.019 276.707 647.384 cv
279.324 655.642 286.215 662.597 296.637 667.499 cv
310.49 674.015 326.236 677.763 342.173 678.337 cv
356.21 678.854 371.676 672.419 372.969 652.871 cv
373.234 648.861 374.347 644.903 375.328 641.412 cv
378.899 628.705 390.975 621.141 404.037 623.431 cv
419.103 626.069 431.084 641.933 431.31 659.545 cv
431.466 671.628 428.345 683.42 421.77 695.594 cv
410.452 716.548 393.422 732.835 376.954 748.586 cv
374.801 750.645 372.649 752.704 370.508 754.773 cv
368.565 756.65 366.551 758.508 364.603 760.305 cv
359.767 764.768 354.765 769.382 350.552 774.586 cv
349.703 775.635 348.952 776.656 348.271 777.645 cv
357.925 777.573 367.523 776.427 377.203 774.291 cv
398.085 769.685 415.369 758.227 431.832 745.294 cv
cp
.537255 .792157 .8 rgb
f
337.401 872.535 mo
347.609 881.905 360.157 887.816 374.293 887.816 cv
387.67 887.816 401.723 881.996 411.185 872.535 cv
415.668 868.052 419.577 862.135 422.335 855.735 cv
422.263 855.675 422.198 855.61 422.125 855.551 cv
421.814 855.293 li
421.645 855.152 421.477 855.011 421.299 854.877 cv
414.215 849.559 376.966 824.635 338.633 855.84 cv
336.018 859.127 334.3 863 333.527 867.354 cv
333.478 867.635 333.433 867.936 333.39 868.246 cv
334.615 869.757 335.943 871.197 337.401 872.535 cv
cp
f
345.482 789.715 mo
345.569 789.879 li
345.64 790.006 345.714 790.128 345.792 790.25 cv
345.916 790.44 li
345.995 790.558 346.077 790.675 346.165 790.791 cv
346.32 790.991 li
346.409 791.103 346.501 791.218 346.6 791.331 cv
346.821 791.573 li
346.912 791.672 347.002 791.77 347.099 791.867 cv
347.379 792.135 li
347.472 792.224 347.565 792.314 347.665 792.402 cv
347.77 792.49 li
348.038 792.723 348.325 792.952 348.626 793.178 cv
350.054 794.152 li
350.271 794.287 350.418 794.376 350.569 794.466 cv
350.964 794.692 li
351.15 794.798 351.313 794.888 351.48 794.978 cv
351.917 795.209 li
352.098 795.303 352.282 795.396 352.469 795.489 cv
352.916 795.708 li
353.119 795.806 353.329 795.903 353.54 795.999 cv
353.982 796.201 li
354.223 796.308 354.473 796.415 354.725 796.521 cv
355.118 796.689 li
355.503 796.849 355.902 797.01 356.314 797.169 cv
373.011 803.641 400.447 809.071 424.097 806.611 cv
434.526 805.527 441.664 800.001 444.736 790.63 cv
452.017 768.428 467.506 751.42 481.172 736.415 cv
503.246 712.178 516.34 688.335 521.205 663.527 cv
527.625 630.787 518.125 599.226 495.791 579.102 cv
494.758 578.288 493.672 577.454 492.585 576.629 cv
491.761 576.009 li
490.739 575.243 489.716 574.487 488.689 573.748 cv
488.483 573.598 li
487.353 572.787 486.224 571.998 485.092 571.222 cv
484.485 570.809 li
483.394 570.067 482.3 569.338 481.204 568.626 cv
481.637 567.714 li
481.637 567.713 li
481.093 568.553 li
479.895 567.776 478.694 567.02 477.49 566.279 cv
477.23 566.122 li
474.159 564.24 471.038 562.467 467.926 560.821 cv
470.279 564.033 472.436 567.423 474.323 571.052 cv
483.045 587.822 486.76 603.948 488.328 622.759 cv
489.593 637.936 487.255 654.121 482.861 668.637 cv
478.339 683.577 471.602 698.713 462.459 711.475 cv
453.459 724.038 443.987 735.745 431.832 745.294 cv
415.369 758.227 398.085 769.685 377.203 774.291 cv
367.523 776.427 357.925 777.573 348.271 777.645 cv
348.142 777.833 347.995 778.028 347.873 778.213 cv
346.318 780.558 345.355 782.595 344.93 784.442 cv
344.869 784.714 344.831 784.913 344.799 785.109 cv
344.755 785.396 344.732 785.585 344.715 785.772 cv
344.695 786.047 344.685 786.233 344.684 786.417 cv
344.683 787.432 344.862 788.324 345.232 789.19 cv
344.372 789.726 li
344.372 789.726 li
345.283 789.315 li
345.344 789.449 345.412 789.582 345.482 789.715 cv
cp
.458824 .737255 .737255 rgb
f
428.898 863.665 mo
428.548 863.018 428.198 862.431 427.825 861.856 cv
426.338 859.567 424.49 857.518 422.335 855.735 cv
419.577 862.135 415.668 868.052 411.185 872.535 cv
401.723 881.996 387.67 887.816 374.293 887.816 cv
360.157 887.816 347.609 881.905 337.401 872.535 cv
335.943 871.197 334.615 869.757 333.39 868.246 cv
333.334 868.65 333.282 869.075 333.235 869.543 cv
333.192 870.021 li
333.07 871.479 333.054 872.978 333.144 874.475 cv
333.178 874.969 li
333.29 876.461 333.507 877.974 333.824 879.465 cv
333.935 879.971 li
334.274 881.46 334.715 882.952 335.246 884.402 cv
335.436 884.909 li
335.754 885.74 336.038 886.423 336.329 887.061 cv
336.352 887.112 li
336.639 887.739 336.977 888.415 337.384 889.178 cv
337.654 889.675 li
338.09 890.463 338.47 891.108 338.85 891.704 cv
339.24 892.317 339.669 892.941 340.208 893.681 cv
340.556 894.15 li
341.103 894.877 341.575 895.469 342.04 896.012 cv
342.523 896.576 343.042 897.139 343.688 897.801 cv
344.112 898.228 li
344.773 898.884 345.335 899.411 345.879 899.884 cv
346.44 900.373 347.046 900.861 347.796 901.429 cv
347.959 901.553 348.123 901.675 348.287 901.796 cv
349.065 902.365 349.715 902.812 350.332 903.203 cv
362.07 910.627 375.392 914.663 389.926 915.198 cv
409.755 915.651 422.972 906.059 430.325 885.82 cv
430.575 885.134 430.803 884.422 431.004 883.704 cv
431.048 883.547 431.083 883.391 431.119 883.235 cv
431.27 882.612 li
431.356 882.269 431.443 881.927 431.512 881.583 cv
431.559 881.348 431.594 881.112 431.629 880.876 cv
431.738 880.195 li
431.779 879.953 431.82 879.71 431.85 879.468 cv
431.887 879.163 431.909 878.858 431.931 878.554 cv
431.981 877.92 li
431.998 877.735 432.015 877.55 432.023 877.365 cv
432.04 876.969 432.038 876.574 432.035 876.178 cv
432.034 876.017 li
432.036 875.717 li
432.037 875.572 432.039 875.428 432.034 875.284 cv
432.018 874.793 431.976 874.307 431.933 873.819 cv
431.914 873.56 li
431.906 873.45 431.898 873.339 431.886 873.229 cv
431.829 872.706 431.745 872.186 431.656 871.667 cv
431.583 871.211 li
431.478 870.657 431.348 870.11 431.208 869.566 cv
431.127 869.23 li
430.972 868.658 430.791 868.091 430.596 867.528 cv
430.521 867.301 li
430.323 866.745 430.096 866.175 429.825 865.559 cv
430.68 865.013 li
430.68 865.013 li
429.767 865.421 li
429.511 864.848 429.218 864.257 428.898 863.665 cv
cp
f
344.372 789.726 mo
345.232 789.19 li
344.862 788.324 344.683 787.432 344.684 786.417 cv
344.685 786.233 344.695 786.047 344.715 785.772 cv
344.732 785.585 344.755 785.396 344.799 785.109 cv
344.831 784.913 344.869 784.714 344.93 784.442 cv
345.355 782.595 346.318 780.558 347.873 778.213 cv
347.995 778.028 348.142 777.833 348.271 777.645 cv
348.952 776.656 349.703 775.635 350.552 774.586 cv
354.765 769.382 359.767 764.768 364.603 760.305 cv
366.551 758.508 368.565 756.65 370.508 754.773 cv
372.649 752.704 374.801 750.645 376.954 748.586 cv
393.422 732.835 410.452 716.548 421.77 695.594 cv
428.345 683.42 431.466 671.628 431.31 659.545 cv
431.084 641.933 419.103 626.069 404.037 623.431 cv
390.975 621.141 378.899 628.705 375.328 641.412 cv
374.347 644.903 373.234 648.861 372.969 652.871 cv
371.676 672.419 356.21 678.854 342.173 678.337 cv
326.236 677.763 310.49 674.015 296.637 667.499 cv
286.215 662.597 279.324 655.642 276.707 647.384 cv
274.057 639.019 275.741 629.176 281.578 618.918 cv
291.258 601.909 304.042 582.656 325.465 568.829 cv
371.263 539.271 419.894 536.17 466.099 559.861 cv
466.707 560.173 467.317 560.498 467.926 560.821 cv
471.038 562.467 474.159 564.24 477.23 566.122 cv
477.49 566.279 li
478.694 567.02 479.895 567.776 481.093 568.553 cv
481.637 567.713 li
481.637 567.714 li
481.204 568.626 li
482.3 569.338 483.394 570.067 484.485 570.809 cv
485.092 571.222 li
486.224 571.998 487.353 572.787 488.483 573.598 cv
488.689 573.748 li
489.716 574.487 490.739 575.243 491.761 576.009 cv
492.585 576.629 li
493.672 577.454 494.758 578.288 495.791 579.102 cv
518.125 599.226 527.625 630.787 521.205 663.527 cv
516.34 688.335 503.246 712.178 481.172 736.415 cv
467.506 751.42 452.017 768.428 444.736 790.63 cv
441.664 800.001 434.526 805.527 424.097 806.611 cv
400.447 809.071 373.011 803.641 356.314 797.169 cv
355.902 797.01 355.503 796.849 355.118 796.689 cv
354.725 796.521 li
354.473 796.415 354.223 796.308 353.982 796.201 cv
353.54 795.999 li
353.329 795.903 353.119 795.806 352.916 795.708 cv
352.469 795.489 li
352.282 795.396 352.098 795.303 351.917 795.209 cv
351.48 794.978 li
351.313 794.888 351.15 794.798 350.964 794.692 cv
350.569 794.466 li
350.418 794.376 350.271 794.287 350.054 794.152 cv
348.626 793.178 li
348.325 792.952 348.038 792.723 347.77 792.49 cv
347.665 792.402 li
347.565 792.314 347.472 792.224 347.379 792.135 cv
347.099 791.867 li
347.002 791.77 346.912 791.672 346.821 791.573 cv
346.6 791.331 li
346.501 791.218 346.409 791.103 346.32 790.991 cv
346.165 790.791 li
346.077 790.675 345.995 790.558 345.916 790.44 cv
345.792 790.25 li
345.714 790.128 345.64 790.006 345.569 789.879 cv
345.482 789.715 li
345.412 789.582 345.344 789.449 345.283 789.315 cv
344.372 789.726 li
344.372 789.726 li
cp
519.192 593.236 mo
508.999 573.259 478.739 548.059 440.627 538.546 cv
411.034 531.16 364.707 530.075 312.06 566.852 cv
293.05 580.13 278.643 600.11 268.014 627.934 cv
262.101 643.408 266.938 659.125 280.636 668.95 cv
298.53 681.786 320.091 688.27 346.552 688.773 cv
363.662 689.107 376.96 678.679 382.197 660.901 cv
382.991 658.206 383.421 655.394 383.838 652.675 cv
384.19 650.381 384.553 648.009 385.131 645.761 cv
386.949 638.687 390.798 634.977 397.244 634.084 cv
404.571 633.065 409.057 634.671 413.241 639.8 cv
420.624 648.853 422.936 658.784 420.31 670.162 cv
416.143 688.224 406.585 704.487 391.091 719.881 cv
385.114 725.82 378.968 731.795 373.024 737.573 cv
362.959 747.357 352.552 757.475 342.63 767.741 cv
334.624 776.026 331.296 783.605 332.739 790.268 cv
334.208 797.05 340.582 802.711 351.685 807.092 cv
351.969 807.205 352.245 807.26 352.488 807.309 cv
352.641 807.339 352.795 807.366 352.939 807.419 cv
359.537 809.906 380.415 816.817 408.214 816.817 cv
414.076 816.817 420.246 816.51 426.653 815.789 cv
440.274 814.256 448.484 808.651 453.272 797.615 cv
453.751 796.512 454.169 795.375 454.573 794.276 cv
455.04 793.006 455.523 791.694 456.089 790.467 cv
460.901 780.04 466.475 769.153 474.611 760.181 cv
491.162 741.93 509.77 719.555 522.303 691.981 cv
537.367 658.842 536.256 623.762 519.192 593.236 cv
cp
0 0 0 rgb
f
430.68 865.013 mo
429.825 865.559 li
430.096 866.175 430.323 866.745 430.521 867.301 cv
430.596 867.528 li
430.791 868.091 430.972 868.658 431.127 869.23 cv
431.208 869.566 li
431.348 870.11 431.478 870.657 431.583 871.211 cv
431.656 871.667 li
431.745 872.186 431.829 872.706 431.886 873.229 cv
431.898 873.339 431.906 873.45 431.914 873.56 cv
431.933 873.819 li
431.976 874.307 432.018 874.793 432.034 875.284 cv
432.039 875.428 432.037 875.572 432.036 875.717 cv
432.034 876.017 li
432.035 876.178 li
432.038 876.574 432.04 876.969 432.023 877.365 cv
432.015 877.55 431.998 877.735 431.981 877.92 cv
431.931 878.554 li
431.909 878.858 431.887 879.163 431.85 879.468 cv
431.82 879.71 431.779 879.953 431.738 880.195 cv
431.629 880.876 li
431.594 881.112 431.559 881.348 431.512 881.583 cv
431.443 881.927 431.356 882.269 431.27 882.612 cv
431.119 883.235 li
431.083 883.391 431.048 883.547 431.004 883.704 cv
430.803 884.422 430.575 885.134 430.325 885.82 cv
422.972 906.059 409.755 915.651 389.926 915.198 cv
375.392 914.663 362.07 910.627 350.332 903.203 cv
349.715 902.812 349.065 902.365 348.287 901.796 cv
348.123 901.675 347.959 901.553 347.796 901.429 cv
347.046 900.861 346.44 900.373 345.879 899.884 cv
345.335 899.411 344.773 898.884 344.112 898.228 cv
343.688 897.801 li
343.042 897.139 342.523 896.576 342.04 896.012 cv
341.575 895.469 341.103 894.877 340.556 894.15 cv
340.208 893.681 li
339.669 892.941 339.24 892.317 338.85 891.704 cv
338.47 891.108 338.09 890.463 337.654 889.675 cv
337.384 889.178 li
336.977 888.415 336.639 887.739 336.352 887.112 cv
336.329 887.061 li
336.038 886.423 335.754 885.74 335.436 884.909 cv
335.246 884.402 li
334.715 882.952 334.274 881.46 333.935 879.971 cv
333.824 879.465 li
333.507 877.974 333.29 876.461 333.178 874.969 cv
333.144 874.475 li
333.054 872.978 333.07 871.479 333.192 870.021 cv
333.235 869.543 li
333.282 869.075 333.334 868.65 333.39 868.246 cv
333.433 867.936 333.478 867.635 333.527 867.354 cv
334.3 863 336.018 859.127 338.633 855.84 cv
376.966 824.635 414.215 849.559 421.299 854.877 cv
421.477 855.011 421.645 855.152 421.814 855.293 cv
422.125 855.551 li
422.198 855.61 422.263 855.675 422.335 855.735 cv
424.49 857.518 426.338 859.567 427.825 861.856 cv
428.198 862.431 428.548 863.018 428.898 863.665 cv
429.218 864.257 429.511 864.848 429.767 865.421 cv
430.68 865.013 li
430.68 865.013 li
cp
387.858 831.627 mo
387.761 831.622 li
387.754 831.622 387.755 831.622 387.747 831.622 cv
325.323 831.622 322.911 866.802 322.894 867.158 cv
322.074 884.3 328.234 898.156 341.727 909.518 cv
355.875 921.432 372.749 923.73 388.897 925.066 cv
389.023 925.067 389.148 925.067 389.274 925.067 cv
412.558 925.067 428.054 915.033 438.022 893.514 cv
444.889 878.689 442.977 865.168 432.342 853.325 cv
421.008 840.704 406.042 833.403 387.858 831.627 cv
cp
f
473.911 837.536 mo
471.643 836.302 468.216 834.437 465.945 838.083 cv
464.206 840.879 465.071 843.977 468.15 845.975 cv
468.323 846.087 468.5 846.197 468.677 846.308 cv
469.205 846.636 469.704 846.946 470.094 847.319 cv
481.308 858.005 484.094 871.301 478.151 885.769 cv
477.768 886.701 477.198 887.598 476.594 888.546 cv
475.167 890.789 473.55 893.331 474.352 896.833 cv
474.73 898.486 li
475.993 897.355 li
485.924 888.46 489.61 881.842 490.601 871.127 cv
491.792 858.26 484.305 843.191 473.911 837.536 cv
cp
f
772.723 830.584 mo
777.731 825.575 782.027 818.782 784.79 811.519 cv
766.295 799.881 738.555 804.734 725.367 822.295 cv
720.889 828.256 719.427 836.147 721.13 843.633 cv
725.8 845.071 730.708 845.865 735.831 845.865 cv
749.208 845.865 763.262 840.045 772.723 830.584 cv
cp
.537255 .792157 .8 rgb
f
747.06 706.148 mo
755.047 696.792 762.759 686.862 769.087 676.271 cv
779.175 659.384 787.436 639.975 790.45 620.42 cv
793.572 600.161 795.666 578.894 788.185 559.169 cv
787.649 557.755 787.116 556.413 786.582 555.099 cv
786.247 554.786 785.916 554.471 785.575 554.159 cv
785.482 554.074 785.389 553.994 785.294 553.914 cv
785.024 553.678 li
771.324 541.383 752.99 534.185 733.398 533.409 cv
700.826 532.123 671.329 542.602 645.712 564.56 cv
626.726 580.834 616.849 602.916 615.518 632.068 cv
614.994 643.549 618.031 646.938 630.293 648.548 cv
645.052 650.489 659.814 648.986 674.167 644.086 cv
685.333 640.274 690.686 633.731 691.525 622.869 cv
692.338 612.341 697.961 605.9 708.714 603.178 cv
711.259 602.534 713.735 602.21 716.148 602.21 cv
724.566 602.21 732.219 606.144 739.379 614.108 cv
748.417 624.162 745.347 635.391 741.662 644.051 cv
737.331 654.229 730.663 663.199 724.215 671.873 cv
723.313 673.088 722.411 674.302 721.515 675.519 cv
707.611 694.4 697.58 711.049 693.81 730.926 cv
692.507 737.797 692.29 743.04 693.118 747.401 cv
705.943 740.999 717.796 732.704 729.099 723.638 cv
735.626 718.401 741.628 712.512 747.06 706.148 cv
cp
f
725.33 853.199 mo
725.387 853.283 li
725.652 853.657 725.889 853.968 726.131 854.276 cv
726.21 854.379 li
726.502 854.748 726.747 855.031 726.995 855.313 cv
727.172 855.521 li
727.413 855.788 727.661 856.044 727.911 856.298 cv
728.14 856.537 li
728.383 856.778 728.636 857.008 728.889 857.238 cv
729.164 857.494 li
729.391 857.693 729.625 857.883 729.86 858.072 cv
730.249 858.392 li
730.484 858.575 730.727 858.748 730.971 858.921 cv
731.389 859.225 li
731.643 859.399 731.905 859.561 732.166 859.725 cv
732.59 859.995 li
732.998 860.238 733.415 860.471 733.843 860.691 cv
749.654 868.851 765.596 869.285 781.224 861.981 cv
791.692 857.089 798.25 848.323 798.771 838.53 cv
799.054 824.723 793.982 818.652 788.46 814.147 cv
787.885 813.678 787.273 813.212 786.592 812.724 cv
786.002 812.304 785.401 811.903 784.79 811.519 cv
782.027 818.782 777.731 825.575 772.723 830.584 cv
763.262 840.045 749.208 845.865 735.831 845.865 cv
730.708 845.865 725.8 845.071 721.13 843.633 cv
721.601 845.7 722.299 847.738 723.258 849.694 cv
723.467 850.122 723.674 850.514 723.889 850.902 cv
724.134 851.342 724.353 851.709 724.581 852.072 cv
723.797 852.708 li
723.797 852.708 li
724.643 852.174 li
724.862 852.521 725.093 852.862 725.33 853.199 cv
cp
.458824 .737255 .737255 rgb
f
786.582 555.099 mo
787.116 556.413 787.649 557.755 788.185 559.169 cv
795.666 578.894 793.572 600.161 790.45 620.42 cv
787.436 639.975 779.175 659.384 769.087 676.271 cv
762.759 686.862 755.047 696.792 747.06 706.148 cv
741.628 712.512 735.626 718.401 729.099 723.638 cv
717.796 732.704 705.943 740.999 693.118 747.401 cv
693.135 747.494 693.146 747.592 693.165 747.684 cv
693.5 749.349 694.01 750.898 694.679 752.29 cv
694.757 752.457 li
694.805 752.559 694.853 752.661 694.905 752.761 cv
695.02 752.982 695.146 753.198 695.271 753.415 cv
695.405 753.644 695.534 753.86 695.671 754.072 cv
695.791 754.256 695.913 754.439 696.041 754.619 cv
696.221 754.873 696.412 755.119 696.608 755.362 cv
696.728 755.513 li
696.798 755.602 696.868 755.69 696.943 755.776 cv
697.313 756.203 697.654 756.563 697.987 756.877 cv
707.234 765.626 718.553 770.028 729.868 769.276 cv
738.023 768.731 746.819 767.307 757.548 764.793 cv
767.568 762.445 779.01 754.353 778.278 739.274 cv
777.868 730.813 779.44 722.055 783.083 712.498 cv
786.032 704.768 789.149 696.958 792.165 689.405 cv
795.55 680.923 799.052 672.153 802.323 663.467 cv
802.761 662.305 803.203 661.144 803.644 659.982 cv
808.907 646.146 814.348 631.84 813.828 613.754 cv
815.013 593.118 805.592 572.891 786.582 555.099 cv
cp
f
803.644 659.982 mo
803.203 661.144 802.761 662.305 802.323 663.467 cv
799.052 672.153 795.55 680.923 792.165 689.405 cv
789.149 696.958 786.032 704.768 783.083 712.498 cv
779.44 722.055 777.868 730.813 778.278 739.274 cv
779.01 754.353 767.568 762.445 757.548 764.793 cv
746.819 767.307 738.023 768.731 729.868 769.276 cv
718.553 770.028 707.234 765.626 697.987 756.877 cv
697.654 756.563 697.313 756.203 696.943 755.776 cv
696.868 755.69 696.798 755.602 696.728 755.513 cv
696.608 755.362 li
696.412 755.119 696.221 754.873 696.041 754.619 cv
695.913 754.439 695.791 754.256 695.671 754.072 cv
695.534 753.86 695.405 753.644 695.271 753.415 cv
695.146 753.198 695.02 752.982 694.905 752.761 cv
694.853 752.661 694.805 752.559 694.757 752.457 cv
694.679 752.29 li
694.01 750.898 693.5 749.349 693.165 747.684 cv
693.146 747.592 693.135 747.494 693.118 747.401 cv
692.29 743.04 692.507 737.797 693.81 730.926 cv
697.58 711.049 707.611 694.4 721.515 675.519 cv
722.411 674.302 723.313 673.088 724.215 671.873 cv
730.663 663.199 737.331 654.229 741.662 644.051 cv
745.347 635.391 748.417 624.162 739.379 614.108 cv
732.219 606.144 724.566 602.21 716.148 602.21 cv
713.735 602.21 711.259 602.534 708.714 603.178 cv
697.961 605.9 692.338 612.341 691.525 622.869 cv
690.686 633.731 685.333 640.274 674.167 644.086 cv
659.814 648.986 645.052 650.489 630.293 648.548 cv
618.031 646.938 614.994 643.549 615.518 632.068 cv
616.849 602.916 626.726 580.834 645.712 564.56 cv
671.329 542.602 700.826 532.123 733.398 533.409 cv
752.99 534.185 771.324 541.383 785.024 553.678 cv
785.294 553.914 li
785.389 553.994 785.482 554.074 785.575 554.159 cv
785.916 554.471 786.247 554.786 786.582 555.099 cv
805.592 572.891 815.013 593.118 813.828 613.754 cv
814.348 631.84 808.907 646.146 803.644 659.982 cv
cp
815.156 574.885 mo
800.452 544.02 769.044 524.174 735.079 524.174 cv
734.851 524.174 734.623 524.175 734.396 524.177 cv
709.749 522.444 692.1 527.459 671.602 536.112 cv
638.706 550 618.604 571.968 610.148 603.271 cv
607.376 613.535 606.043 623.629 604.705 634.815 cv
603.614 643.943 606.641 649.598 615.153 654.335 cv
620.265 657.18 625.174 658.696 630.161 658.972 cv
643.16 659.691 654.954 659.058 666.223 657.038 cv
702.137 650.597 702.86 628.756 702.226 622.216 cv
702.222 622.171 702.218 622.132 702.214 622.097 cv
703.75 618.105 707.097 614.987 711.427 613.523 cv
716.12 611.935 721.33 612.517 725.363 615.079 cv
734.894 621.133 737.408 631.384 731.922 641.831 cv
728.105 649.101 722.855 658.459 716.081 666.367 cv
705.994 678.14 697.335 691.973 688.831 709.898 cv
681.923 724.461 680.188 738.98 683.672 753.051 cv
684.988 758.366 692.739 767.555 697.766 769.773 cv
711.239 777.44 722.993 779.742 732.606 779.742 cv
742.388 779.742 749.952 777.357 754.848 775.813 cv
756.119 775.413 757.216 775.067 758.145 774.823 cv
776.736 769.941 788.194 755.913 788.795 737.297 cv
789.044 729.582 790.514 722.341 793.287 715.16 cv
803.648 688.326 811.918 666.181 819.313 645.466 cv
827.688 622.001 826.29 598.254 815.156 574.885 cv
cp
0 0 0 rgb
f
723.797 852.708 mo
724.581 852.072 li
724.353 851.709 724.134 851.342 723.889 850.902 cv
723.674 850.514 723.467 850.122 723.258 849.694 cv
722.299 847.738 721.601 845.7 721.13 843.633 cv
719.427 836.147 720.889 828.256 725.367 822.295 cv
738.555 804.734 766.295 799.881 784.79 811.519 cv
785.401 811.903 786.002 812.304 786.592 812.724 cv
787.273 813.212 787.885 813.678 788.46 814.147 cv
793.982 818.652 799.054 824.723 798.771 838.53 cv
798.25 848.323 791.692 857.089 781.224 861.981 cv
765.596 869.285 749.654 868.851 733.843 860.691 cv
733.415 860.471 732.998 860.238 732.59 859.995 cv
732.166 859.725 li
731.905 859.561 731.643 859.399 731.389 859.225 cv
730.971 858.921 li
730.727 858.748 730.484 858.575 730.249 858.392 cv
729.86 858.072 li
729.625 857.883 729.391 857.693 729.164 857.494 cv
728.889 857.238 li
728.636 857.008 728.383 856.778 728.14 856.537 cv
727.911 856.298 li
727.661 856.044 727.413 855.788 727.172 855.521 cv
726.995 855.313 li
726.747 855.031 726.502 854.748 726.21 854.379 cv
726.131 854.276 li
725.889 853.968 725.652 853.657 725.387 853.283 cv
725.33 853.199 li
725.093 852.862 724.862 852.521 724.643 852.174 cv
723.797 852.708 li
723.797 852.708 li
cp
789.62 804.873 mo
775.115 795.241 760.069 793.155 744.9 798.671 cv
730.628 803.863 720.3 811.68 713.328 822.569 cv
706.228 833.655 710.14 856.579 720.421 864.143 cv
731.42 872.233 743.155 876.596 755.293 877.108 cv
755.925 877.14 756.554 877.155 757.18 877.155 cv
764.513 877.155 771.45 875.084 778.175 873.076 cv
779.566 872.662 li
795.775 867.847 805.664 856.562 808.162 840.028 cv
810.272 826.06 804.207 814.56 789.62 804.873 cv
cp
f
586.918 587.211 mo
584.432 586.008 582.216 588.063 581.27 588.938 cv
565.292 603.734 562.903 628.07 575.324 649.496 cv
577.305 652.914 li
577.188 648.965 li
577.061 644.647 576.552 640.989 576.059 637.451 cv
575.45 633.076 574.924 629.298 575.27 625.269 cv
576.126 615.281 580.539 607.272 585.21 598.793 cv
586.103 597.173 586.998 595.55 587.867 593.91 cv
587.928 593.795 li
588.657 592.422 589.483 590.866 588.98 589.331 cv
588.691 588.446 587.997 587.733 586.918 587.211 cv
cp
f
1110 818.817 mo
1126.82 809.989 1142.78 797.969 1155.87 784.218 cv
1172.46 766.799 1183.81 747.707 1192.52 725.5 cv
1197.18 713.607 1199.47 699.727 1198.13 687.011 cv
1198.01 685.79 1197.88 684.574 1197.75 683.357 cv
1193.64 677.404 1188.66 671.832 1182.92 666.793 cv
1153.01 640.566 1115.58 632.27 1071.69 642.134 cv
1040.48 649.149 1016.03 668.98 994.759 704.543 cv
991.531 709.94 991.458 715.319 994.541 720.532 cv
1001.28 731.931 1017.24 744.866 1041.81 746.986 cv
1065.4 750.582 1068.89 748.38 1075.89 725.564 cv
1077.82 719.265 1081.57 710.704 1091.79 709.101 cv
1094.01 708.752 1096.21 708.579 1098.37 708.579 cv
1104.54 708.579 1110.46 709.997 1116.03 712.819 cv
1123.39 716.548 1129.08 724.561 1131.65 734.805 cv
1134.56 746.386 1132.89 758.538 1127.31 766.519 cv
1121.97 774.158 1115.13 780.434 1106.38 785.704 cv
1101.16 788.853 1095.67 791.751 1090.37 794.553 cv
1080.05 800.007 1069.38 805.646 1060.27 813.344 cv
1059.31 814.161 1058.34 814.972 1057.36 815.784 cv
1049.69 822.187 1041.76 828.808 1037.06 838.179 cv
1036.53 839.235 1036.06 840.236 1035.64 841.188 cv
1042.45 840.49 1049.23 839.442 1055.91 838.287 cv
1074.73 835.034 1093.17 827.646 1110 818.817 cv
cp
.537255 .792157 .8 rgb
f
1017.5 942.633 mo
1027.71 952.004 1040.26 957.914 1054.4 957.914 cv
1067.77 957.914 1081.83 952.094 1091.29 942.633 cv
1095.41 938.51 1099.05 933.173 1101.75 927.365 cv
1088.69 908.385 1065.53 901.613 1037.81 908.763 cv
1025.87 911.206 1015.23 922.603 1012.47 935.875 cv
1012.44 936.027 1012.41 936.182 1012.38 936.335 cv
1012.34 936.561 li
1012.32 936.636 1012.31 936.71 1012.3 936.784 cv
1013.84 938.873 1015.55 940.843 1017.5 942.633 cv
cp
f
1126.95 852.651 mo
1130.92 839.122 1140.49 829.447 1148.93 820.911 cv
1152.74 817.053 1156.68 813.186 1160.48 809.448 cv
1171.07 799.051 1182.01 788.301 1191.5 776.594 cv
1192.25 775.666 1193.02 774.677 1193.85 773.568 cv
1194 773.365 1194.15 773.16 1194.3 772.954 cv
1194.57 772.576 li
1195.07 771.882 1195.57 771.187 1196.06 770.486 cv
1196.28 770.162 1196.5 769.836 1196.72 769.51 cv
1196.85 769.305 li
1197.29 768.652 1197.72 767.997 1198.13 767.338 cv
1198.39 766.93 1198.65 766.521 1198.9 766.11 cv
1199.3 765.441 1199.7 764.769 1200.09 764.097 cv
1200.25 763.805 li
1200.43 763.507 1200.6 763.21 1200.76 762.911 cv
1201.19 762.15 1201.59 761.385 1201.99 760.618 cv
1202.2 760.219 li
1202.29 760.044 1202.38 759.87 1202.47 759.695 cv
1203.01 758.628 1203.52 757.552 1204 756.497 cv
1204.08 756.323 1204.15 756.148 1204.22 755.973 cv
1204.4 755.567 li
1204.74 754.793 1205.07 754.017 1205.38 753.238 cv
1205.51 752.921 1205.63 752.604 1205.75 752.287 cv
1205.89 751.923 li
1206.14 751.265 1206.39 750.606 1206.62 749.945 cv
1206.79 749.471 1206.95 748.996 1207.11 748.519 cv
1207.32 747.887 1207.52 747.252 1207.71 746.617 cv
1207.86 746.131 1208.01 745.646 1208.14 745.159 cv
1208.33 744.514 1208.49 743.868 1208.66 743.222 cv
1208.77 742.8 li
1208.85 742.469 1208.94 742.138 1209.02 741.807 cv
1209.2 741.056 1209.35 740.303 1209.5 739.551 cv
1209.63 738.959 1209.74 738.369 1209.85 737.776 cv
1210 736.941 1210.14 736.105 1210.26 735.269 cv
1210.31 734.904 1210.36 734.538 1210.4 734.172 cv
1210.47 733.599 li
1210.54 733.042 1210.61 732.486 1210.66 731.93 cv
1210.71 731.37 1210.76 730.81 1210.8 730.25 cv
1210.84 729.697 1210.88 729.144 1210.91 728.59 cv
1210.94 728.013 1210.96 727.435 1210.98 726.858 cv
1210.99 726.324 1210.99 725.79 1211 725.257 cv
1211 725.256 li
1211 724.667 1211 724.077 1210.99 723.487 cv
1210.98 723.081 1210.97 722.675 1210.95 722.269 cv
1210.92 721.499 li
1210.9 721.044 1210.88 720.588 1210.85 720.133 cv
1210.84 719.899 1210.82 719.666 1210.79 719.434 cv
1210.75 718.963 li
1210.65 717.698 1210.5 716.404 1210.32 715.117 cv
1210.26 714.686 li
1210.22 714.39 1210.18 714.094 1210.14 713.798 cv
1210.04 713.208 1209.93 712.62 1209.82 712.032 cv
1209.76 711.695 li
1209.69 711.303 1209.62 710.911 1209.53 710.52 cv
1209.4 709.874 1209.25 709.231 1209.1 708.587 cv
1209 708.151 1208.89 707.712 1208.78 707.275 cv
1208.61 706.622 1208.44 705.972 1208.25 705.322 cv
1208.16 705.004 1208.06 704.688 1207.97 704.371 cv
1207.88 704.094 li
1207.67 703.392 1207.46 702.732 1207.24 702.077 cv
1207.18 701.897 1207.11 701.717 1207.05 701.537 cv
1206.91 701.158 li
1206.05 698.738 1205.05 696.315 1203.92 693.955 cv
1203.75 693.606 li
1203.64 693.378 1203.53 693.149 1203.42 692.922 cv
1203.09 692.26 1202.74 691.603 1202.39 690.947 cv
1202.19 690.573 1201.99 690.199 1201.79 689.827 cv
1201.43 689.18 1201.06 688.536 1200.67 687.894 cv
1200.46 687.527 1200.23 687.161 1200 686.794 cv
1199.6 686.146 1199.2 685.5 1198.78 684.859 cv
1198.64 684.643 1198.49 684.429 1198.34 684.214 cv
1198.12 683.881 li
1198 683.705 1197.87 683.532 1197.75 683.357 cv
1197.88 684.574 1198.01 685.79 1198.13 687.011 cv
1199.47 699.727 1197.18 713.607 1192.52 725.5 cv
1183.81 747.707 1172.46 766.799 1155.87 784.218 cv
1142.78 797.969 1126.82 809.989 1110 818.817 cv
1093.17 827.646 1074.73 835.034 1055.91 838.287 cv
1049.23 839.442 1042.45 840.49 1035.64 841.188 cv
1035.57 841.36 1035.48 841.543 1035.41 841.71 cv
1033.92 845.765 li
1033.67 846.687 li
1033.63 846.845 1033.59 847.005 1033.55 847.162 cv
1033.46 847.576 li
1033.43 847.727 1033.4 847.882 1033.37 848.034 cv
1033.19 849.378 li
1033.18 849.48 1033.16 849.581 1033.16 849.681 cv
1033.14 850.071 li
1033.13 850.303 1033.12 850.535 1033.13 850.762 cv
1033.13 850.873 li
1033.13 850.977 1033.13 851.079 1033.13 851.181 cv
1033.17 851.649 li
1033.18 851.737 1033.19 851.824 1033.2 851.91 cv
1033.21 851.997 1033.22 852.082 1033.23 852.168 cv
1033.26 852.337 li
1033.27 852.43 1033.29 852.523 1033.3 852.615 cv
1033.33 852.726 1033.35 852.837 1033.38 852.949 cv
1033.4 853.073 1033.43 853.188 1033.46 853.301 cv
1033.49 853.414 1033.52 853.525 1033.56 853.636 cv
1033.59 853.745 1033.63 853.858 1033.67 853.972 cv
1033.7 854.078 1033.74 854.186 1033.79 854.294 cv
1033.83 854.402 1033.88 854.513 1033.92 854.623 cv
1033.97 854.728 1034.02 854.834 1034.07 854.94 cv
1034.12 855.049 1034.17 855.158 1034.23 855.268 cv
1034.29 855.372 1034.34 855.474 1034.4 855.576 cv
1034.46 855.679 1034.52 855.785 1034.59 855.89 cv
1034.78 856.2 li
1034.85 856.307 1034.93 856.415 1035 856.521 cv
1035.22 856.821 li
1035.33 856.967 1035.45 857.113 1035.57 857.259 cv
1035.8 857.525 li
1035.95 857.693 1036.1 857.863 1036.26 858.032 cv
1036.5 858.273 li
1036.65 858.421 1036.76 858.532 1036.88 858.642 cv
1037.17 858.902 li
1037.3 859.019 1037.43 859.135 1037.56 859.251 cv
1037.81 859.459 li
1038.02 859.631 1038.16 859.744 1038.3 859.857 cv
1038.66 860.127 li
1038.81 860.24 1038.96 860.352 1039.11 860.465 cv
1039.49 860.734 li
1039.66 860.849 1039.82 860.962 1039.99 861.075 cv
1040.39 861.34 li
1040.57 861.457 1040.75 861.575 1040.94 861.691 cv
1041.35 861.948 li
1041.55 862.071 1041.76 862.194 1041.97 862.316 cv
1042.38 862.558 li
1042.62 862.694 1042.86 862.831 1043.11 862.967 cv
1043.47 863.172 li
1043.85 863.375 1044.23 863.581 1044.63 863.788 cv
1057.56 870.503 1084.47 884.48 1119.49 878.472 cv
1122.25 877.872 1123.84 877.044 1124.61 875.797 cv
1125.31 874.657 1125.38 873.033 1124.82 870.832 cv
1123.31 864.953 1124.99 859.269 1126.62 853.772 cv
1126.95 852.651 li
cp
.458824 .737255 .737255 rgb
f
1011.8 943.561 mo
1011.82 944.068 1011.86 944.571 1011.91 945.073 cv
1011.96 945.54 li
1012.01 946.023 1012.06 946.407 1012.12 946.791 cv
1012.19 947.27 li
1012.28 947.785 1012.39 948.297 1012.5 948.806 cv
1012.61 949.231 li
1012.72 949.644 1012.83 950.051 1012.95 950.456 cv
1013.08 950.896 li
1013.25 951.412 1013.43 951.925 1013.63 952.434 cv
1013.73 952.685 li
1013.91 953.128 1014.1 953.564 1014.3 953.997 cv
1014.5 954.409 li
1014.75 954.913 1015.01 955.418 1015.29 955.914 cv
1023.48 970.145 1036.85 980.144 1056.17 986.477 cv
1068.59 987.904 1076.8 987.498 1084.51 985.075 cv
1094.67 981.883 1104.47 971.721 1108.36 960.362 cv
1110.77 953.316 1112.04 942.622 1104.44 931.684 cv
1103.95 930.806 1103.46 929.989 1102.95 929.179 cv
1102.56 928.562 1102.16 927.958 1101.75 927.365 cv
1099.05 933.173 1095.41 938.51 1091.29 942.633 cv
1081.83 952.094 1067.77 957.914 1054.4 957.914 cv
1040.26 957.914 1027.71 952.004 1017.5 942.633 cv
1015.55 940.843 1013.84 938.873 1012.3 936.784 cv
1012.26 937.016 1012.21 937.249 1012.18 937.481 cv
1012.14 937.727 1012.1 937.972 1012.07 938.216 cv
1012.02 938.586 1011.98 938.952 1011.94 939.32 cv
1011.91 939.605 1011.89 939.892 1011.87 940.178 cv
1011.84 940.545 1011.82 940.912 1011.81 941.279 cv
1011.8 941.503 1011.79 941.727 1011.79 941.951 cv
1011.78 942.318 1011.79 942.686 1011.79 943.055 cv
1011.8 943.561 li
cp
f
1124.82 870.832 mo
1125.38 873.033 1125.31 874.657 1124.61 875.797 cv
1123.84 877.044 1122.25 877.872 1119.49 878.472 cv
1084.47 884.48 1057.56 870.503 1044.63 863.788 cv
1044.23 863.581 1043.85 863.375 1043.47 863.172 cv
1043.11 862.967 li
1042.86 862.831 1042.62 862.694 1042.38 862.558 cv
1041.97 862.316 li
1041.76 862.194 1041.55 862.071 1041.35 861.948 cv
1040.94 861.691 li
1040.75 861.575 1040.57 861.457 1040.39 861.34 cv
1039.99 861.075 li
1039.82 860.962 1039.66 860.849 1039.49 860.734 cv
1039.11 860.465 li
1038.96 860.352 1038.81 860.24 1038.66 860.127 cv
1038.3 859.857 li
1038.16 859.744 1038.02 859.631 1037.81 859.459 cv
1037.56 859.251 li
1037.43 859.135 1037.3 859.019 1037.17 858.902 cv
1036.88 858.642 li
1036.76 858.532 1036.65 858.421 1036.5 858.273 cv
1036.26 858.032 li
1036.1 857.863 1035.95 857.693 1035.8 857.525 cv
1035.57 857.259 li
1035.45 857.113 1035.33 856.967 1035.22 856.821 cv
1035 856.521 li
1034.93 856.415 1034.85 856.307 1034.78 856.2 cv
1034.59 855.89 li
1034.52 855.785 1034.46 855.679 1034.4 855.576 cv
1034.34 855.474 1034.29 855.372 1034.23 855.268 cv
1034.17 855.158 1034.12 855.049 1034.07 854.94 cv
1034.02 854.834 1033.97 854.728 1033.92 854.623 cv
1033.88 854.513 1033.83 854.402 1033.79 854.294 cv
1033.74 854.186 1033.7 854.078 1033.67 853.972 cv
1033.63 853.858 1033.59 853.745 1033.56 853.636 cv
1033.52 853.525 1033.49 853.414 1033.46 853.301 cv
1033.43 853.188 1033.4 853.073 1033.38 852.949 cv
1033.35 852.837 1033.33 852.726 1033.3 852.615 cv
1033.29 852.523 1033.27 852.43 1033.26 852.337 cv
1033.23 852.168 li
1033.22 852.082 1033.21 851.997 1033.2 851.91 cv
1033.19 851.824 1033.18 851.737 1033.17 851.649 cv
1033.13 851.181 li
1033.13 851.079 1033.13 850.977 1033.13 850.873 cv
1033.13 850.762 li
1033.12 850.535 1033.13 850.303 1033.14 850.071 cv
1033.16 849.681 li
1033.16 849.581 1033.18 849.48 1033.19 849.378 cv
1033.37 848.034 li
1033.4 847.882 1033.43 847.727 1033.46 847.576 cv
1033.55 847.162 li
1033.59 847.005 1033.63 846.845 1033.67 846.687 cv
1033.92 845.765 li
1035.41 841.71 li
1035.48 841.543 1035.57 841.36 1035.64 841.188 cv
1036.06 840.236 1036.53 839.235 1037.06 838.179 cv
1041.76 828.808 1049.69 822.187 1057.36 815.784 cv
1058.34 814.972 1059.31 814.161 1060.27 813.344 cv
1069.38 805.646 1080.05 800.007 1090.37 794.553 cv
1095.67 791.751 1101.16 788.853 1106.38 785.704 cv
1115.13 780.434 1121.97 774.158 1127.31 766.519 cv
1132.89 758.538 1134.56 746.386 1131.65 734.805 cv
1129.08 724.561 1123.39 716.548 1116.03 712.819 cv
1110.46 709.997 1104.54 708.579 1098.37 708.579 cv
1096.21 708.579 1094.01 708.752 1091.79 709.101 cv
1081.57 710.704 1077.82 719.265 1075.89 725.564 cv
1068.89 748.38 1065.4 750.582 1041.81 746.986 cv
1017.24 744.866 1001.28 731.931 994.541 720.532 cv
991.458 715.319 991.531 709.94 994.759 704.543 cv
1016.03 668.98 1040.48 649.149 1071.69 642.134 cv
1115.58 632.27 1153.01 640.566 1182.92 666.793 cv
1188.66 671.832 1193.64 677.404 1197.75 683.357 cv
1197.87 683.532 1198 683.705 1198.12 683.881 cv
1198.34 684.214 li
1198.49 684.429 1198.64 684.643 1198.78 684.859 cv
1199.2 685.5 1199.6 686.146 1200 686.794 cv
1200.23 687.161 1200.46 687.527 1200.67 687.894 cv
1201.06 688.536 1201.43 689.18 1201.79 689.827 cv
1201.99 690.199 1202.19 690.573 1202.39 690.947 cv
1202.74 691.603 1203.09 692.26 1203.42 692.922 cv
1203.53 693.149 1203.64 693.378 1203.75 693.606 cv
1203.92 693.955 li
1205.05 696.315 1206.05 698.738 1206.91 701.158 cv
1207.05 701.537 li
1207.11 701.717 1207.18 701.897 1207.24 702.077 cv
1207.46 702.732 1207.67 703.392 1207.88 704.094 cv
1207.97 704.371 li
1208.06 704.688 1208.16 705.004 1208.25 705.322 cv
1208.44 705.972 1208.61 706.622 1208.78 707.275 cv
1208.89 707.712 1209 708.151 1209.1 708.587 cv
1209.25 709.231 1209.4 709.874 1209.53 710.52 cv
1209.62 710.911 1209.69 711.303 1209.76 711.695 cv
1209.82 712.032 li
1209.93 712.62 1210.04 713.208 1210.14 713.798 cv
1210.18 714.094 1210.22 714.39 1210.26 714.686 cv
1210.32 715.117 li
1210.5 716.404 1210.65 717.698 1210.75 718.963 cv
1210.79 719.434 li
1210.82 719.666 1210.84 719.899 1210.85 720.133 cv
1210.88 720.588 1210.9 721.044 1210.92 721.499 cv
1210.95 722.269 li
1210.97 722.675 1210.98 723.081 1210.99 723.487 cv
1211 724.077 1211 724.667 1211 725.256 cv
1211 725.257 li
1210.99 725.79 1210.99 726.324 1210.98 726.858 cv
1210.96 727.435 1210.94 728.013 1210.91 728.59 cv
1210.88 729.144 1210.84 729.697 1210.8 730.25 cv
1210.76 730.81 1210.71 731.37 1210.66 731.93 cv
1210.61 732.486 1210.54 733.042 1210.47 733.599 cv
1210.4 734.172 li
1210.36 734.538 1210.31 734.904 1210.26 735.269 cv
1210.14 736.105 1210 736.941 1209.85 737.776 cv
1209.74 738.369 1209.63 738.959 1209.5 739.551 cv
1209.35 740.303 1209.2 741.056 1209.02 741.807 cv
1208.94 742.138 1208.85 742.469 1208.77 742.8 cv
1208.66 743.222 li
1208.49 743.868 1208.33 744.514 1208.14 745.159 cv
1208.01 745.646 1207.86 746.131 1207.71 746.617 cv
1207.52 747.252 1207.32 747.887 1207.11 748.519 cv
1206.95 748.996 1206.79 749.471 1206.62 749.945 cv
1206.39 750.606 1206.14 751.265 1205.89 751.923 cv
1205.75 752.287 li
1205.63 752.604 1205.51 752.921 1205.38 753.238 cv
1205.07 754.017 1204.74 754.793 1204.4 755.567 cv
1204.22 755.973 li
1204.15 756.148 1204.08 756.323 1204 756.497 cv
1203.52 757.552 1203.01 758.628 1202.47 759.695 cv
1202.38 759.87 1202.29 760.044 1202.2 760.219 cv
1201.99 760.618 li
1201.59 761.385 1201.19 762.15 1200.76 762.911 cv
1200.6 763.21 1200.43 763.507 1200.25 763.805 cv
1200.09 764.097 li
1199.7 764.769 1199.3 765.441 1198.9 766.11 cv
1198.65 766.521 1198.39 766.93 1198.13 767.338 cv
1197.72 767.997 1197.29 768.652 1196.85 769.305 cv
1196.72 769.51 li
1196.5 769.836 1196.28 770.162 1196.06 770.486 cv
1195.57 771.187 1195.07 771.882 1194.57 772.576 cv
1194.3 772.954 li
1194.15 773.16 1194 773.365 1193.85 773.568 cv
1193.02 774.677 1192.25 775.666 1191.5 776.594 cv
1182.01 788.301 1171.07 799.051 1160.48 809.448 cv
1156.68 813.186 1152.74 817.053 1148.93 820.911 cv
1140.49 829.447 1130.92 839.122 1126.95 852.651 cv
1126.62 853.772 li
1124.99 859.269 1123.31 864.953 1124.82 870.832 cv
cp
1197.9 667.873 mo
1169.06 638.452 1134.89 625.4 1096.33 629.078 cv
1096.33 629.078 li
1087.06 629.962 1074.93 631.428 1063.3 634.939 cv
1046.42 640.033 1033.06 647.108 1022.44 656.57 cv
1012.7 665.24 1003.41 675.581 992.3 690.102 cv
977.208 709.827 975.757 716.117 994.709 737.938 cv
999.403 743.342 1013.67 756.075 1044.59 757.571 cv
1067.45 760.379 1078.89 752.834 1085.4 730.655 cv
1086.82 725.835 1089.72 722.137 1093.57 720.242 cv
1097.51 718.301 1102.16 718.271 1107 720.152 cv
1110.89 721.663 1114.16 724.124 1116.72 727.467 cv
1125.8 739.325 1124.73 755.488 1114.16 765.9 cv
1105.02 774.901 1095.24 781.72 1085.07 786.167 cv
1059.9 797.174 1038.96 814.198 1022.85 836.768 cv
1021.6 838.51 1018.48 845.246 1020.38 853.084 cv
1022.32 861.087 1028.69 867.912 1039.31 873.37 cv
1064.67 886.396 1090.51 889.815 1107.36 889.815 cv
1115.09 889.815 1120.94 889.096 1123.98 888.254 cv
1133.78 885.54 1137.77 880.189 1136.53 871.415 cv
1134.25 855.183 1143.54 843.725 1152.53 832.644 cv
1153.02 832.041 li
1160.07 823.345 1168.82 815.715 1177.27 808.336 cv
1179.94 806.005 1182.71 803.594 1185.38 801.185 cv
1206.02 782.548 1217.74 762.235 1220.19 740.897 cv
1225.66 714.521 1217.53 687.905 1197.9 667.873 cv
cp
0 0 0 rgb
f
1011.81 941.279 mo
1011.82 940.912 1011.84 940.545 1011.87 940.178 cv
1011.89 939.892 1011.91 939.605 1011.94 939.32 cv
1011.98 938.952 1012.02 938.586 1012.07 938.216 cv
1012.1 937.972 1012.14 937.727 1012.18 937.481 cv
1012.21 937.249 1012.26 937.016 1012.3 936.784 cv
1012.31 936.71 1012.32 936.636 1012.34 936.561 cv
1012.38 936.335 li
1012.41 936.182 1012.44 936.027 1012.47 935.875 cv
1015.23 922.603 1025.87 911.206 1037.81 908.763 cv
1065.53 901.613 1088.69 908.385 1101.75 927.365 cv
1102.16 927.958 1102.56 928.562 1102.95 929.179 cv
1103.46 929.989 1103.95 930.806 1104.44 931.684 cv
1112.04 942.622 1110.77 953.316 1108.36 960.362 cv
1104.47 971.721 1094.67 981.883 1084.51 985.075 cv
1076.8 987.498 1068.59 987.904 1056.17 986.477 cv
1036.85 980.144 1023.48 970.145 1015.29 955.914 cv
1015.01 955.418 1014.75 954.913 1014.5 954.409 cv
1014.3 953.997 li
1014.1 953.564 1013.91 953.128 1013.73 952.685 cv
1013.63 952.434 li
1013.43 951.925 1013.25 951.412 1013.08 950.896 cv
1012.95 950.456 li
1012.83 950.051 1012.72 949.644 1012.61 949.231 cv
1012.5 948.806 li
1012.39 948.297 1012.28 947.785 1012.19 947.27 cv
1012.12 946.791 li
1012.06 946.407 1012.01 946.023 1011.96 945.54 cv
1011.91 945.073 li
1011.86 944.571 1011.82 944.068 1011.8 943.561 cv
1011.79 943.055 li
1011.79 942.686 1011.78 942.318 1011.79 941.951 cv
1011.79 941.727 1011.8 941.503 1011.81 941.279 cv
cp
1077.29 898.157 mo
1057.07 892.296 1034.05 896.977 1015.7 910.682 cv
998.283 923.692 994.943 945.312 1007.58 963.259 cv
1018.91 979.354 1035.48 990.572 1054.24 994.846 cv
1054.29 994.856 li
1059.94 995.832 1065.02 996.314 1070 996.314 cv
1074.11 996.314 1078.16 995.985 1082.4 995.33 cv
1095.3 993.339 1107.4 984.565 1114.78 971.863 cv
1121.27 960.688 1122.79 948.506 1118.94 938.437 cv
1111.12 917.98 1096.33 903.676 1077.29 898.157 cv
cp
f
1147.45 920.56 mo
1146.01 920.366 1144.56 920.847 1143.26 921.95 cv
1139.93 924.78 1142.68 928.644 1143.72 930.099 cv
1143.95 930.417 1144.2 930.719 1144.45 931.02 cv
1144.75 931.378 1145.04 931.716 1145.25 932.067 cv
1152.97 944.418 1154.58 955.324 1150.3 966.39 cv
1149.3 968.992 1148.04 972.232 1149.43 976.477 cv
1149.86 977.789 li
1150.97 976.973 li
1155.37 973.745 1156.95 969.239 1158.48 964.882 cv
1158.79 963.991 1159.1 963.109 1159.43 962.251 cv
1165.55 946.385 1158.28 932.844 1152.28 924.038 cv
1150.91 922.031 1149.19 920.796 1147.45 920.56 cv
cp
f
2142.67 709.394 mo
2153.92 693.103 2162.48 674.603 2165.84 655.015 cv
2169.88 631.513 2171.38 608.129 2165.21 584.754 cv
2164.31 581.371 2163.22 578.027 2161.96 574.742 cv
2158.6 572.396 2155.05 570.355 2151.3 568.65 cv
2097.52 548.248 2048.35 560.574 2012.9 603.388 cv
1999.31 619.807 1993.97 638.382 1990.54 654.387 cv
1988.47 664.005 1989.6 672.246 1993.81 678.218 cv
1997.95 684.113 2005.17 687.904 2014.68 689.181 cv
2027.37 690.886 2040.86 689.905 2053.71 686.348 cv
2064.98 683.23 2075.63 674.26 2071.76 658.438 cv
2070.96 655.159 2070.84 651.706 2070.75 648.659 cv
2070.39 637.527 2078.18 628.372 2089.27 626.891 cv
2102.04 625.181 2115.69 634.876 2120.34 648.954 cv
2123.52 658.589 2124.01 668.818 2121.82 680.227 cv
2118.07 699.838 2108.58 717.151 2099.4 733.894 cv
2098.2 736.081 2097 738.269 2095.81 740.461 cv
2094.73 742.451 2093.59 744.443 2092.49 746.37 cv
2089.76 751.149 2086.93 756.091 2084.89 761.3 cv
2084.27 762.877 2083.79 764.329 2083.46 765.646 cv
2083.56 765.591 2083.67 765.539 2083.77 765.483 cv
2108.12 752.34 2127.13 731.898 2142.67 709.394 cv
cp
.537255 .792157 .8 rgb
f
2095.87 829.2 mo
2091.69 840.123 2097.42 853.521 2109.22 860.526 cv
2110.46 860.622 2111.7 860.69 2112.97 860.69 cv
2126.35 860.69 2140.4 854.87 2149.86 845.409 cv
2158.71 836.554 2165.41 822.151 2165.15 809.359 cv
2163.93 808.669 2162.69 808.089 2161.43 807.648 cv
2154.45 805.198 2118.54 794.726 2095.87 829.2 cv
cp
f
2188.12 609.512 mo
2187.95 609.059 li
2187.52 607.903 2187.05 606.728 2186.56 605.568 cv
2186.4 605.19 li
2185.33 602.722 2184.14 600.319 2182.87 598.049 cv
2182.23 596.906 2181.55 595.763 2180.82 594.613 cv
2180.69 594.41 li
2179.97 593.271 2179.22 592.166 2178.47 591.121 cv
2176.05 587.741 2173.37 584.614 2170.47 581.785 cv
2167.81 579.188 2164.96 576.843 2161.96 574.742 cv
2163.22 578.027 2164.31 581.371 2165.21 584.754 cv
2171.38 608.129 2169.88 631.513 2165.84 655.015 cv
2162.48 674.603 2153.92 693.103 2142.67 709.394 cv
2127.13 731.898 2108.12 752.34 2083.77 765.483 cv
2083.67 765.539 2083.56 765.591 2083.46 765.646 cv
2083.39 765.896 2083.33 766.151 2083.27 766.391 cv
2083.25 766.475 li
2083.05 767.415 2082.92 768.304 2082.88 769.115 cv
2082.88 769.217 li
2082.86 769.581 2082.86 769.955 2082.88 770.312 cv
2082.92 771.034 2083.04 771.678 2083.24 772.255 cv
2083.36 772.606 2083.47 772.87 2083.6 773.112 cv
2083.89 773.649 2084.23 774.102 2084.64 774.507 cv
2084.03 775.304 li
2084.71 774.578 li
2084.92 774.775 2085.15 774.962 2085.39 775.138 cv
2085.99 775.553 2086.59 775.879 2087.27 776.161 cv
2087.43 776.227 li
2087.76 776.36 2088.12 776.486 2088.5 776.603 cv
2088.6 776.632 li
2089.08 776.773 2089.49 776.884 2089.93 776.982 cv
2090.03 777.011 li
2090.38 777.082 2090.85 777.168 2091.33 777.247 cv
2091.59 777.289 li
2092.06 777.363 2092.56 777.428 2093.07 777.484 cv
2093.33 777.511 li
2093.9 777.569 2094.46 777.618 2095.04 777.655 cv
2109.98 778.607 2133.23 776.022 2151.47 768.101 cv
2159.46 764.631 2163.73 758.469 2163.82 750.28 cv
2164.03 730.678 2172.12 713.174 2179.25 697.73 cv
2190.74 672.834 2195.18 650.521 2192.8 629.516 cv
2192.67 628.351 2192.5 627.111 2192.29 625.725 cv
2192.19 625.139 li
2192 623.972 2191.78 622.762 2191.53 621.544 cv
2191.39 620.896 li
2191.12 619.619 2190.84 618.44 2190.54 617.294 cv
2190.44 616.905 li
2190.11 615.64 2189.75 614.418 2189.4 613.275 cv
2190.31 612.833 li
2190.31 612.833 li
2189.35 613.133 li
2189 611.999 2188.59 610.814 2188.12 609.512 cv
cp
.458824 .737255 .737255 rgb
f
2149.86 845.409 mo
2140.4 854.87 2126.35 860.69 2112.97 860.69 cv
2111.7 860.69 2110.46 860.622 2109.22 860.526 cv
2109.31 860.576 2109.39 860.63 2109.48 860.68 cv
2109.82 860.879 li
2110.01 860.99 2110.21 861.095 2110.41 861.2 cv
2111.08 861.551 li
2111.29 861.661 2111.51 861.767 2111.74 861.873 cv
2111.95 861.974 2112.17 862.074 2112.38 862.171 cv
2112.59 862.263 2112.79 862.354 2113 862.443 cv
2113.25 862.546 2113.49 862.644 2113.74 862.741 cv
2114.32 862.964 li
2114.6 863.069 2114.9 863.168 2115.19 863.265 cv
2115.67 863.427 li
2116.13 863.572 2116.59 863.709 2117.06 863.832 cv
2128.27 866.79 2139.9 866.652 2151.61 863.42 cv
2167.49 858.811 2175.58 847.852 2176.34 829.916 cv
2176.36 829.35 2176.37 828.769 2176.35 828.142 cv
2176.34 828.03 2176.33 827.92 2176.33 827.811 cv
2176.31 827.556 li
2176.29 827.169 2176.27 826.782 2176.23 826.399 cv
2176.21 826.222 2176.18 826.048 2176.16 825.873 cv
2176.14 825.713 li
2176.09 825.372 2176.04 825.034 2175.99 824.7 cv
2175.94 824.455 2175.89 824.214 2175.84 823.974 cv
2175.78 823.662 2175.7 823.35 2175.63 823.04 cv
2175.56 822.797 2175.5 822.552 2175.42 822.308 cv
2175.34 822.014 2175.25 821.724 2175.15 821.435 cv
2175.06 821.186 2174.98 820.941 2174.89 820.7 cv
2174.79 820.422 2174.67 820.151 2174.56 819.879 cv
2174.47 819.673 li
2174.4 819.498 2174.33 819.324 2174.25 819.153 cv
2174.15 818.947 2174.04 818.744 2173.94 818.54 cv
2173.75 818.175 li
2173.67 818.006 2173.58 817.836 2173.49 817.671 cv
2173.35 817.434 li
2172.99 816.816 2172.58 816.183 2172.12 815.55 cv
2171.98 815.356 li
2171.9 815.248 2171.83 815.139 2171.74 815.033 cv
2171.56 814.796 2171.37 814.568 2171.17 814.339 cv
2171.02 814.153 li
2170.91 814.029 2170.81 813.905 2170.7 813.784 cv
2170.48 813.535 2170.24 813.295 2170.01 813.057 cv
2169.86 812.909 2169.71 812.76 2169.56 812.615 cv
2169.31 812.378 2169.06 812.149 2168.8 811.924 cv
2168.65 811.791 2168.5 811.662 2168.34 811.534 cv
2168.07 811.31 2167.79 811.09 2167.51 810.878 cv
2167.39 810.79 2167.27 810.705 2167.14 810.619 cv
2167.05 810.551 li
2166.74 810.335 2166.44 810.123 2166.12 809.923 cv
2165.71 809.68 li
2165.53 809.567 2165.34 809.465 2165.15 809.359 cv
2165.41 822.151 2158.71 836.554 2149.86 845.409 cv
cp
f
2190.31 612.833 mo
2189.4 613.275 li
2189.75 614.418 2190.11 615.64 2190.44 616.905 cv
2190.54 617.294 li
2190.84 618.44 2191.12 619.619 2191.39 620.896 cv
2191.53 621.544 li
2191.78 622.762 2192 623.972 2192.19 625.139 cv
2192.29 625.725 li
2192.5 627.111 2192.67 628.351 2192.8 629.516 cv
2195.18 650.521 2190.74 672.834 2179.25 697.73 cv
2172.12 713.174 2164.03 730.678 2163.82 750.28 cv
2163.73 758.469 2159.46 764.631 2151.47 768.101 cv
2133.23 776.022 2109.98 778.607 2095.04 777.655 cv
2094.46 777.618 2093.9 777.569 2093.33 777.511 cv
2093.07 777.484 li
2092.56 777.428 2092.06 777.363 2091.59 777.289 cv
2091.33 777.247 li
2090.85 777.168 2090.38 777.082 2090.03 777.011 cv
2089.93 776.982 li
2089.49 776.884 2089.08 776.773 2088.6 776.632 cv
2088.5 776.603 li
2088.12 776.486 2087.76 776.36 2087.43 776.227 cv
2087.27 776.161 li
2086.59 775.879 2085.99 775.553 2085.39 775.138 cv
2085.15 774.962 2084.92 774.775 2084.71 774.578 cv
2084.03 775.304 li
2084.64 774.507 li
2084.23 774.102 2083.89 773.649 2083.6 773.112 cv
2083.47 772.87 2083.36 772.606 2083.24 772.255 cv
2083.04 771.678 2082.92 771.034 2082.88 770.312 cv
2082.86 769.955 2082.86 769.581 2082.88 769.217 cv
2082.88 769.115 li
2082.92 768.304 2083.05 767.415 2083.25 766.475 cv
2083.27 766.391 li
2083.33 766.151 2083.39 765.896 2083.46 765.646 cv
2083.79 764.329 2084.27 762.877 2084.89 761.3 cv
2086.93 756.091 2089.76 751.149 2092.49 746.37 cv
2093.59 744.443 2094.73 742.451 2095.81 740.461 cv
2097 738.269 2098.2 736.081 2099.4 733.894 cv
2108.58 717.151 2118.07 699.838 2121.82 680.227 cv
2124.01 668.818 2123.52 658.589 2120.34 648.954 cv
2115.69 634.876 2102.04 625.181 2089.27 626.891 cv
2078.18 628.372 2070.39 637.527 2070.75 648.659 cv
2070.84 651.706 2070.96 655.159 2071.76 658.438 cv
2075.63 674.26 2064.98 683.23 2053.71 686.348 cv
2040.86 689.905 2027.37 690.886 2014.68 689.181 cv
2005.17 687.904 1997.95 684.113 1993.81 678.218 cv
1989.6 672.246 1988.47 664.005 1990.54 654.387 cv
1993.97 638.382 1999.31 619.807 2012.9 603.388 cv
2048.35 560.574 2097.52 548.248 2151.3 568.65 cv
2155.05 570.355 2158.6 572.396 2161.96 574.742 cv
2164.96 576.843 2167.81 579.188 2170.47 581.785 cv
2173.37 584.614 2176.05 587.741 2178.47 591.121 cv
2179.22 592.166 2179.97 593.271 2180.69 594.41 cv
2180.82 594.613 li
2181.55 595.763 2182.23 596.906 2182.87 598.049 cv
2184.14 600.319 2185.33 602.722 2186.4 605.19 cv
2186.56 605.568 li
2187.05 606.728 2187.52 607.903 2187.95 609.059 cv
2188.12 609.512 li
2188.59 610.814 2189 611.999 2189.35 613.133 cv
2190.31 612.833 li
2190.31 612.833 li
cp
2094.55 787.04 mo
2094.68 787.027 2094.8 787.008 2094.92 787.016 cv
2096.11 787.081 2097.8 787.142 2099.94 787.142 cv
2110.63 787.142 2132.31 785.592 2155.96 775.082 cv
2166.51 770.395 2171.68 763.807 2172.73 753.722 cv
2172.83 752.714 2172.88 751.697 2172.92 750.714 cv
2172.97 749.587 2173.03 748.422 2173.17 747.307 cv
2174.57 736.294 2176.32 727.181 2180.3 718.498 cv
2188.92 699.736 2198.13 677.16 2201.19 651.96 cv
2204.86 621.645 2195.1 593.867 2173.73 573.768 cv
2160.53 560.364 2129.97 547.852 2097.08 549.879 cv
2071.55 551.452 2034.24 562.29 2001.45 604.99 cv
1989.6 620.415 1983.13 640.034 1981.66 664.965 cv
1980.84 678.89 1988.71 690.281 2002.2 694.693 cv
2019.76 700.438 2038.64 700.173 2059.93 693.888 cv
2073.73 689.814 2081.78 678.072 2081.47 662.478 cv
2081.43 660.115 2081.06 657.755 2080.71 655.473 cv
2080.41 653.557 2080.1 651.576 2080 649.644 cv
2079.67 643.611 2081.77 639.727 2086.63 637.419 cv
2092.16 634.788 2096.1 634.933 2100.68 637.935 cv
2108.82 643.271 2113.15 650.577 2113.92 660.27 cv
2115.15 675.712 2111.63 691.081 2103.15 707.254 cv
2099.88 713.501 2096.48 719.82 2093.2 725.93 cv
2087.63 736.286 2081.87 746.995 2076.54 757.701 cv
2072.21 766.389 2071.47 773.332 2074.33 778.337 cv
2077.24 783.432 2083.8 786.371 2093.83 787.071 cv
2094.07 787.088 2094.31 787.067 2094.55 787.04 cv
cp
0 0 0 rgb
f
2165.15 809.359 mo
2165.34 809.465 2165.53 809.567 2165.71 809.68 cv
2166.12 809.923 li
2166.44 810.123 2166.74 810.335 2167.05 810.551 cv
2167.14 810.619 li
2167.27 810.705 2167.39 810.79 2167.51 810.878 cv
2167.79 811.09 2168.07 811.31 2168.34 811.534 cv
2168.5 811.662 2168.65 811.791 2168.8 811.924 cv
2169.06 812.149 2169.31 812.378 2169.56 812.615 cv
2169.71 812.76 2169.86 812.909 2170.01 813.057 cv
2170.24 813.295 2170.48 813.535 2170.7 813.784 cv
2170.81 813.905 2170.91 814.029 2171.02 814.153 cv
2171.17 814.339 li
2171.37 814.568 2171.56 814.796 2171.74 815.033 cv
2171.83 815.139 2171.9 815.248 2171.98 815.356 cv
2172.12 815.55 li
2172.58 816.183 2172.99 816.816 2173.35 817.434 cv
2173.49 817.671 li
2173.58 817.836 2173.67 818.006 2173.75 818.175 cv
2173.94 818.54 li
2174.04 818.744 2174.15 818.947 2174.25 819.153 cv
2174.33 819.324 2174.4 819.498 2174.47 819.673 cv
2174.56 819.879 li
2174.67 820.151 2174.79 820.422 2174.89 820.7 cv
2174.98 820.941 2175.06 821.186 2175.15 821.435 cv
2175.25 821.724 2175.34 822.014 2175.42 822.308 cv
2175.5 822.552 2175.56 822.797 2175.63 823.04 cv
2175.7 823.35 2175.78 823.662 2175.84 823.974 cv
2175.89 824.214 2175.94 824.455 2175.99 824.7 cv
2176.04 825.034 2176.09 825.372 2176.14 825.713 cv
2176.16 825.873 li
2176.18 826.048 2176.21 826.222 2176.23 826.399 cv
2176.27 826.782 2176.29 827.169 2176.31 827.556 cv
2176.33 827.811 li
2176.33 827.92 2176.34 828.03 2176.35 828.142 cv
2176.37 828.769 2176.36 829.35 2176.34 829.916 cv
2175.58 847.852 2167.49 858.811 2151.61 863.42 cv
2139.9 866.652 2128.27 866.79 2117.06 863.832 cv
2116.59 863.709 2116.13 863.572 2115.67 863.427 cv
2115.19 863.265 li
2114.9 863.168 2114.6 863.069 2114.32 862.964 cv
2113.74 862.741 li
2113.49 862.644 2113.25 862.546 2113 862.443 cv
2112.79 862.354 2112.59 862.263 2112.38 862.171 cv
2112.17 862.074 2111.95 861.974 2111.74 861.873 cv
2111.51 861.767 2111.29 861.661 2111.08 861.551 cv
2110.41 861.2 li
2110.21 861.095 2110.01 860.99 2109.82 860.879 cv
2109.48 860.68 li
2109.39 860.63 2109.31 860.576 2109.22 860.526 cv
2097.42 853.521 2091.69 840.123 2095.87 829.2 cv
2118.54 794.726 2154.45 805.198 2161.43 807.648 cv
2162.69 808.089 2163.93 808.669 2165.15 809.359 cv
cp
2169.99 803.328 mo
2157.72 796.089 2143.89 794.03 2128.79 797.235 cv
2078.78 813.037 2085.78 841.886 2085.86 842.176 cv
2089.54 856.122 2097.99 865.666 2111.68 871.353 cv
2118.12 874.03 2124.51 875.015 2130.79 875.015 cv
2138.51 875.015 2146.07 873.532 2153.38 871.87 cv
2172.23 866.007 2182.2 854.019 2184.75 834.145 cv
2186.5 820.505 2181.54 810.136 2169.99 803.328 cv
cp
f
2221.08 802.945 mo
2218.77 792.313 2208.93 782.115 2199.15 780.211 cv
2196.96 779.785 2193.67 779.144 2192.74 782.778 cv
2192.03 785.543 2193.55 787.875 2196.6 788.72 cv
2196.77 788.767 2196.94 788.81 2197.12 788.854 cv
2197.61 788.981 2198.08 789.101 2198.47 789.291 cv
2210.05 794.962 2215.6 804.82 2214.51 817.799 cv
2214.44 818.625 2214.22 819.477 2213.98 820.379 cv
2213.39 822.561 2212.73 825.035 2214.29 827.688 cv
2215.15 829.15 li
2216.02 827.691 li
2221.72 818.042 2223 811.798 2221.08 802.945 cv
cp
f
1845.7 928.358 mo
1846.08 927.98 1846.44 927.572 1846.81 927.172 cv
1846.46 926.663 1846.1 926.152 1845.71 925.634 cv
1839 916.814 1828.17 910.95 1816 909.545 cv
1803.54 908.109 1791.32 911.48 1782.46 918.796 cv
1778.91 921.729 1776.23 925.711 1774.72 930.311 cv
1774.68 930.436 1774.65 930.564 1774.61 930.69 cv
1784.3 938.692 1795.89 943.639 1808.81 943.639 cv
1822.19 943.639 1836.24 937.82 1845.7 928.358 cv
cp
.537255 .792157 .8 rgb
f
1854.26 791.705 mo
1866.06 776.825 1877.38 761.644 1886.36 744.869 cv
1891.17 735.899 1895.12 726.495 1898.89 717.054 cv
1900.62 712.73 1902.05 708.329 1902.83 703.732 cv
1904.65 693.011 1905.11 683.394 1904.58 673.475 cv
1904.29 673.045 1904.01 672.614 1903.72 672.184 cv
1893.29 656.722 1877 645.222 1857.85 639.805 cv
1826.49 630.934 1795.35 634.223 1765.31 649.579 cv
1743.04 660.96 1728.27 680.119 1720.16 708.15 cv
1716.96 719.19 1719.12 723.195 1730.67 727.63 cv
1744.57 732.968 1759.27 734.961 1774.37 733.555 cv
1786.12 732.461 1792.85 727.352 1796.21 716.988 cv
1799.46 706.942 1806.44 701.996 1817.53 701.864 cv
1829.32 701.748 1838.23 707.547 1844.79 719.664 cv
1851.22 731.554 1845.61 741.753 1840 749.31 cv
1833.41 758.193 1824.83 765.354 1816.53 772.279 cv
1815.37 773.248 1814.21 774.218 1813.05 775.191 cv
1795.12 790.298 1781.47 804.138 1773.15 822.58 cv
1770.21 829.118 1766.66 838.698 1769.88 846.365 cv
1769.94 846.496 li
1769.96 846.549 1769.99 846.601 1770.01 846.654 cv
1785.91 845.266 1802.06 838.39 1814.52 829.216 cv
1829.53 818.161 1842.68 806.3 1854.26 791.705 cv
cp
f
1773.53 935.802 mo
1773.5 936.012 li
1773.45 936.523 1773.41 937.039 1773.39 937.556 cv
1773.37 937.909 li
1773.32 939.082 1773.35 940.261 1773.45 941.41 cv
1773.49 941.76 li
1773.54 942.231 1773.6 942.705 1773.67 943.176 cv
1773.73 943.544 li
1773.82 944.119 1773.93 944.689 1774.07 945.256 cv
1774.21 945.833 1774.35 946.364 1774.52 946.892 cv
1774.65 947.316 li
1774.79 947.749 1774.95 948.184 1775.11 948.614 cv
1775.24 948.945 li
1775.45 949.477 1775.68 949.996 1775.92 950.507 cv
1776.07 950.793 li
1776.28 951.205 1776.49 951.614 1776.73 952.019 cv
1776.97 952.436 li
1777.22 952.85 1777.48 953.254 1777.75 953.651 cv
1777.9 953.882 li
1778.23 954.345 1778.57 954.794 1778.93 955.234 cv
1779.22 955.571 li
1779.5 955.907 1779.8 956.235 1780.1 956.555 cv
1780.45 956.913 li
1780.92 957.387 1781.32 957.767 1781.72 958.11 cv
1795.18 969.741 1810.58 973.891 1827.48 970.448 cv
1838.81 968.139 1847.24 961.144 1850.03 951.737 cv
1850.22 951.011 1850.4 950.275 1850.55 949.555 cv
1850.59 949.403 1850.62 949.26 1850.64 949.115 cv
1850.7 948.839 li
1850.79 948.37 1850.88 947.905 1850.96 947.455 cv
1850.99 947.285 1851.01 947.116 1851.04 946.948 cv
1851.11 946.435 li
1851.16 946.108 1851.2 945.783 1851.24 945.466 cv
1851.27 945.253 1851.28 945.047 1851.3 944.841 cv
1851.32 944.624 li
1851.36 944.222 1851.39 943.894 1851.41 943.577 cv
1851.42 943.345 1851.43 943.116 1851.44 942.888 cv
1851.44 942.743 li
1851.45 942.42 1851.46 942.098 1851.46 941.783 cv
1851.46 941.508 1851.46 941.236 1851.45 940.966 cv
1851.44 940.668 1851.43 940.371 1851.42 940.081 cv
1851.4 939.813 1851.38 939.549 1851.36 939.287 cv
1851.33 939.005 1851.3 938.731 1851.27 938.462 cv
1851.24 938.201 1851.2 937.938 1851.16 937.682 cv
1851.12 937.426 1851.08 937.171 1851.03 936.919 cv
1850.98 936.659 1850.93 936.405 1850.88 936.154 cv
1850.82 935.917 1850.76 935.683 1850.7 935.45 cv
1850.64 935.192 1850.57 934.939 1850.5 934.691 cv
1850.44 934.484 1850.37 934.276 1850.3 934.066 cv
1850.2 933.769 1850.13 933.526 1850.04 933.288 cv
1849.98 933.138 1849.92 932.984 1849.86 932.831 cv
1849.76 932.564 li
1849.67 932.353 1849.59 932.143 1849.5 931.936 cv
1849.45 931.821 1849.4 931.71 1849.34 931.598 cv
1849.19 931.272 li
1849.09 931.056 1848.99 930.838 1848.88 930.626 cv
1848.69 930.266 li
1848.15 929.233 1847.52 928.209 1846.81 927.172 cv
1846.44 927.572 1846.08 927.98 1845.7 928.358 cv
1836.24 937.82 1822.19 943.639 1808.81 943.639 cv
1795.89 943.639 1784.3 938.692 1774.61 930.69 cv
1774.48 931.118 1774.35 931.547 1774.24 931.981 cv
1774.16 932.295 li
1774.03 932.824 1773.91 933.352 1773.81 933.885 cv
1772.8 933.833 li
1772.8 933.833 li
1773.79 934.007 li
1773.68 934.61 1773.59 935.205 1773.53 935.802 cv
cp
.458824 .737255 .737255 rgb
f
1771.14 848.789 mo
1778.09 859.459 1788.07 866.388 1799.24 868.301 cv
1807.3 869.68 1816.18 870.353 1827.2 870.418 cv
1827.26 870.419 1827.32 870.419 1827.38 870.419 cv
1837.64 870.419 1850.53 865.203 1853.33 850.456 cv
1854.91 842.134 1858.48 833.986 1864.26 825.549 cv
1868.94 818.717 1873.8 811.848 1878.5 805.204 cv
1883.77 797.755 1889.23 790.052 1894.44 782.378 cv
1895.13 781.351 1895.83 780.326 1896.54 779.299 cv
1904.89 767.078 1913.53 754.441 1917.25 736.735 cv
1923.22 716.992 1918.82 695.175 1904.58 673.475 cv
1905.11 683.394 1904.65 693.011 1902.83 703.732 cv
1902.05 708.329 1900.62 712.73 1898.89 717.054 cv
1895.12 726.495 1891.17 735.899 1886.36 744.869 cv
1877.38 761.644 1866.06 776.825 1854.26 791.705 cv
1842.68 806.3 1829.53 818.161 1814.52 829.216 cv
1802.06 838.39 1785.91 845.266 1770.01 846.654 cv
1770.14 846.959 1770.28 847.262 1770.44 847.561 cv
1770.62 847.904 1770.86 848.355 1771.14 848.789 cv
cp
f
1769.94 846.496 mo
1769.88 846.365 li
1766.66 838.698 1770.21 829.118 1773.15 822.58 cv
1781.47 804.138 1795.12 790.298 1813.05 775.191 cv
1814.21 774.218 1815.37 773.248 1816.53 772.279 cv
1824.83 765.354 1833.41 758.193 1840 749.31 cv
1845.61 741.753 1851.22 731.554 1844.79 719.664 cv
1838.23 707.547 1829.32 701.748 1817.53 701.864 cv
1806.44 701.996 1799.46 706.942 1796.21 716.988 cv
1792.85 727.352 1786.12 732.461 1774.37 733.555 cv
1759.27 734.961 1744.57 732.968 1730.67 727.63 cv
1719.12 723.195 1716.96 719.19 1720.16 708.15 cv
1728.27 680.119 1743.04 660.96 1765.31 649.579 cv
1795.35 634.223 1826.49 630.934 1857.85 639.805 cv
1877 645.222 1893.29 656.722 1903.72 672.184 cv
1904.01 672.614 1904.29 673.045 1904.58 673.475 cv
1918.82 695.175 1923.22 716.992 1917.25 736.735 cv
1913.53 754.441 1904.89 767.078 1896.54 779.299 cv
1895.83 780.326 1895.13 781.351 1894.44 782.378 cv
1889.23 790.052 1883.77 797.755 1878.5 805.204 cv
1873.8 811.848 1868.94 818.717 1864.26 825.549 cv
1858.48 833.986 1854.91 842.134 1853.33 850.456 cv
1850.53 865.203 1837.64 870.419 1827.38 870.419 cv
1827.32 870.419 1827.26 870.419 1827.2 870.418 cv
1816.18 870.353 1807.3 869.68 1799.24 868.301 cv
1788.07 866.388 1778.09 859.459 1771.14 848.789 cv
1770.86 848.355 1770.62 847.904 1770.44 847.561 cv
1770.28 847.262 1770.14 846.959 1770.01 846.654 cv
1769.99 846.601 1769.96 846.549 1769.94 846.496 cv
cp
1927.63 699.256 mo
1920.51 665.584 1894.32 638.809 1860.98 631.062 cv
1837.42 623.613 1819.09 624.358 1797.13 627.977 cv
1761.9 633.785 1737.22 650.44 1721.67 678.897 cv
1716.58 688.223 1712.92 697.727 1709 708.292 cv
1705.81 716.911 1707.43 723.118 1714.6 729.715 cv
1718.9 733.676 1723.32 736.299 1728.1 737.734 cv
1740.57 741.473 1752.19 743.617 1763.62 744.289 cv
1800.03 746.435 1805.85 725.364 1806.77 718.856 cv
1806.77 718.812 1806.78 718.772 1806.78 718.737 cv
1809.21 715.215 1813.19 712.966 1817.75 712.556 cv
1822.68 712.108 1827.61 713.895 1830.93 717.329 cv
1838.78 725.445 1838.83 735.999 1831.05 744.873 cv
1825.64 751.049 1818.34 758.92 1809.91 765.023 cv
1797.35 774.11 1785.69 785.533 1773.23 800.972 cv
1763.11 813.515 1758.02 827.225 1758.12 841.721 cv
1758.16 847.196 1763.54 857.942 1767.91 861.275 cv
1785.98 878.225 1802.99 880.828 1814.32 880.827 cv
1817.3 880.827 1819.89 880.647 1822 880.501 cv
1823.33 880.409 1824.47 880.329 1825.43 880.31 cv
1844.65 879.913 1859.07 868.954 1864.01 850.995 cv
1866.06 843.552 1869.18 836.855 1873.56 830.522 cv
1889.91 806.851 1903.13 787.254 1915.17 768.851 cv
1928.8 747.996 1932.99 724.581 1927.63 699.256 cv
cp
0 0 0 rgb
f
1772.8 933.833 mo
1773.81 933.885 li
1773.91 933.352 1774.03 932.824 1774.16 932.295 cv
1774.24 931.981 li
1774.35 931.547 1774.48 931.118 1774.61 930.69 cv
1774.65 930.564 1774.68 930.436 1774.72 930.311 cv
1776.23 925.711 1778.91 921.729 1782.46 918.796 cv
1791.32 911.48 1803.54 908.109 1816 909.545 cv
1828.17 910.95 1839 916.814 1845.71 925.634 cv
1846.1 926.152 1846.46 926.663 1846.81 927.172 cv
1847.52 928.209 1848.15 929.233 1848.69 930.266 cv
1848.88 930.626 li
1848.99 930.838 1849.09 931.056 1849.19 931.272 cv
1849.34 931.598 li
1849.4 931.71 1849.45 931.821 1849.5 931.936 cv
1849.59 932.143 1849.67 932.353 1849.76 932.564 cv
1849.86 932.831 li
1849.92 932.984 1849.98 933.138 1850.04 933.288 cv
1850.13 933.526 1850.2 933.769 1850.3 934.066 cv
1850.37 934.276 1850.44 934.484 1850.5 934.691 cv
1850.57 934.939 1850.64 935.192 1850.7 935.45 cv
1850.76 935.683 1850.82 935.917 1850.88 936.154 cv
1850.93 936.405 1850.98 936.659 1851.03 936.919 cv
1851.08 937.171 1851.12 937.426 1851.16 937.682 cv
1851.2 937.938 1851.24 938.201 1851.27 938.462 cv
1851.3 938.731 1851.33 939.005 1851.36 939.287 cv
1851.38 939.549 1851.4 939.813 1851.42 940.081 cv
1851.43 940.371 1851.44 940.668 1851.45 940.966 cv
1851.46 941.236 1851.46 941.508 1851.46 941.783 cv
1851.46 942.098 1851.45 942.42 1851.44 942.743 cv
1851.44 942.888 li
1851.43 943.116 1851.42 943.345 1851.41 943.577 cv
1851.39 943.894 1851.36 944.222 1851.32 944.624 cv
1851.3 944.841 li
1851.28 945.047 1851.27 945.253 1851.24 945.466 cv
1851.2 945.783 1851.16 946.108 1851.11 946.435 cv
1851.04 946.948 li
1851.01 947.116 1850.99 947.285 1850.96 947.455 cv
1850.88 947.905 1850.79 948.37 1850.7 948.839 cv
1850.64 949.115 li
1850.62 949.26 1850.59 949.403 1850.55 949.555 cv
1850.4 950.275 1850.22 951.011 1850.03 951.737 cv
1847.24 961.144 1838.81 968.139 1827.48 970.448 cv
1810.58 973.891 1795.18 969.741 1781.72 958.11 cv
1781.32 957.767 1780.92 957.387 1780.45 956.913 cv
1780.1 956.555 li
1779.8 956.235 1779.5 955.907 1779.22 955.571 cv
1778.93 955.234 li
1778.57 954.794 1778.23 954.345 1777.9 953.882 cv
1777.75 953.651 li
1777.48 953.254 1777.22 952.85 1776.97 952.436 cv
1776.73 952.019 li
1776.49 951.614 1776.28 951.205 1776.07 950.793 cv
1775.92 950.507 li
1775.68 949.996 1775.45 949.477 1775.24 948.945 cv
1775.11 948.614 li
1774.95 948.184 1774.79 947.749 1774.65 947.316 cv
1774.52 946.892 li
1774.35 946.364 1774.21 945.833 1774.07 945.256 cv
1773.93 944.689 1773.82 944.119 1773.73 943.544 cv
1773.67 943.176 li
1773.6 942.705 1773.54 942.231 1773.49 941.76 cv
1773.45 941.41 li
1773.35 940.261 1773.32 939.082 1773.37 937.909 cv
1773.39 937.556 li
1773.41 937.039 1773.45 936.523 1773.5 936.012 cv
1773.53 935.802 li
1773.59 935.205 1773.68 934.61 1773.79 934.007 cv
1772.8 933.833 li
1772.8 933.833 li
cp
1806.98 900.398 mo
1791.89 902.106 1780.02 907.291 1770.69 916.246 cv
1761.19 925.365 1759.63 948.567 1767.86 958.325 cv
1776.66 968.765 1787.05 975.752 1798.73 979.09 cv
1803.4 980.463 1808.13 980.85 1812.81 980.85 cv
1815.87 980.85 1818.92 980.685 1821.92 980.522 cv
1823.37 980.445 li
1840.26 979.555 1852.51 970.896 1858.81 955.406 cv
1864.13 942.318 1860.92 929.72 1849.01 916.889 cv
1837.16 904.131 1823.02 898.584 1806.98 900.398 cv
cp
f
1702.85 657.849 mo
1700.71 656.099 1698.08 657.575 1696.95 658.206 cv
1677.96 668.853 1669.94 691.955 1677 715.692 cv
1678.13 719.479 li
1678.94 715.612 li
1679.83 711.385 1680.19 707.708 1680.54 704.154 cv
1680.97 699.758 1681.34 695.961 1682.62 692.124 cv
1685.79 682.613 1691.95 675.858 1698.48 668.707 cv
1699.73 667.341 1700.97 665.973 1702.2 664.582 cv
1702.29 664.483 li
1703.32 663.319 1704.49 662 1704.36 660.391 cv
1704.28 659.463 1703.77 658.608 1702.85 657.849 cv
cp
f
2446.94 811.29 mo
2470.45 800.729 2487.8 782.027 2502.92 761.811 cv
2509.08 753.566 2514.3 744.641 2519 735.492 cv
2525.54 722.764 2531.52 709.377 2535.14 695.494 cv
2541.47 671.26 2541.54 646.503 2533.59 623.289 cv
2533.19 622.98 2532.81 622.661 2532.4 622.357 cv
2529.66 620.289 2526.83 618.374 2524.01 616.666 cv
2488.5 595.187 2448.56 593.495 2405.27 611.64 cv
2374.49 624.542 2353 649.373 2337.64 689.782 cv
2335.31 695.927 2336.22 701.477 2340.34 706.28 cv
2348.49 715.76 2364.62 725.155 2386.59 725.157 cv
2388.91 725.157 2391.3 725.052 2393.75 724.831 cv
2418.65 724.22 2421.84 721.316 2424.86 696.581 cv
2425.7 689.771 2427.98 680.313 2438.16 676.81 cv
2446.7 673.871 2455.29 673.669 2463.7 676.206 cv
2471.92 678.689 2479.22 685.869 2483.72 695.907 cv
2488.81 707.257 2489.32 720.024 2485.06 729.225 cv
2480.97 738.037 2475.09 745.725 2467.08 752.728 cv
2462.29 756.915 2457.19 760.889 2452.26 764.732 cv
2442.65 772.217 2432.72 779.957 2424.77 789.527 cv
2423.93 790.54 2423.08 791.55 2422.23 792.56 cv
2415.52 800.539 2408.58 808.789 2405.46 819.278 cv
2404.86 821.277 2404.42 823.051 2404.09 824.697 cv
2406.31 824.354 2408.52 823.996 2410.73 823.602 cv
2423.5 821.327 2435.12 816.602 2446.94 811.29 cv
cp
.537255 .792157 .8 rgb
f
2404.73 837.779 mo
2404.73 837.779 li
2404.73 837.779 li
2404.73 837.779 li
2404.73 837.779 li
cp
f
2403.77 928.109 mo
2413.97 937.479 2426.52 943.39 2440.66 943.39 cv
2454.03 943.39 2468.09 937.57 2477.55 928.109 cv
2483.99 921.671 2489.28 912.3 2491.59 902.748 cv
2479.63 888.344 2465.04 883.948 2451.71 883.948 cv
2438.25 883.948 2426.06 888.422 2419.13 891.586 cv
2408.29 895.888 2399.94 907.557 2398.3 920.643 cv
2398.29 920.742 li
2398.25 921.058 2398.22 921.405 2398.19 921.757 cv
2399.82 924.035 2401.66 926.175 2403.77 928.109 cv
cp
f
2405.54 837.186 mo
2405.87 837.644 2406.26 838.091 2406.7 838.519 cv
2406.85 838.672 li
2406.96 838.773 2407.07 838.873 2407.19 838.972 cv
2407.45 839.205 li
2407.57 839.306 2407.7 839.406 2407.83 839.506 cv
2408.11 839.722 li
2408.24 839.821 2408.37 839.915 2408.5 840.009 cv
2408.83 840.235 li
2408.96 840.322 2409.09 840.411 2409.23 840.499 cv
2409.35 840.574 2409.47 840.644 2409.58 840.714 cv
2410.02 840.979 li
2410.23 841.097 2410.44 841.21 2410.65 841.323 cv
2410.83 841.417 2411.01 841.511 2411.19 841.603 cv
2411.41 841.716 2411.59 841.805 2411.77 841.893 cv
2413.22 842.541 li
2413.42 842.626 2413.63 842.712 2413.84 842.796 cv
2415.45 843.41 li
2415.71 843.504 2415.98 843.598 2416.26 843.692 cv
2416.66 843.83 li
2417.07 843.968 2417.5 844.106 2417.93 844.243 cv
2432.44 848.78 2462.63 858.222 2497.51 845.66 cv
2500.24 844.535 2501.73 843.387 2502.3 841.955 cv
2502.82 840.645 2502.59 838.955 2501.6 836.787 cv
2498.98 831.035 2499.68 824.897 2500.35 818.961 cv
2500.48 817.752 li
2502.09 803.145 2510.14 791.471 2517.25 781.172 cv
2520.46 776.514 2523.79 771.827 2527.02 767.293 cv
2535.99 754.687 2545.26 741.652 2552.87 727.897 cv
2553.52 726.72 2554.17 725.486 2554.8 724.23 cv
2554.92 723.99 2555.04 723.749 2555.15 723.507 cv
2555.4 722.986 li
2555.8 722.157 2556.19 721.35 2556.56 720.539 cv
2556.71 720.208 2556.85 719.876 2556.99 719.545 cv
2557.31 718.813 li
2557.59 718.154 2557.88 717.494 2558.14 716.832 cv
2558.31 716.432 2558.46 716.031 2558.61 715.629 cv
2558.82 715.092 li
2559.07 714.432 2559.32 713.772 2559.56 713.111 cv
2559.73 712.633 2559.88 712.156 2560.04 711.679 cv
2560.14 711.407 li
2560.36 710.733 2560.58 710.059 2560.79 709.383 cv
2560.97 708.795 2561.14 708.208 2561.31 707.622 cv
2561.5 706.965 2561.68 706.309 2561.86 705.652 cv
2562.01 705.047 2562.16 704.443 2562.31 703.839 cv
2562.46 703.202 2562.61 702.565 2562.74 701.928 cv
2562.88 701.305 2563.01 700.685 2563.13 700.063 cv
2563.25 699.445 2563.36 698.828 2563.46 698.21 cv
2563.57 697.573 2563.68 696.935 2563.77 696.298 cv
2563.86 695.705 2563.93 695.111 2564.01 694.517 cv
2564.09 693.856 2564.17 693.198 2564.24 692.541 cv
2564.28 692.076 2564.32 691.609 2564.36 691.143 cv
2564.38 690.86 li
2564.44 690.109 2564.49 689.454 2564.53 688.801 cv
2564.55 688.436 2564.56 688.073 2564.57 687.71 cv
2564.59 686.967 li
2564.61 686.336 2564.64 685.705 2564.64 685.077 cv
2564.64 684.83 2564.64 684.584 2564.63 684.339 cv
2564.62 683.704 li
2564.62 682.927 2564.61 682.149 2564.58 681.375 cv
2564.57 681.231 li
2564.43 677.839 2564.05 674.423 2563.45 671.08 cv
2563.42 670.943 li
2563.23 669.885 2563.03 668.927 2562.81 667.971 cv
2562.67 667.325 li
2562.46 666.418 2562.22 665.517 2561.98 664.617 cv
2561.77 663.846 li
2561.52 662.964 2561.24 662.091 2560.96 661.219 cv
2560.7 660.419 li
2560.4 659.552 2560.09 658.69 2559.76 657.83 cv
2559.46 657.055 li
2559.12 656.189 2558.76 655.33 2558.39 654.475 cv
2558.07 653.754 li
2557.68 652.885 2557.27 652.021 2556.84 651.164 cv
2556.52 650.535 li
2556.07 649.65 2555.6 648.774 2555.11 647.906 cv
2554.83 647.402 li
2554.31 646.498 2553.78 645.597 2553.22 644.705 cv
2553.02 644.406 li
2548.02 636.517 2541.48 629.427 2533.59 623.289 cv
2541.54 646.503 2541.47 671.26 2535.14 695.494 cv
2531.52 709.377 2525.54 722.764 2519 735.492 cv
2514.3 744.641 2509.08 753.566 2502.92 761.811 cv
2487.8 782.027 2470.45 800.729 2446.94 811.29 cv
2435.12 816.602 2423.5 821.327 2410.73 823.602 cv
2408.52 823.996 2406.31 824.354 2404.09 824.697 cv
2404.07 824.784 2404.05 824.874 2404.03 824.959 cv
2404.03 825.278 li
2403.96 825.353 li
2403.61 827.274 2403.45 828.944 2403.48 830.448 cv
2403.48 830.768 2403.49 831.002 2403.51 831.233 cv
2403.51 831.341 li
2403.53 831.569 2403.55 831.793 2403.58 832.014 cv
2403.59 832.116 li
2403.7 833.041 2403.91 833.927 2404.21 834.726 cv
2404.29 834.938 2404.36 835.108 2404.43 835.278 cv
2404.49 835.419 li
2404.57 835.575 2404.64 835.727 2404.72 835.878 cv
2404.81 836.043 li
2404.89 836.191 2404.97 836.335 2405.06 836.477 cv
2405.16 836.636 li
2405.26 836.786 2405.35 836.927 2405.45 837.064 cv
2404.73 837.779 li
2404.73 837.779 li
2405.54 837.186 li
cp
.458824 .737255 .737255 rgb
f
2398.06 926.697 mo
2398.07 926.937 2398.09 927.178 2398.1 927.419 cv
2398.13 927.809 2398.15 928.116 2398.18 928.424 cv
2398.2 928.643 2398.23 928.859 2398.26 929.075 cv
2398.29 929.301 li
2398.35 929.798 2398.42 930.293 2398.51 930.787 cv
2398.53 930.921 li
2398.58 931.19 2398.62 931.46 2398.68 931.727 cv
2398.73 931.963 2398.78 932.195 2398.84 932.428 cv
2398.86 932.536 li
2398.93 932.848 2399.01 933.156 2399.09 933.463 cv
2399.16 933.722 2399.23 933.977 2399.31 934.23 cv
2399.41 934.566 2399.52 934.898 2399.63 935.23 cv
2399.69 935.428 li
2399.74 935.583 2399.79 935.738 2399.85 935.892 cv
2400.04 936.408 2400.24 936.92 2400.46 937.426 cv
2400.6 937.742 li
2400.8 938.195 2401.01 938.644 2401.24 939.086 cv
2401.3 939.205 2401.36 939.321 2401.43 939.437 cv
2401.53 939.631 li
2401.72 939.978 2401.92 940.327 2402.12 940.671 cv
2402.23 940.854 2402.34 941.039 2402.46 941.222 cv
2402.68 941.575 2402.91 941.92 2403.15 942.262 cv
2403.27 942.428 li
2403.34 942.529 2403.41 942.63 2403.48 942.729 cv
2403.84 943.223 2404.21 943.704 2404.6 944.175 cv
2415.61 957.304 2431.17 965.135 2452.18 968.114 cv
2465.2 967.313 2473.57 965.394 2481.05 961.497 cv
2490.9 956.36 2499.13 944.124 2501.04 931.74 cv
2502.23 924.057 2501.59 912.829 2491.78 902.972 cv
2491.72 902.895 2491.65 902.824 2491.59 902.748 cv
2489.28 912.3 2483.99 921.671 2477.55 928.109 cv
2468.09 937.57 2454.03 943.39 2440.66 943.39 cv
2426.52 943.39 2413.97 937.479 2403.77 928.109 cv
2401.66 926.175 2399.82 924.035 2398.19 921.757 cv
2398.14 922.269 2398.1 922.801 2398.07 923.354 cv
2398.04 923.889 li
2398.03 924.254 2398.03 924.614 2398.03 924.976 cv
2398.03 925.206 2398.03 925.434 2398.03 925.661 cv
2398.04 926.005 2398.04 926.351 2398.06 926.697 cv
cp
f
2404.73 837.779 mo
2404.73 837.779 li
2405.45 837.064 li
2405.35 836.927 2405.26 836.786 2405.16 836.636 cv
2405.06 836.477 li
2404.97 836.335 2404.89 836.191 2404.81 836.043 cv
2404.72 835.878 li
2404.64 835.727 2404.57 835.575 2404.49 835.419 cv
2404.43 835.278 li
2404.36 835.108 2404.29 834.938 2404.21 834.726 cv
2403.91 833.927 2403.7 833.041 2403.59 832.116 cv
2403.58 832.014 li
2403.55 831.793 2403.53 831.569 2403.51 831.341 cv
2403.51 831.233 li
2403.49 831.002 2403.48 830.768 2403.48 830.448 cv
2403.45 828.944 2403.61 827.274 2403.96 825.353 cv
2404.03 825.278 li
2404.03 824.959 li
2404.05 824.874 2404.07 824.784 2404.09 824.697 cv
2404.42 823.051 2404.86 821.277 2405.46 819.278 cv
2408.58 808.789 2415.52 800.539 2422.23 792.56 cv
2423.08 791.55 2423.93 790.54 2424.77 789.527 cv
2432.72 779.957 2442.65 772.217 2452.26 764.732 cv
2457.19 760.889 2462.29 756.915 2467.08 752.728 cv
2475.09 745.725 2480.97 738.037 2485.06 729.225 cv
2489.32 720.024 2488.81 707.257 2483.72 695.907 cv
2479.22 685.869 2471.92 678.689 2463.7 676.206 cv
2455.29 673.669 2446.7 673.871 2438.16 676.81 cv
2427.98 680.313 2425.7 689.771 2424.86 696.581 cv
2421.84 721.316 2418.65 724.22 2393.75 724.831 cv
2391.3 725.052 2388.91 725.157 2386.59 725.157 cv
2364.62 725.155 2348.49 715.76 2340.34 706.28 cv
2336.22 701.477 2335.31 695.927 2337.64 689.782 cv
2353 649.373 2374.49 624.542 2405.27 611.64 cv
2448.56 593.495 2488.5 595.187 2524.01 616.666 cv
2526.83 618.374 2529.66 620.289 2532.4 622.357 cv
2532.81 622.661 2533.19 622.98 2533.59 623.289 cv
2541.48 629.427 2548.02 636.517 2553.02 644.406 cv
2553.22 644.705 li
2553.78 645.597 2554.31 646.498 2554.83 647.402 cv
2555.11 647.906 li
2555.6 648.774 2556.07 649.65 2556.52 650.535 cv
2556.84 651.164 li
2557.27 652.021 2557.68 652.885 2558.07 653.754 cv
2558.39 654.475 li
2558.76 655.33 2559.12 656.189 2559.46 657.055 cv
2559.76 657.83 li
2560.09 658.69 2560.4 659.552 2560.7 660.419 cv
2560.96 661.219 li
2561.24 662.091 2561.52 662.964 2561.77 663.846 cv
2561.98 664.617 li
2562.22 665.517 2562.46 666.418 2562.67 667.325 cv
2562.81 667.971 li
2563.03 668.927 2563.23 669.885 2563.42 670.943 cv
2563.45 671.08 li
2564.05 674.423 2564.43 677.839 2564.57 681.231 cv
2564.58 681.375 li
2564.61 682.149 2564.62 682.927 2564.62 683.704 cv
2564.63 684.339 li
2564.64 684.584 2564.64 684.83 2564.64 685.077 cv
2564.64 685.705 2564.61 686.336 2564.59 686.967 cv
2564.57 687.71 li
2564.56 688.073 2564.55 688.436 2564.53 688.801 cv
2564.49 689.454 2564.44 690.109 2564.38 690.86 cv
2564.36 691.143 li
2564.32 691.609 2564.28 692.076 2564.24 692.541 cv
2564.17 693.198 2564.09 693.856 2564.01 694.517 cv
2563.93 695.111 2563.86 695.705 2563.77 696.298 cv
2563.68 696.935 2563.57 697.573 2563.46 698.21 cv
2563.36 698.828 2563.25 699.445 2563.13 700.063 cv
2563.01 700.685 2562.88 701.305 2562.74 701.928 cv
2562.61 702.565 2562.46 703.202 2562.31 703.839 cv
2562.16 704.443 2562.01 705.047 2561.86 705.652 cv
2561.68 706.309 2561.5 706.965 2561.31 707.622 cv
2561.14 708.208 2560.97 708.795 2560.79 709.383 cv
2560.58 710.059 2560.36 710.733 2560.14 711.407 cv
2560.04 711.679 li
2559.88 712.156 2559.73 712.633 2559.56 713.111 cv
2559.32 713.772 2559.07 714.432 2558.82 715.092 cv
2558.61 715.629 li
2558.46 716.031 2558.31 716.432 2558.14 716.832 cv
2557.88 717.494 2557.59 718.154 2557.31 718.813 cv
2556.99 719.545 li
2556.85 719.876 2556.71 720.208 2556.56 720.539 cv
2556.19 721.35 2555.8 722.157 2555.4 722.986 cv
2555.15 723.507 li
2555.04 723.749 2554.92 723.99 2554.8 724.23 cv
2554.17 725.486 2553.52 726.72 2552.87 727.897 cv
2545.26 741.652 2535.99 754.687 2527.02 767.293 cv
2523.79 771.827 2520.46 776.514 2517.25 781.172 cv
2510.14 791.471 2502.09 803.145 2500.48 817.752 cv
2500.35 818.961 li
2499.68 824.897 2498.98 831.035 2501.6 836.787 cv
2502.59 838.955 2502.82 840.645 2502.3 841.955 cv
2501.73 843.387 2500.24 844.535 2497.51 845.66 cv
2462.63 858.222 2432.44 848.78 2417.93 844.243 cv
2417.5 844.106 2417.07 843.968 2416.66 843.83 cv
2416.26 843.692 li
2415.98 843.598 2415.71 843.504 2415.45 843.41 cv
2413.84 842.796 li
2413.63 842.712 2413.42 842.626 2413.22 842.541 cv
2411.77 841.893 li
2411.59 841.805 2411.41 841.716 2411.19 841.603 cv
2411.01 841.511 2410.83 841.417 2410.65 841.323 cv
2410.44 841.21 2410.23 841.097 2410.02 840.979 cv
2409.58 840.714 li
2409.47 840.644 2409.35 840.574 2409.23 840.499 cv
2409.09 840.411 2408.96 840.322 2408.83 840.235 cv
2408.5 840.009 li
2408.37 839.915 2408.24 839.821 2408.11 839.722 cv
2407.83 839.506 li
2407.7 839.406 2407.57 839.306 2407.45 839.205 cv
2407.19 838.972 li
2407.07 838.873 2406.96 838.773 2406.85 838.672 cv
2406.7 838.519 li
2406.26 838.091 2405.87 837.644 2405.54 837.186 cv
2404.73 837.779 li
2404.73 837.779 li
2404.73 837.779 li
cp
2551 754.217 mo
2568.79 731.321 2577.11 708.335 2575.74 685.988 cv
2576.54 657.922 2563.35 632.089 2539.54 615.114 cv
2504.57 590.174 2467.12 583.009 2428.22 593.818 cv
2418.86 596.417 2406.68 600.135 2395.38 605.861 cv
2378.98 614.168 2366.55 623.869 2357.38 635.516 cv
2348.97 646.188 2341.32 658.501 2332.56 675.436 cv
2320.68 698.418 2320.34 705.134 2343.75 724.06 cv
2349.55 728.748 2366.51 739.209 2398.52 735.108 cv
2422.48 733.823 2432.84 723.998 2435.48 700.062 cv
2436.05 694.843 2438.36 690.506 2441.98 687.851 cv
2445.68 685.131 2450.46 684.251 2455.78 685.3 cv
2460.06 686.144 2463.87 688.078 2467.12 691.047 cv
2478.63 701.58 2480.48 718.395 2471.51 731.033 cv
2463.77 741.945 2454.96 750.736 2445.33 757.162 cv
2421.5 773.052 2403.12 794.346 2390.69 820.453 cv
2389.73 822.464 2387.76 829.934 2391.13 837.621 cv
2394.58 845.472 2402.36 851.309 2414.25 854.97 cv
2430.52 859.979 2446.37 861.725 2460.2 861.725 cv
2481.59 861.724 2498.13 857.545 2503.86 854.808 cv
2513.41 850.244 2516.52 844.038 2513.66 835.277 cv
2508.35 819.01 2515.81 805.54 2523.02 792.514 cv
2523.41 791.807 li
2529.06 781.59 2536.65 772.161 2543.99 763.042 cv
2546.3 760.16 2548.7 757.179 2551 754.217 cv
cp
0 0 0 rgb
f
2398.04 923.889 mo
2398.07 923.354 li
2398.1 922.801 2398.14 922.269 2398.19 921.757 cv
2398.22 921.405 2398.25 921.058 2398.29 920.742 cv
2398.3 920.643 li
2399.94 907.557 2408.29 895.888 2419.13 891.586 cv
2426.06 888.422 2438.25 883.948 2451.71 883.948 cv
2465.04 883.948 2479.63 888.344 2491.59 902.748 cv
2491.65 902.824 2491.72 902.895 2491.78 902.972 cv
2501.59 912.829 2502.23 924.057 2501.04 931.74 cv
2499.13 944.124 2490.9 956.36 2481.05 961.497 cv
2473.57 965.394 2465.2 967.313 2452.18 968.114 cv
2431.17 965.135 2415.61 957.304 2404.6 944.175 cv
2404.21 943.704 2403.84 943.223 2403.48 942.729 cv
2403.41 942.63 2403.34 942.529 2403.27 942.428 cv
2403.15 942.262 li
2402.91 941.92 2402.68 941.575 2402.46 941.222 cv
2402.34 941.039 2402.23 940.854 2402.12 940.671 cv
2401.92 940.327 2401.72 939.978 2401.53 939.631 cv
2401.43 939.437 li
2401.36 939.321 2401.3 939.205 2401.24 939.086 cv
2401.01 938.644 2400.8 938.195 2400.6 937.742 cv
2400.46 937.426 li
2400.24 936.92 2400.04 936.408 2399.85 935.892 cv
2399.79 935.738 2399.74 935.583 2399.69 935.428 cv
2399.63 935.23 li
2399.52 934.898 2399.41 934.566 2399.31 934.23 cv
2399.23 933.977 2399.16 933.722 2399.09 933.463 cv
2399.01 933.156 2398.93 932.848 2398.86 932.536 cv
2398.84 932.428 li
2398.78 932.195 2398.73 931.963 2398.68 931.727 cv
2398.62 931.46 2398.58 931.19 2398.53 930.921 cv
2398.51 930.787 li
2398.42 930.293 2398.35 929.798 2398.29 929.301 cv
2398.26 929.075 li
2398.23 928.859 2398.2 928.643 2398.18 928.424 cv
2398.15 928.116 2398.13 927.809 2398.1 927.419 cv
2398.09 927.178 2398.07 926.937 2398.06 926.697 cv
2398.04 926.351 2398.04 926.005 2398.03 925.661 cv
2398.03 925.434 2398.03 925.206 2398.03 924.976 cv
2398.03 924.614 2398.03 924.254 2398.04 923.889 cv
cp
2457.75 873.575 mo
2435.94 871.245 2413.16 880.251 2396.83 897.659 cv
2381.34 914.179 2381.85 936.963 2398.08 953.066 cv
2412.65 967.518 2431.7 976.008 2451.78 976.974 cv
2462.7 976.918 2471.35 975.53 2480.72 972.333 cv
2493.58 967.939 2504.4 956.734 2509.66 942.357 cv
2514.28 929.711 2513.61 916.937 2507.83 907.313 cv
2496.08 887.747 2478.29 875.765 2457.75 873.575 cv
cp
f
2533.88 883.777 mo
2532.38 883.839 2530.99 884.592 2529.86 885.952 cv
2526.99 889.435 2530.5 892.879 2531.82 894.177 cv
2532.11 894.461 2532.42 894.725 2532.74 894.986 cv
2533.11 895.3 2533.46 895.597 2533.76 895.92 cv
2543.94 907.203 2547.58 918.121 2545.21 930.277 cv
2544.66 933.128 2543.96 936.676 2546.15 940.765 cv
2546.81 941.981 li
2547.76 940.982 li
2551.68 936.875 2552.47 931.967 2553.25 927.22 cv
2553.4 926.249 2553.56 925.287 2553.74 924.347 cv
2557.13 906.957 2547.2 894.392 2539.44 886.453 cv
2537.68 884.651 2535.69 883.708 2533.88 883.777 cv
cp
f
372.2 1230.93 mo
373.828 1230.93 375.356 1213.02 375.356 1213.02 cv
369.412 1213.02 366.246 1230.93 372.2 1230.93 cv
cp
1 1 1 rgb
f
483.516 1075.93 mo
483.516 1075.93 484.111 1088.06 484.569 1091.56 cv
485.377 1097.75 492.419 1075.93 483.516 1075.93 cv
cp
f
484.591 1207.21 mo
484.145 1187.56 488.978 1170.64 500.042 1155.38 cv
509.569 1142.24 518.37 1129.25 527.549 1115.86 cv
537.609 1101.18 542.438 1082.3 531.528 1067.9 cv
507.907 1036.72 477.122 1026.17 463.944 1023.41 cv
456.879 1021.93 449.668 1027.62 447.108 1034.93 cv
444.737 1041.7 447.914 1044.96 452.717 1047.73 cv
461.831 1052.98 471.1 1057.96 480.341 1062.99 cv
496.696 1071.89 499.989 1086.1 489.043 1101.19 cv
486.524 1104.67 483.113 1107.59 481.065 1111.29 cv
474.841 1122.54 462.65 1128.95 451.395 1133.53 cv
435.826 1139.87 418.55 1138.93 403.081 1135.15 cv
398.496 1134.03 393.012 1132.51 393.012 1132.51 cv
358.709 1148.22 339.514 1177.73 322.022 1208.9 cv
318.81 1214.63 318.935 1220.39 321.168 1226.73 cv
327.803 1245.57 339.62 1263.21 354.435 1275.41 cv
356.267 1276.92 367.702 1285.61 377.043 1272.15 cv
380.12 1267.72 372.998 1257.43 371.87 1254.83 cv
367.15 1243.94 359.599 1233.66 360.486 1220.75 cv
361.166 1210.84 367.576 1206.62 373.79 1201.71 cv
376.593 1199.49 380.258 1200.58 383.142 1202.77 cv
385.935 1204.9 385.286 1207.77 384.682 1210.64 cv
383.6 1215.8 382.97 1221.09 381.524 1226.14 cv
377.999 1238.46 376.907 1249.96 384.248 1261.95 cv
389.698 1270.85 387.032 1279.75 378.11 1285.67 cv
371.472 1290.08 370.044 1295.75 369.348 1302.6 cv
365.956 1335.95 362.073 1408.69 362.464 1411.5 cv
363.6 1419.68 367.404 1422.3 377.954 1422.61 cv
386.525 1422.86 392.211 1419.8 393.128 1412.77 cv
396.528 1386.71 402.6 1361.08 404.879 1334.82 cv
405.862 1323.49 408.833 1312.26 411.745 1301.21 cv
413.57 1294.28 422.449 1288.06 428.883 1289.19 cv
436.203 1290.47 441.828 1295.15 443.814 1302 cv
444.214 1303.38 460.413 1392.22 462.152 1402.1 cv
463.133 1407.68 464.379 1413.52 470.53 1416.16 cv
486.158 1422.85 497.186 1415.8 497.03 1399.13 cv
496.873 1382.35 495.486 1365.65 493.858 1348.95 cv
490.795 1317.54 484.95 1223.02 484.591 1207.21 cv
cp
f
454.471 1121.5 mo
469.105 1113.94 474.622 1102.18 475.576 1086.89 cv
476.42 1073.37 466.721 1068.02 457.08 1062.55 cv
455.421 1061.6 453.887 1060.35 452.127 1059.69 cv
440.977 1055.54 435.112 1047.9 435.957 1035.71 cv
436.414 1029.1 438.141 1023.1 432.273 1022.46 cv
397.394 1018.62 376.143 1045.48 371.727 1059.43 cv
368.3 1070.26 368.092 1086.6 373.332 1097.63 cv
387.4 1127.26 417.555 1137.78 454.471 1121.5 cv
cp
f
483.516 1075.93 mo
492.419 1075.93 485.377 1097.75 484.569 1091.56 cv
484.111 1088.06 483.516 1075.93 483.516 1075.93 cv
cp
375.356 1213.02 mo
375.356 1213.02 373.828 1230.93 372.2 1230.93 cv
366.246 1230.93 369.412 1213.02 375.356 1213.02 cv
cp
470.53 1416.16 mo
464.379 1413.52 463.133 1407.68 462.152 1402.1 cv
460.413 1392.22 444.214 1303.38 443.814 1302 cv
441.828 1295.15 436.203 1290.47 428.883 1289.19 cv
422.449 1288.06 413.57 1294.28 411.745 1301.21 cv
408.833 1312.26 405.862 1323.49 404.879 1334.82 cv
402.6 1361.08 396.528 1386.71 393.128 1412.77 cv
392.211 1419.8 386.525 1422.86 377.954 1422.61 cv
367.404 1422.3 363.6 1419.68 362.464 1411.5 cv
362.073 1408.69 365.956 1335.95 369.348 1302.6 cv
370.044 1295.75 371.472 1290.08 378.11 1285.67 cv
387.032 1279.75 389.698 1270.85 384.248 1261.95 cv
376.907 1249.96 377.999 1238.46 381.524 1226.14 cv
382.97 1221.09 383.6 1215.8 384.682 1210.64 cv
385.286 1207.77 385.935 1204.9 383.142 1202.77 cv
380.258 1200.58 376.593 1199.49 373.79 1201.71 cv
367.576 1206.62 361.166 1210.84 360.486 1220.75 cv
359.599 1233.66 367.15 1243.94 371.87 1254.83 cv
372.998 1257.43 380.12 1267.72 377.043 1272.15 cv
367.702 1285.61 356.267 1276.92 354.435 1275.41 cv
339.62 1263.21 327.803 1245.57 321.168 1226.73 cv
318.935 1220.39 318.81 1214.63 322.022 1208.9 cv
339.514 1177.73 358.709 1148.22 393.012 1132.51 cv
393.012 1132.51 398.496 1134.03 403.081 1135.15 cv
418.55 1138.93 435.826 1139.87 451.395 1133.53 cv
462.65 1128.95 474.841 1122.54 481.065 1111.29 cv
483.113 1107.59 486.524 1104.67 489.043 1101.19 cv
499.989 1086.1 496.696 1071.89 480.341 1062.99 cv
471.1 1057.96 461.831 1052.98 452.717 1047.73 cv
447.914 1044.96 444.737 1041.7 447.108 1034.93 cv
449.668 1027.62 456.879 1021.93 463.944 1023.41 cv
477.122 1026.17 507.907 1036.72 531.528 1067.9 cv
542.438 1082.3 537.609 1101.18 527.549 1115.86 cv
518.37 1129.25 509.569 1142.24 500.042 1155.38 cv
488.978 1170.64 484.145 1187.56 484.591 1207.21 cv
484.95 1223.02 490.795 1317.54 493.858 1348.95 cv
495.486 1365.65 496.873 1382.35 497.03 1399.13 cv
497.186 1415.8 486.158 1422.85 470.53 1416.16 cv
cp
373.332 1097.63 mo
368.092 1086.6 368.3 1070.26 371.727 1059.43 cv
376.143 1045.48 397.394 1018.62 432.273 1022.46 cv
438.141 1023.1 436.414 1029.1 435.957 1035.71 cv
435.112 1047.9 440.977 1055.54 452.127 1059.69 cv
453.887 1060.35 455.421 1061.6 457.08 1062.55 cv
466.721 1068.02 476.42 1073.37 475.576 1086.89 cv
474.622 1102.18 469.105 1113.94 454.471 1121.5 cv
417.555 1137.78 387.4 1127.26 373.332 1097.63 cv
cp
496.866 1256.46 mo
494.268 1236.86 494.557 1217.4 496.052 1197.79 cv
496.881 1186.94 498.654 1177.49 504.447 1168.39 cv
514.479 1152.63 524.565 1137.65 536.333 1123.15 cv
547.573 1109.31 551.456 1079.02 542.406 1065.88 cv
522.377 1036.79 497.633 1024.17 480.873 1018.31 cv
469.264 1014.25 457.246 1009.83 445.232 1017.65 cv
445.232 1017.65 431.397 1012.73 425.766 1012.48 cv
387.012 1010.83 327.068 1058.04 376.787 1119.51 cv
382.161 1126.15 386.61 1124.74 378.804 1128.62 cv
366.177 1134.9 355.983 1143.8 346.336 1154.07 cv
332.663 1168.64 324.539 1186.63 313.275 1202.59 cv
306.009 1212.89 307.358 1222.21 311.374 1232.2 cv
313.498 1237.48 332.602 1275.92 354.456 1288 cv
360.236 1291.2 361.875 1291.79 360.874 1298.09 cv
358.539 1312.78 358.268 1327.64 357.882 1342.45 cv
357.343 1363.07 354.114 1383.41 352.353 1403.9 cv
352.592 1411.4 349.78 1419.6 356.56 1425.62 cv
366.294 1434.26 378.31 1432.5 389.433 1430.63 cv
399.881 1428.87 403.026 1419.77 404.194 1410.13 cv
407.07 1386.38 409.741 1362.6 413.13 1338.92 cv
414.685 1328.06 417.621 1317.38 420.162 1306.67 cv
421.131 1302.58 424.233 1300.01 428.297 1299.54 cv
432.809 1299.02 433.409 1303.22 434.546 1306.17 cv
439.568 1319.17 448.955 1384.49 451.639 1403.43 cv
453.642 1417.56 460.893 1426.15 472.276 1427.82 cv
479.31 1428.84 486.639 1429.16 493.486 1425.99 cv
511.623 1417.58 505.664 1374.79 504.226 1358.07 cv
501.316 1324.23 501.334 1290.16 496.866 1256.46 cv
cp
0 0 0 rgb
f
279.2 1184.2 mo
280.068 1183.07 280.986 1181.97 281.794 1180.8 cv
283.23 1178.71 284.171 1176.51 281.502 1174.7 cv
279.03 1173.03 277.065 1174.23 275.431 1176.23 cv
264.8 1189.29 258.378 1203.87 261.205 1221.01 cv
262.488 1228.78 264.322 1236.97 275.216 1241.87 cv
266.423 1220.15 265.951 1201.51 279.2 1184.2 cv
cp
f
523.29 1427.48 mo
522.665 1431.29 525.787 1431.99 528.642 1432.52 cv
540.414 1434.72 552.277 1433.77 564.111 1433.38 cv
565.977 1433.32 567.501 1431.98 568.445 1427.98 cv
554.982 1426.32 541.641 1424.55 528.265 1423.13 cv
525.781 1422.87 523.683 1425.08 523.29 1427.48 cv
cp
f
274.363 1421.34 mo
274.271 1422.54 274.995 1424.45 275.942 1424.97 cv
277.959 1426.07 280.321 1426.9 282.608 1427.11 cv
295.361 1428.25 308.146 1429.45 320.852 1424.27 cv
307.166 1417.78 292.03 1420.97 277.888 1417.65 cv
275.862 1417.17 274.508 1419.43 274.363 1421.34 cv
cp
f
2483.75 1130.71 mo
2507.17 1104.26 2505.59 1059.91 2468.57 1046.65 cv
2429.15 1034.77 2392.39 1053.3 2392.39 1102 cv
2393.89 1119.41 2407.36 1134.33 2422.84 1138.71 cv
2432.81 1141.53 2462.55 1149.83 2483.75 1130.71 cv
cp
1 1 1 rgb
f
2495.8 1227.49 mo
2496.47 1226.97 2497.44 1226.6 2497.75 1225.92 cv
2498.6 1224.1 2498.69 1221.94 2497.14 1220.62 cv
2495.28 1219.04 2494.81 1221.04 2494.72 1222.31 cv
2494.58 1224.08 2493.92 1226.09 2495.8 1227.49 cv
cp
f
2446.98 1313.44 mo
2448.57 1316.28 2449.42 1319.65 2450.13 1322.88 cv
2455.82 1348.55 2463.24 1373.84 2465.9 1400.19 cv
2467.14 1412.51 2470.2 1424.66 2472.38 1436.89 cv
2473.79 1444.82 2478.49 1448.45 2485.34 1447.9 cv
2498.28 1448.63 2499.94 1441.19 2500.46 1428.88 cv
2501.91 1394.27 2493.97 1326.89 2490.5 1292.64 cv
2490.5 1292.64 2493.27 1290.8 2481.29 1280.12 cv
2474.33 1275.09 2475.95 1258.69 2484.48 1248.13 cv
2488.6 1242.85 2488.76 1240.33 2488.76 1240.33 cv
2487.68 1235.24 2485.67 1208.86 2489.91 1207.54 cv
2494.02 1206.27 2497.31 1208.26 2500.17 1211.11 cv
2508.37 1219.28 2509.36 1227.08 2503.03 1236.93 cv
2500.71 1240.53 2497.71 1243.7 2495.04 1247.08 cv
2490.49 1252.85 2480.08 1267.76 2487.76 1276.78 cv
2501.51 1291.5 2529.25 1254.83 2538.52 1240.73 cv
2542.85 1234.14 2542.51 1228.1 2538.24 1220.9 cv
2527.22 1202.27 2514.36 1185.04 2500.67 1168.4 cv
2490 1155.42 2476.23 1148.84 2459.11 1149.95 cv
2448.22 1150.65 2437.19 1150.61 2426.4 1150.67 cv
2408.18 1150.75 2395.19 1158.02 2384.33 1171.19 cv
2378.49 1178.27 2371.94 1184.52 2364.66 1190.02 cv
2346.15 1204 2340.19 1203.65 2325.12 1186.21 cv
2318.05 1178.04 2296.73 1152.16 2283.99 1169.41 cv
2274.21 1180.92 2310.19 1217.75 2327.33 1230.5 cv
2333.53 1235.11 2340.56 1239.74 2348.35 1237.98 cv
2362.31 1234.83 2385.73 1210.39 2389.4 1211.45 cv
2393.23 1212.56 2394.37 1215.54 2394.01 1219.3 cv
2393.77 1221.68 2393.87 1224.11 2393.46 1226.46 cv
2390.41 1243.88 2371.11 1377.28 2363.57 1426.45 cv
2362.33 1434.52 2366.31 1440.72 2372.35 1442.58 cv
2384.14 1446.21 2394.93 1439.9 2398.29 1427.78 cv
2406.24 1398.99 2415.82 1321.11 2420.63 1312.8 cv
2427.2 1301.45 2440.46 1301.86 2446.98 1313.44 cv
cp
f
2494.72 1222.31 mo
2494.81 1221.04 2495.28 1219.04 2497.14 1220.62 cv
2498.69 1221.94 2498.6 1224.1 2497.75 1225.92 cv
2497.44 1226.6 2496.47 1226.97 2495.8 1227.49 cv
2493.92 1226.09 2494.58 1224.08 2494.72 1222.31 cv
cp
2420.63 1312.8 mo
2415.82 1321.11 2406.24 1398.99 2398.29 1427.78 cv
2394.93 1439.9 2384.14 1446.21 2372.35 1442.58 cv
2366.31 1440.72 2362.33 1434.52 2363.57 1426.45 cv
2371.11 1377.28 2390.41 1243.88 2393.46 1226.46 cv
2393.87 1224.11 2393.77 1221.68 2394.01 1219.3 cv
2394.37 1215.54 2393.23 1212.56 2389.4 1211.45 cv
2385.73 1210.39 2362.31 1234.83 2348.35 1237.98 cv
2340.56 1239.74 2333.53 1235.11 2327.33 1230.5 cv
2310.19 1217.75 2274.21 1180.92 2283.99 1169.41 cv
2296.73 1152.16 2318.05 1178.04 2325.12 1186.21 cv
2340.19 1203.65 2346.15 1204 2364.66 1190.02 cv
2371.94 1184.52 2378.49 1178.27 2384.33 1171.19 cv
2395.19 1158.02 2408.18 1150.75 2426.4 1150.67 cv
2437.19 1150.61 2448.22 1150.65 2459.11 1149.95 cv
2476.23 1148.84 2490 1155.42 2500.67 1168.4 cv
2514.36 1185.04 2527.22 1202.27 2538.24 1220.9 cv
2542.51 1228.1 2542.85 1234.14 2538.52 1240.73 cv
2529.25 1254.83 2501.51 1291.5 2487.76 1276.78 cv
2480.08 1267.76 2490.49 1252.85 2495.04 1247.08 cv
2497.71 1243.7 2500.71 1240.53 2503.03 1236.93 cv
2509.36 1227.08 2508.37 1219.28 2500.17 1211.11 cv
2497.31 1208.26 2494.02 1206.27 2489.91 1207.54 cv
2485.67 1208.86 2487.68 1235.24 2488.76 1240.33 cv
2488.76 1240.33 2488.6 1242.85 2484.48 1248.13 cv
2475.95 1258.69 2474.33 1275.09 2481.29 1280.12 cv
2493.27 1290.8 2490.5 1292.64 2490.5 1292.64 cv
2493.97 1326.89 2501.91 1394.27 2500.46 1428.88 cv
2499.94 1441.19 2498.28 1448.63 2485.34 1447.9 cv
2478.49 1448.45 2473.79 1444.82 2472.38 1436.89 cv
2470.2 1424.66 2467.14 1412.51 2465.9 1400.19 cv
2463.24 1373.84 2455.82 1348.55 2450.13 1322.88 cv
2449.42 1319.65 2448.57 1316.28 2446.98 1313.44 cv
2440.46 1301.86 2427.2 1301.45 2420.63 1312.8 cv
cp
2392.39 1102 mo
2392.39 1053.3 2429.15 1034.77 2468.57 1046.65 cv
2505.59 1059.91 2507.17 1104.26 2483.75 1130.71 cv
2462.55 1149.83 2432.81 1141.53 2422.84 1138.71 cv
2407.36 1134.33 2393.89 1119.41 2392.39 1102 cv
cp
2440.47 1319.39 mo
2442.84 1324.57 2444.24 1330.23 2445.79 1335.76 cv
2454.85 1368.17 2457.53 1401.7 2463.04 1434.73 cv
2466.11 1453.12 2471.93 1458.57 2490.45 1456.23 cv
2502.39 1455.17 2509.4 1442.66 2509.42 1435.7 cv
2509.59 1392.01 2505.91 1355.13 2499.74 1312.04 cv
2497.69 1297.74 2502.26 1289.86 2502.26 1289.86 cv
2517.6 1280.66 2538.44 1258.35 2547.88 1243.32 cv
2553.61 1234.2 2554.86 1225.15 2546.31 1215.86 cv
2539.57 1208.54 2534.89 1199.38 2528.95 1191.29 cv
2516.29 1174.03 2505.27 1155.19 2485.23 1144.84 cv
2484.73 1144.58 2484.83 1143.14 2484.61 1142.03 cv
2532.86 1098.94 2505.52 1043.16 2459.95 1035.14 cv
2455.25 1034.3 2419.05 1029.11 2399.22 1051.7 cv
2361.76 1099.86 2390.29 1131.57 2407.86 1142.08 cv
2399.65 1144.18 2395.5 1147.66 2390.36 1152.39 cv
2382.29 1159.82 2375.85 1169.07 2367.51 1176.12 cv
2347.7 1192.89 2348.53 1195.21 2327.48 1176.52 cv
2321.02 1170.79 2314.66 1164.94 2307.57 1160.12 cv
2298.73 1154.11 2287.84 1153.78 2280.1 1161.9 cv
2274.08 1168.23 2270.55 1178.58 2277.11 1188.2 cv
2291.18 1208.81 2307.47 1227.48 2328.09 1242 cv
2337.55 1248.66 2347.25 1249.17 2358.06 1245.35 cv
2365.73 1242.63 2376.48 1233.46 2383.48 1230.41 cv
2381.6 1237.79 2378.19 1267.36 2375.82 1279.57 cv
2366.19 1329.37 2362.53 1380.17 2353.22 1430.01 cv
2351.92 1436.92 2357.58 1446.56 2367.66 1449.64 cv
2390.84 1456.1 2400.11 1449.53 2406.02 1430.59 cv
2407.87 1424.64 2409.32 1418.68 2410.5 1412.54 cv
2414.81 1389.95 2423.27 1326.45 2428.38 1318.72 cv
2432.62 1312.29 2437.31 1312.52 2440.47 1319.39 cv
cp
0 0 0 rgb
f
2571.06 1191.08 mo
2583.52 1206.59 2584.14 1223.01 2575.68 1240.41 cv
2574.69 1242.44 2574.28 1244.76 2572.69 1249.84 cv
2580.09 1244.38 2581.96 1238.84 2584.15 1233.7 cv
2591.2 1217.13 2590.11 1201.26 2578.93 1186.65 cv
2576.69 1183.71 2574.15 1179.19 2569.97 1181.6 cv
2565.01 1184.46 2568.99 1188.5 2571.06 1191.08 cv
cp
f
2328.45 1444.72 mo
2317.06 1441.11 2305.1 1441.72 2293.4 1440.44 cv
2290.85 1440.16 2289.17 1442.39 2289.32 1445.09 cv
2289.45 1447.21 2291.06 1448.4 2293.09 1448.65 cv
2305.73 1450.2 2318.39 1451.54 2331.46 1450.5 cv
2331.45 1446.95 2330.11 1445.25 2328.45 1444.72 cv
cp
f
2528.77 1440.06 mo
2526.15 1439.89 2522.47 1439.41 2521.9 1443.18 cv
2521.31 1447.1 2524.99 1447.45 2527.6 1447.81 cv
2531.8 1448.38 2536.12 1448.87 2540.32 1448.53 cv
2550.59 1447.7 2560.75 1445.71 2571.22 1446.86 cv
2571.11 1445.64 2571 1444.42 2570.9 1443.21 cv
2556.86 1442.13 2542.82 1440.97 2528.77 1440.06 cv
cp
f
1414.83 1055.06 mo
1425.02 1061.04 1436.22 1062.76 1447.73 1063.7 cv
1468.68 1065.42 1495.27 1049.99 1495.21 1018.51 cv
1492.24 978.779 1484.09 978.204 1464.12 967.738 cv
1437.1 959.877 1415.72 966.877 1402.67 982.003 cv
1383.01 1004.79 1388.87 1039.82 1414.83 1055.06 cv
cp
1 1 1 rgb
f
1505.71 1080.74 mo
1493.8 1069.83 1479.57 1069.26 1464.44 1070.63 cv
1449.83 1071.96 1435.83 1072.5 1421.97 1067.88 cv
1406.2 1062.61 1392.79 1066.78 1380.79 1077.26 cv
1372.5 1084.51 1364.24 1091.79 1356.25 1099.36 cv
1343.74 1111.21 1331.62 1123.46 1320.78 1136.89 cv
1316.06 1142.73 1312.81 1148.99 1317.23 1156.58 cv
1330.53 1179.42 1343.02 1200.52 1363.98 1217.3 cv
1372.81 1224.36 1380.2 1225.98 1387.52 1218.76 cv
1400.47 1205.98 1371.56 1179.55 1365.19 1168.2 cv
1356.39 1152.53 1362.57 1138.21 1379.83 1134.63 cv
1385.43 1133.46 1388.25 1135.25 1388.89 1140.49 cv
1389.29 1143.77 1387.81 1177.47 1387.12 1180.68 cv
1387.12 1180.68 1386.88 1184.47 1397.38 1199.81 cv
1402.98 1207.99 1401.22 1218.14 1393.32 1225.61 cv
1389.05 1229.64 1390.09 1233.36 1389.89 1238.86 cv
1388.44 1277.14 1386.73 1315.42 1385.1 1353.69 cv
1385.03 1353.69 1384.96 1353.69 1384.89 1353.69 cv
1384.89 1358.95 1383.83 1382.35 1400.09 1382.37 cv
1412.13 1383.29 1420.15 1380.05 1420.84 1366.04 cv
1420.89 1345.58 1424.64 1276.75 1428.61 1254.51 cv
1430.41 1244.39 1437.01 1237.04 1445.53 1235.86 cv
1453.52 1234.75 1458.73 1239.46 1463.17 1251.48 cv
1467.53 1263.28 1468.9 1275.65 1470.2 1288.01 cv
1472.52 1309.92 1474.54 1331.87 1476.98 1353.77 cv
1477.71 1360.39 1478.83 1367.11 1482.18 1373.06 cv
1486.33 1380.44 1493.43 1382.45 1503.09 1379.85 cv
1523.97 1377.73 1517.27 1349.87 1507.63 1243.87 cv
1507.07 1235.29 1506.66 1226.82 1499.11 1220.39 cv
1490.86 1199.44 1503.1 1187.2 1503.1 1187.2 cv
1501.08 1178.83 1492.28 1130.59 1500.78 1130.89 cv
1512.33 1130.13 1532.94 1148.04 1533.32 1159.52 cv
1533.51 1165.11 1530.35 1169.61 1527.42 1173.93 cv
1523.66 1179.47 1506.45 1198.37 1505.37 1204.77 cv
1504.62 1220.7 1522.49 1218.83 1525.24 1217.01 cv
1543.91 1204.68 1555.51 1184.87 1565.3 1165.37 cv
1569.58 1156.87 1567.54 1149.71 1561.82 1142.89 cv
1544.57 1122.32 1525.52 1098.87 1505.71 1080.74 cv
cp
f
1378.1 1168.5 mo
1379.83 1160.43 1381.68 1152.81 1379.92 1144.7 cv
1367.38 1149.65 1366.66 1158.05 1378.1 1168.5 cv
cp
f
1506.47 1142.98 mo
1506.47 1154.15 1508.31 1165.48 1509.61 1180.68 cv
1528.4 1164.14 1528.25 1148.24 1506.47 1142.98 cv
cp
f
1378.1 1168.5 mo
1366.66 1158.05 1367.38 1149.65 1379.92 1144.7 cv
1381.68 1152.81 1379.83 1160.43 1378.1 1168.5 cv
cp
1506.47 1142.98 mo
1528.25 1148.24 1528.4 1164.14 1509.61 1180.68 cv
1508.31 1165.48 1506.47 1154.15 1506.47 1142.98 cv
cp
1565.3 1165.37 mo
1555.51 1184.87 1543.91 1204.68 1525.24 1217.01 cv
1522.49 1218.83 1504.62 1220.7 1505.37 1204.77 cv
1506.45 1198.37 1523.66 1179.47 1527.42 1173.93 cv
1530.35 1169.61 1533.51 1165.11 1533.32 1159.52 cv
1532.94 1148.04 1512.33 1130.13 1500.78 1130.89 cv
1492.28 1130.59 1501.08 1178.83 1503.1 1187.2 cv
1503.1 1187.2 1490.86 1199.44 1499.11 1220.39 cv
1506.66 1226.82 1507.07 1235.29 1507.63 1243.87 cv
1517.27 1349.87 1523.97 1377.73 1503.09 1379.85 cv
1493.43 1382.45 1486.33 1380.44 1482.18 1373.06 cv
1478.83 1367.11 1477.71 1360.39 1476.98 1353.77 cv
1474.54 1331.87 1472.52 1309.92 1470.2 1288.01 cv
1468.9 1275.65 1467.53 1263.28 1463.17 1251.48 cv
1458.73 1239.46 1453.52 1234.75 1445.53 1235.86 cv
1437.01 1237.04 1430.41 1244.39 1428.61 1254.51 cv
1424.64 1276.75 1420.89 1345.58 1420.84 1366.04 cv
1420.15 1380.05 1412.13 1383.29 1400.09 1382.37 cv
1383.83 1382.35 1384.89 1358.95 1384.89 1353.69 cv
1384.96 1353.69 1385.03 1353.69 1385.1 1353.69 cv
1386.73 1315.42 1388.44 1277.14 1389.89 1238.86 cv
1390.09 1233.36 1389.05 1229.64 1393.32 1225.61 cv
1401.22 1218.14 1402.98 1207.99 1397.38 1199.81 cv
1386.88 1184.47 1387.12 1180.68 1387.12 1180.68 cv
1387.81 1177.47 1389.29 1143.77 1388.89 1140.49 cv
1388.25 1135.25 1385.43 1133.46 1379.83 1134.63 cv
1362.57 1138.21 1356.39 1152.53 1365.19 1168.2 cv
1371.56 1179.55 1400.47 1205.98 1387.52 1218.76 cv
1380.2 1225.98 1372.81 1224.36 1363.98 1217.3 cv
1343.02 1200.52 1330.53 1179.42 1317.23 1156.58 cv
1312.81 1148.99 1316.06 1142.73 1320.78 1136.89 cv
1331.62 1123.46 1343.74 1111.21 1356.25 1099.36 cv
1364.24 1091.79 1372.5 1084.51 1380.79 1077.26 cv
1392.79 1066.78 1406.2 1062.61 1421.97 1067.88 cv
1435.83 1072.5 1449.83 1071.96 1464.44 1070.63 cv
1479.57 1069.26 1493.8 1069.83 1505.71 1080.74 cv
1525.52 1098.87 1544.57 1122.32 1561.82 1142.89 cv
1567.54 1149.71 1569.58 1156.87 1565.3 1165.37 cv
cp
1402.67 982.003 mo
1415.72 966.877 1437.1 959.877 1464.12 967.738 cv
1484.09 978.204 1492.24 978.779 1495.21 1018.51 cv
1495.27 1049.99 1468.68 1065.42 1447.73 1063.7 cv
1436.22 1062.76 1425.02 1061.04 1414.83 1055.06 cv
1388.87 1039.82 1383.01 1004.79 1402.67 982.003 cv
cp
1485.55 1060.15 mo
1508.78 1034.39 1507.85 997.094 1493.61 977.837 cv
1476.72 952.332 1425.91 951.477 1411.87 962.015 cv
1389.16 979.056 1378.48 993.333 1381.96 1021.11 cv
1383.64 1034.52 1389.38 1045.61 1399.41 1056.75 cv
1388.32 1062.3 1378.54 1066.13 1370.91 1073.63 cv
1361.36 1083.01 1350.84 1091.43 1341.71 1101.17 cv
1330.3 1113.34 1316.89 1123.67 1308.08 1138.31 cv
1303.32 1146.21 1303.1 1153.33 1307.74 1161.15 cv
1321.99 1185.14 1338.86 1207.03 1359.23 1226.17 cv
1362.79 1229.52 1366.65 1232.65 1371.6 1232.89 cv
1380.23 1233.32 1381.42 1238.1 1380.54 1245.38 cv
1379.57 1253.44 1379.33 1261.6 1378.95 1269.72 cv
1377.39 1302.7 1376.03 1335.69 1374.32 1368.66 cv
1373.62 1382.13 1387.94 1389.41 1401.07 1391.37 cv
1429.5 1394.51 1429.92 1369.17 1429.81 1364.94 cv
1429.27 1342.88 1433.56 1321.09 1433.26 1299.02 cv
1433.1 1287.58 1434.79 1276.12 1435.62 1264.67 cv
1436.01 1259.3 1437.58 1254.2 1440.68 1249.91 cv
1444.86 1244.16 1451.08 1244.66 1454.3 1251.12 cv
1456.4 1255.34 1457.73 1260.06 1458.69 1264.71 cv
1462.27 1282.1 1462.77 1299.85 1464.47 1317.46 cv
1466.13 1334.6 1467.42 1351.8 1469.81 1368.84 cv
1471.66 1382.07 1479.04 1389.3 1491.11 1390.48 cv
1499.15 1391.27 1529.04 1392.78 1526.04 1355.74 cv
1523.28 1307.43 1514.87 1228.2 1514.87 1228.2 cv
1515.71 1228.08 1523.28 1229.15 1531.13 1223.5 cv
1550.08 1207.55 1564.77 1188.49 1574.49 1165.55 cv
1579.17 1154.52 1577.86 1144.25 1569.79 1136.29 cv
1542.8 1109.65 1520.61 1077.65 1485.55 1060.15 cv
cp
0 0 0 rgb
f
1599.36 1102.73 mo
1596.03 1104.78 1597.71 1107.58 1599.4 1110.04 cv
1611.22 1127.24 1608.85 1145.14 1601.98 1163.25 cv
1600.84 1166.26 1598.51 1169.07 1601.12 1173.99 cv
1608.26 1162.85 1613.94 1152.04 1614.94 1139.49 cv
1615.91 1127.37 1613.85 1115.68 1606.51 1105.49 cv
1604.77 1103.07 1602.38 1100.87 1599.36 1102.73 cv
cp
f
1296.08 1389.09 mo
1295.9 1391.97 1299.64 1393.06 1302.62 1393.42 cv
1318.02 1395.31 1333.35 1394.95 1351.84 1392.53 cv
1334.19 1387.07 1318.85 1387.78 1304 1385.35 cv
1300.75 1384.81 1296.36 1384.79 1296.08 1389.09 cv
cp
f
1539.26 1393.91 mo
1551.39 1399.38 1563.03 1396.07 1574.35 1395.27 cv
1561.36 1388.93 1548.79 1388.54 1539.26 1393.91 cv
cp
f
1612.05 517.2 mo
1612.04 517.493 1612.03 517.785 1612.02 518.078 cv
1612.03 517.785 1612.04 517.493 1612.05 517.2 cv
cp
1 .807843 .262745 rgb
f
1555.16 400.891 mo
1555.83 401.35 1556.5 401.81 1557.15 402.276 cv
1556.5 401.81 1555.83 401.35 1555.16 400.891 cv
cp
f
1548.04 396.284 mo
1548.75 396.715 1549.45 397.155 1550.14 397.593 cv
1549.45 397.155 1548.75 396.715 1548.04 396.284 cv
cp
f
1333.85 661.063 mo
1333.71 660.796 1333.58 660.531 1333.44 660.264 cv
1333.58 660.53 1333.71 660.796 1333.85 661.063 cv
cp
f
1331.71 656.918 mo
1331.6 656.708 1331.5 656.497 1331.38 656.287 cv
1331.5 656.497 1331.6 656.708 1331.71 656.918 cv
cp
f
1558.37 403.16 mo
1559.59 404.051 1560.79 404.953 1561.96 405.866 cv
1560.79 404.953 1559.59 404.051 1558.37 403.16 cv
cp
f
1576.02 418.464 mo
1576.55 419.011 1577.07 419.559 1577.58 420.111 cv
1577.07 419.559 1576.55 419.011 1576.02 418.464 cv
cp
f
1573.34 415.768 mo
1573.9 416.309 1574.44 416.854 1574.98 417.399 cv
1574.44 416.854 1573.9 416.309 1573.34 415.768 cv
cp
f
1335.91 665.18 mo
1335.89 665.137 1335.87 665.093 1335.85 665.05 cv
1335.87 665.093 1335.89 665.137 1335.91 665.18 cv
cp
f
1569.15 411.863 mo
1570.26 412.85 1571.33 413.848 1572.39 414.856 cv
1571.33 413.848 1570.26 412.85 1569.15 411.863 cv
cp
f
1563.21 406.835 mo
1563.83 407.332 1564.44 407.833 1565.05 408.336 cv
1564.44 407.833 1563.83 407.332 1563.21 406.835 cv
cp
f
1566.28 409.36 mo
1566.88 409.868 1567.48 410.376 1568.06 410.89 cv
1567.48 410.376 1566.88 409.868 1566.28 409.36 cv
cp
f
1608.36 546.41 mo
1608.31 546.669 1608.25 546.93 1608.19 547.188 cv
1608.25 546.93 1608.31 546.669 1608.36 546.41 cv
cp
f
1609 543.402 mo
1608.94 543.725 1608.87 544.046 1608.81 544.367 cv
1608.87 544.046 1608.94 543.725 1609 543.402 cv
cp
f
1578.54 421.159 mo
1579.7 422.431 1580.83 423.715 1581.92 425.013 cv
1580.83 423.715 1579.7 422.431 1578.54 421.159 cv
cp
f
1610.17 536.947 mo
1610.13 537.187 1610.09 537.429 1610.05 537.668 cv
1610.09 537.429 1610.13 537.187 1610.17 536.947 cv
cp
f
1610.65 533.669 mo
1610.6 534.024 1610.55 534.378 1610.5 534.73 cv
1610.55 534.377 1610.6 534.024 1610.65 533.669 cv
cp
f
1609.56 540.52 mo
1609.51 540.788 1609.46 541.053 1609.41 541.32 cv
1609.46 541.053 1609.51 540.788 1609.56 540.52 cv
cp
f
1606.84 552.625 mo
1606.76 552.911 1606.68 553.195 1606.61 553.479 cv
1606.68 553.195 1606.76 552.911 1606.84 552.625 cv
cp
f
1340 673.86 mo
1339.89 673.611 1339.78 673.362 1339.66 673.113 cv
1339.78 673.362 1339.89 673.612 1340 673.86 cv
cp
f
1342.03 678.52 mo
1341.91 678.232 1341.79 677.946 1341.67 677.657 cv
1341.79 677.946 1341.91 678.232 1342.03 678.52 cv
cp
f
1606.07 555.374 mo
1605.99 555.638 1605.92 555.902 1605.84 556.164 cv
1605.92 555.902 1605.99 555.638 1606.07 555.374 cv
cp
f
1338.19 669.918 mo
1338.03 669.576 1337.86 669.236 1337.7 668.894 cv
1337.86 669.235 1338.03 669.576 1338.19 669.918 cv
cp
f
1343.67 682.539 mo
1343.53 682.191 1343.39 681.84 1343.25 681.489 cv
1343.39 681.84 1343.53 682.191 1343.67 682.539 cv
cp
f
1607.54 549.918 mo
1607.5 550.081 1607.46 550.241 1607.42 550.404 cv
1607.46 550.241 1607.5 550.081 1607.54 549.918 cv
cp
f
1608.77 480.272 mo
1608.95 481.137 1609.13 482.001 1609.31 482.865 cv
1609.13 482.001 1608.95 481.137 1608.77 480.272 cv
cp
f
1609.64 484.585 mo
1609.74 485.13 1609.84 485.675 1609.93 486.22 cv
1609.84 485.675 1609.74 485.13 1609.64 484.585 cv
cp
f
1607.96 476.793 mo
1608.1 477.359 1608.24 477.924 1608.37 478.49 cv
1608.24 477.924 1608.1 477.359 1607.96 476.793 cv
cp
f
1582.14 425.264 mo
1582.62 425.843 1583.09 426.427 1583.56 427.01 cv
1583.09 426.427 1582.62 425.843 1582.14 425.264 cv
cp
f
1607.12 473.551 mo
1607.28 474.126 1607.43 474.702 1607.58 475.279 cv
1607.43 474.702 1607.28 474.126 1607.12 473.551 cv
cp
f
1610.72 491.272 mo
1610.81 491.938 1610.9 492.603 1610.98 493.267 cv
1610.9 492.602 1610.81 491.938 1610.72 491.272 cv
cp
f
1610.21 487.846 mo
1610.29 488.382 1610.38 488.917 1610.46 489.452 cv
1610.38 488.917 1610.29 488.382 1610.21 487.846 cv
cp
f
1611.69 500.338 mo
1611.65 499.842 1611.61 499.345 1611.57 498.847 cv
1611.61 499.345 1611.65 499.842 1611.69 500.338 cv
cp
f
1352.47 443.03 mo
1324.95 479.299 1311.97 524.085 1308.01 515.446 cv
1287.95 471.73 1369.16 366.452 1417.62 382.088 cv
1436.87 388.299 1378.11 409.25 1352.47 443.03 cv
cp
1428.94 673.226 mo
1450.62 668.877 1464.18 664.48 1483.61 653.322 cv
1495.32 646.6 1505.72 636.705 1514.9 627.038 cv
1525.12 616.268 1533.35 603.038 1540.3 590.01 cv
1545.62 580.022 1549.15 569.275 1552.79 558.592 cv
1558.57 541.593 1564.95 524.402 1567.84 506.594 cv
1570.66 489.281 1572.07 470.69 1568.91 453.312 cv
1566.74 441.414 1564.61 429.315 1559.49 418.286 cv
1556.03 410.831 1552.17 403.459 1548.04 396.283 cv
1527.25 383.664 1500.45 374.094 1466.27 369.312 cv
1306.61 350.654 1280.2 485.327 1290.52 541.572 cv
1296.63 574.868 1304.66 608.132 1321.62 638.378 cv
1324.06 642.72 1326.67 647.428 1329.28 652.313 cv
1347.32 662.939 1366.66 671.274 1387.9 673.364 cv
1401.51 674.704 1415.44 675.933 1428.94 673.226 cv
cp
f
1604.75 465.773 mo
1604.95 466.362 1605.15 466.95 1605.34 467.54 cv
1605.15 466.95 1604.95 466.362 1604.75 465.773 cv
cp
f
1611.26 495.603 mo
1611.31 496.095 1611.36 496.587 1611.41 497.078 cv
1611.36 496.587 1611.31 496.095 1611.26 495.603 cv
cp
f
1605.93 469.431 mo
1606.2 470.305 1606.45 471.18 1606.7 472.055 cv
1606.45 471.18 1606.2 470.305 1605.93 469.431 cv
cp
f
1588.39 433.416 mo
1589.24 434.631 1590.07 435.855 1590.87 437.087 cv
1590.07 435.855 1589.24 434.631 1588.39 433.416 cv
cp
f
1593.44 441.197 mo
1593.8 441.8 1594.16 442.403 1594.51 443.009 cv
1594.16 442.403 1593.8 441.8 1593.44 441.197 cv
cp
f
1591.6 438.21 mo
1591.98 438.807 1592.35 439.406 1592.72 440.007 cv
1592.35 439.406 1591.98 438.807 1591.6 438.21 cv
cp
f
1584.44 428.113 mo
1584.89 428.688 1585.34 429.265 1585.78 429.844 cv
1585.34 429.265 1584.89 428.688 1584.44 428.113 cv
cp
f
1586.62 430.97 mo
1587.06 431.56 1587.49 432.148 1587.92 432.742 cv
1587.49 432.148 1587.06 431.56 1586.62 430.97 cv
cp
f
1599.09 451.766 mo
1599.38 452.37 1599.66 452.974 1599.94 453.58 cv
1599.66 452.974 1599.38 452.37 1599.09 451.766 cv
cp
f
1600.51 454.865 mo
1600.99 455.958 1601.46 457.055 1601.91 458.155 cv
1601.46 457.055 1600.99 455.958 1600.51 454.865 cv
cp
f
1602.42 459.412 mo
1602.66 460.011 1602.89 460.612 1603.11 461.213 cv
1602.89 460.612 1602.66 460.011 1602.42 459.412 cv
cp
f
1603.63 462.58 mo
1603.85 463.176 1604.06 463.771 1604.27 464.368 cv
1604.06 463.771 1603.85 463.176 1603.63 462.58 cv
cp
f
1595.13 444.117 mo
1595.77 445.246 1596.38 446.38 1596.97 447.519 cv
1596.38 446.38 1595.77 445.246 1595.13 444.117 cv
cp
f
1597.57 448.672 mo
1597.88 449.279 1598.18 449.887 1598.48 450.496 cv
1598.18 449.887 1597.88 449.279 1597.57 448.672 cv
cp
f
1551.67 398.562 mo
1552.36 399.005 1553.04 399.453 1553.71 399.903 cv
1553.04 399.453 1552.36 399.005 1551.67 398.562 cv
cp
f
1612.12 509.703 mo
1612.12 510.157 1612.13 510.609 1612.13 511.06 cv
1612.13 510.609 1612.12 510.157 1612.12 509.703 cv
cp
f
1612.13 512.985 mo
1612.13 513.401 1612.13 513.816 1612.12 514.23 cv
1612.13 513.816 1612.13 513.401 1612.13 512.985 cv
cp
f
1611.92 520.327 mo
1611.9 520.727 1611.87 521.126 1611.85 521.525 cv
1611.87 521.126 1611.9 520.727 1611.92 520.327 cv
cp
f
1612.04 506.497 mo
1612.05 506.919 1612.06 507.34 1612.07 507.762 cv
1612.06 507.34 1612.05 506.919 1612.04 506.497 cv
cp
f
1611.82 502.214 mo
1611.85 502.655 1611.88 503.096 1611.91 503.537 cv
1611.88 503.096 1611.85 502.655 1611.82 502.214 cv
cp
f
1611.72 523.51 mo
1611.69 523.89 1611.66 524.271 1611.63 524.649 cv
1611.66 524.27 1611.69 523.89 1611.72 523.51 cv
cp
f
1611.04 530.629 mo
1611 530.969 1610.96 531.306 1610.92 531.645 cv
1610.96 531.306 1611 530.969 1611.04 530.629 cv
cp
f
1611.41 527.124 mo
1611.4 527.319 1611.38 527.516 1611.36 527.71 cv
1611.38 527.516 1611.4 527.319 1611.41 527.124 cv
cp
f
1510.29 739.691 mo
1510.81 739.69 1511.34 739.709 1511.88 739.739 cv
1511.34 739.709 1510.81 739.69 1510.29 739.691 cv
cp
.658824 .792157 .8 rgb
f
1505.17 740.102 mo
1505.85 739.994 1506.55 739.908 1507.24 739.838 cv
1506.55 739.908 1505.85 739.994 1505.17 740.102 cv
cp
f
1507.94 739.785 mo
1508.45 739.744 1508.97 739.716 1509.49 739.701 cv
1508.97 739.716 1508.45 739.744 1507.94 739.785 cv
cp
f
1502.92 740.522 mo
1503.63 740.371 1504.35 740.231 1505.08 740.115 cv
1504.35 740.231 1503.63 740.371 1502.92 740.522 cv
cp
f
1514.97 740.069 mo
1514.17 739.933 1513.39 739.844 1512.61 739.78 cv
1513.39 739.844 1514.17 739.933 1514.97 740.069 cv
cp
f
1406.81 801.819 mo
1425.35 805.428 1449.35 801.319 1464.66 789.699 cv
1479.88 778.152 1492.8 761.756 1495.92 742.376 cv
1496.58 742.18 1497.24 741.987 1497.91 741.797 cv
1493.6 743.03 1489.4 744.447 1485.06 745.005 cv
1450.31 749.46 1416.18 746.983 1382.8 736.483 cv
1373.07 733.422 1366.59 737.004 1369.92 745.045 cv
1376.07 759.906 1378.72 775.72 1382.42 791.097 cv
1383.02 793.616 1385.78 798.955 1387.34 801.131 cv
1386.58 800.072 1387.78 795.973 1387.08 794.835 cv
1393.3 798.074 1399.94 800.481 1406.81 801.819 cv
cp
f
1498.55 741.618 mo
1499.04 741.481 1499.53 741.347 1500.02 741.217 cv
1499.53 741.347 1499.04 741.481 1498.55 741.618 cv
cp
f
1500.76 741.027 mo
1501.25 740.902 1501.75 740.786 1502.25 740.673 cv
1501.75 740.786 1501.25 740.902 1500.76 741.027 cv
cp
f
1611.41 497.078 mo
1611.36 496.587 1611.31 496.095 1611.26 495.603 cv
1611.17 494.825 1611.08 494.046 1610.98 493.267 cv
1610.9 492.603 1610.81 491.938 1610.72 491.272 cv
1610.64 490.666 1610.55 490.059 1610.46 489.452 cv
1610.38 488.917 1610.29 488.382 1610.21 487.846 cv
1610.12 487.304 1610.03 486.762 1609.93 486.22 cv
1609.84 485.675 1609.74 485.13 1609.64 484.585 cv
1609.54 484.012 1609.42 483.439 1609.31 482.865 cv
1609.13 482.001 1608.95 481.137 1608.77 480.272 cv
1608.64 479.678 1608.51 479.084 1608.37 478.49 cv
1608.24 477.924 1608.1 477.359 1607.96 476.793 cv
1607.83 476.288 1607.71 475.784 1607.58 475.279 cv
1607.43 474.702 1607.28 474.126 1607.12 473.551 cv
1606.99 473.052 1606.84 472.554 1606.7 472.055 cv
1606.45 471.18 1606.2 470.305 1605.93 469.431 cv
1605.73 468.8 1605.54 468.169 1605.34 467.54 cv
1605.15 466.95 1604.95 466.362 1604.75 465.773 cv
1604.59 465.305 1604.43 464.836 1604.27 464.368 cv
1604.06 463.771 1603.85 463.176 1603.63 462.58 cv
1603.46 462.124 1603.29 461.668 1603.11 461.213 cv
1602.89 460.612 1602.66 460.011 1602.42 459.412 cv
1602.25 458.992 1602.08 458.574 1601.91 458.155 cv
1601.46 457.055 1600.99 455.958 1600.51 454.865 cv
1600.32 454.436 1600.13 454.008 1599.94 453.58 cv
1599.66 452.974 1599.38 452.37 1599.09 451.766 cv
1598.89 451.342 1598.68 450.919 1598.48 450.496 cv
1598.18 449.887 1597.88 449.279 1597.57 448.672 cv
1597.38 448.287 1597.17 447.903 1596.97 447.519 cv
1596.38 446.38 1595.77 445.246 1595.13 444.117 cv
1594.92 443.747 1594.72 443.377 1594.51 443.009 cv
1594.16 442.403 1593.8 441.8 1593.44 441.197 cv
1593.2 440.799 1592.97 440.403 1592.72 440.007 cv
1592.35 439.406 1591.98 438.807 1591.6 438.21 cv
1591.36 437.835 1591.12 437.461 1590.87 437.087 cv
1590.07 435.855 1589.24 434.631 1588.39 433.416 cv
1588.23 433.192 1588.08 432.966 1587.92 432.742 cv
1587.49 432.148 1587.06 431.56 1586.62 430.97 cv
1586.34 430.594 1586.06 430.218 1585.78 429.844 cv
1585.34 429.265 1584.89 428.688 1584.44 428.113 cv
1584.15 427.744 1583.86 427.377 1583.56 427.01 cv
1583.09 426.427 1582.62 425.843 1582.14 425.264 cv
1582.07 425.18 1581.99 425.098 1581.92 425.013 cv
1580.83 423.715 1579.7 422.431 1578.54 421.159 cv
1578.23 420.809 1577.91 420.458 1577.58 420.111 cv
1577.07 419.559 1576.55 419.011 1576.02 418.464 cv
1575.67 418.108 1575.33 417.753 1574.98 417.399 cv
1574.44 416.854 1573.9 416.309 1573.34 415.768 cv
1573.03 415.462 1572.71 415.16 1572.39 414.856 cv
1571.33 413.848 1570.26 412.85 1569.15 411.863 cv
1568.79 411.538 1568.43 411.212 1568.06 410.89 cv
1567.48 410.376 1566.88 409.868 1566.28 409.36 cv
1565.87 409.017 1565.46 408.676 1565.05 408.336 cv
1564.44 407.833 1563.83 407.332 1563.21 406.835 cv
1562.8 406.51 1562.38 406.189 1561.96 405.866 cv
1560.79 404.953 1559.59 404.051 1558.37 403.16 cv
1557.96 402.865 1557.56 402.568 1557.15 402.276 cv
1556.5 401.81 1555.83 401.35 1555.16 400.891 cv
1554.68 400.56 1554.2 400.23 1553.71 399.903 cv
1553.04 399.453 1552.36 399.005 1551.67 398.562 cv
1551.17 398.236 1550.65 397.915 1550.14 397.593 cv
1549.45 397.155 1548.75 396.715 1548.04 396.284 cv
1548.04 396.283 1548.04 396.283 1548.04 396.283 cv
1552.17 403.459 1556.03 410.831 1559.49 418.286 cv
1564.61 429.315 1566.74 441.414 1568.91 453.312 cv
1572.07 470.69 1570.66 489.281 1567.84 506.594 cv
1564.95 524.402 1558.57 541.593 1552.79 558.592 cv
1549.15 569.275 1545.62 580.022 1540.3 590.01 cv
1533.35 603.038 1525.12 616.268 1514.9 627.038 cv
1505.72 636.705 1495.32 646.6 1483.61 653.322 cv
1464.18 664.48 1450.62 668.877 1428.94 673.226 cv
1415.44 675.933 1401.51 674.704 1387.9 673.364 cv
1366.66 671.274 1347.32 662.939 1329.28 652.313 cv
1329.98 653.626 1330.69 654.952 1331.38 656.287 cv
1331.5 656.497 1331.6 656.708 1331.71 656.918 cv
1332.29 658.028 1332.87 659.144 1333.44 660.264 cv
1333.58 660.531 1333.71 660.796 1333.85 661.063 cv
1334.52 662.389 1335.19 663.718 1335.85 665.05 cv
1335.87 665.093 1335.89 665.137 1335.91 665.18 cv
1336.52 666.418 1337.11 667.656 1337.7 668.894 cv
1337.86 669.236 1338.03 669.576 1338.19 669.918 cv
1338.69 670.985 1339.18 672.05 1339.66 673.113 cv
1339.78 673.362 1339.89 673.611 1340 673.86 cv
1340.58 675.133 1341.13 676.399 1341.67 677.657 cv
1341.79 677.946 1341.91 678.232 1342.03 678.52 cv
1342.45 679.516 1342.86 680.506 1343.25 681.489 cv
1343.39 681.84 1343.53 682.191 1343.67 682.539 cv
1344.15 683.777 1344.62 685.006 1345.06 686.216 cv
1355.03 713.849 1364.63 725.896 1390.98 732.028 cv
1413.16 737.189 1444.78 742.63 1465.58 737.952 cv
1482.36 738.799 1503.62 733.639 1518.56 732.028 cv
1523.5 731.495 1524.39 717.485 1527.22 712.782 cv
1556.93 663.341 1587.39 614.348 1605.06 558.73 cv
1605.32 557.886 1605.58 557.028 1605.84 556.164 cv
1605.92 555.902 1605.99 555.638 1606.07 555.374 cv
1606.25 554.747 1606.43 554.116 1606.61 553.479 cv
1606.68 553.195 1606.76 552.911 1606.84 552.625 cv
1607.04 551.89 1607.23 551.15 1607.42 550.404 cv
1607.46 550.241 1607.5 550.081 1607.54 549.918 cv
1607.76 549.017 1607.98 548.106 1608.19 547.188 cv
1608.25 546.93 1608.31 546.669 1608.36 546.41 cv
1608.51 545.733 1608.66 545.052 1608.81 544.367 cv
1608.87 544.046 1608.94 543.725 1609 543.402 cv
1609.14 542.712 1609.28 542.018 1609.41 541.32 cv
1609.46 541.053 1609.51 540.788 1609.56 540.52 cv
1609.73 539.576 1609.9 538.625 1610.05 537.668 cv
1610.09 537.429 1610.13 537.187 1610.17 536.947 cv
1610.28 536.212 1610.4 535.473 1610.5 534.73 cv
1610.55 534.378 1610.6 534.024 1610.65 533.669 cv
1610.74 532.998 1610.83 532.322 1610.92 531.645 cv
1610.96 531.306 1611 530.969 1611.04 530.629 cv
1611.16 529.661 1611.26 528.689 1611.36 527.71 cv
1611.38 527.516 1611.4 527.319 1611.41 527.124 cv
1611.49 526.302 1611.57 525.478 1611.63 524.649 cv
1611.66 524.271 1611.69 523.89 1611.72 523.51 cv
1611.76 522.85 1611.81 522.189 1611.85 521.525 cv
1611.87 521.126 1611.9 520.727 1611.92 520.327 cv
1611.96 519.58 1611.99 518.83 1612.02 518.078 cv
1612.03 517.785 1612.04 517.493 1612.05 517.2 cv
1612.09 516.214 1612.11 515.223 1612.12 514.23 cv
1612.13 513.816 1612.13 513.401 1612.13 512.985 cv
1612.13 512.345 1612.13 511.704 1612.13 511.06 cv
1612.13 510.609 1612.12 510.157 1612.12 509.703 cv
1612.11 509.058 1612.09 508.41 1612.07 507.762 cv
1612.06 507.34 1612.05 506.919 1612.04 506.497 cv
1612 505.512 1611.96 504.526 1611.91 503.537 cv
1611.88 503.096 1611.85 502.655 1611.82 502.214 cv
1611.78 501.589 1611.74 500.964 1611.69 500.338 cv
1611.65 499.842 1611.61 499.345 1611.57 498.847 cv
1611.52 498.258 1611.46 497.669 1611.41 497.078 cv
cp
.94902 .733333 .2 rgb
f
1509.88 738.739 mo
1509.34 738.709 1508.81 738.69 1508.29 738.691 cv
1508.02 738.691 1507.76 738.694 1507.49 738.701 cv
1506.97 738.716 1506.45 738.744 1505.94 738.785 cv
1505.71 738.803 1505.47 738.816 1505.24 738.838 cv
1504.55 738.908 1503.85 738.994 1503.17 739.102 cv
1503.14 739.107 1503.11 739.11 1503.08 739.115 cv
1502.35 739.231 1501.63 739.371 1500.92 739.522 cv
1500.69 739.57 1500.47 739.623 1500.25 739.673 cv
1499.75 739.786 1499.25 739.902 1498.76 740.027 cv
1498.51 740.089 1498.27 740.152 1498.02 740.217 cv
1497.53 740.347 1497.04 740.481 1496.55 740.618 cv
1496.33 740.678 1496.12 740.736 1495.91 740.797 cv
1495.24 740.987 1494.58 741.18 1493.92 741.376 cv
1490.8 760.756 1477.88 777.152 1462.66 788.699 cv
1447.35 800.319 1423.35 804.428 1404.81 800.819 cv
1397.94 799.481 1391.3 797.074 1385.08 793.835 cv
1385.78 794.973 1387.84 795.925 1387.34 797.131 cv
1382.17 809.658 1429.23 837.791 1457.78 830.97 cv
1476.22 826.566 1499.68 811.919 1505.43 791.38 cv
1510.27 774.081 1526.71 728.641 1512.97 739.069 cv
1512.17 738.933 1511.39 738.844 1510.61 738.78 cv
1510.37 738.76 1510.12 738.752 1509.88 738.739 cv
cp
.572549 .717647 .717647 rgb
f
1417.62 382.088 mo
1369.16 366.452 1287.95 471.73 1308.01 515.446 cv
1311.97 524.085 1324.95 479.299 1352.47 443.03 cv
1378.11 409.25 1436.87 388.299 1417.62 382.088 cv
cp
1 .94902 .8 rgb
f
1611.69 500.338 mo
1611.74 500.964 1611.78 501.589 1611.82 502.214 cv
1611.85 502.655 1611.88 503.096 1611.91 503.537 cv
1611.96 504.526 1612 505.512 1612.04 506.497 cv
1612.05 506.919 1612.06 507.34 1612.07 507.762 cv
1612.09 508.41 1612.11 509.058 1612.12 509.703 cv
1612.12 510.157 1612.13 510.609 1612.13 511.06 cv
1612.13 511.704 1612.13 512.345 1612.13 512.985 cv
1612.13 513.401 1612.13 513.816 1612.12 514.23 cv
1612.11 515.223 1612.09 516.214 1612.05 517.2 cv
1612.04 517.493 1612.03 517.785 1612.02 518.078 cv
1611.99 518.83 1611.96 519.58 1611.92 520.327 cv
1611.9 520.727 1611.87 521.126 1611.85 521.525 cv
1611.81 522.189 1611.76 522.85 1611.72 523.51 cv
1611.69 523.89 1611.66 524.27 1611.63 524.649 cv
1611.57 525.478 1611.49 526.302 1611.41 527.124 cv
1611.4 527.319 1611.38 527.516 1611.36 527.71 cv
1611.26 528.689 1611.16 529.661 1611.04 530.629 cv
1611 530.969 1610.96 531.306 1610.92 531.645 cv
1610.83 532.322 1610.74 532.998 1610.65 533.669 cv
1610.6 534.024 1610.55 534.377 1610.5 534.73 cv
1610.4 535.473 1610.28 536.212 1610.17 536.947 cv
1610.13 537.187 1610.09 537.429 1610.05 537.668 cv
1609.9 538.625 1609.73 539.576 1609.56 540.52 cv
1609.51 540.788 1609.46 541.053 1609.41 541.32 cv
1609.28 542.018 1609.14 542.712 1609 543.402 cv
1608.94 543.725 1608.87 544.046 1608.81 544.367 cv
1608.66 545.052 1608.51 545.733 1608.36 546.41 cv
1608.31 546.669 1608.25 546.93 1608.19 547.188 cv
1607.98 548.106 1607.76 549.017 1607.54 549.918 cv
1607.5 550.081 1607.46 550.241 1607.42 550.404 cv
1607.23 551.15 1607.04 551.89 1606.84 552.625 cv
1606.76 552.911 1606.68 553.195 1606.61 553.479 cv
1606.43 554.116 1606.25 554.747 1606.07 555.374 cv
1605.99 555.638 1605.92 555.902 1605.84 556.164 cv
1605.58 557.028 1605.32 557.886 1605.06 558.73 cv
1587.39 614.348 1556.93 663.341 1527.22 712.782 cv
1524.39 717.485 1520.22 726.626 1515.36 727.69 cv
1464.77 738.785 1423 733.908 1400.81 728.746 cv
1374.47 722.615 1355.03 713.849 1345.06 686.216 cv
1344.62 685.006 1344.15 683.777 1343.67 682.539 cv
1343.53 682.191 1343.39 681.84 1343.25 681.489 cv
1342.86 680.506 1342.45 679.516 1342.03 678.52 cv
1341.91 678.232 1341.79 677.946 1341.67 677.657 cv
1341.13 676.399 1340.58 675.133 1340 673.86 cv
1339.89 673.612 1339.78 673.362 1339.66 673.113 cv
1339.18 672.05 1338.69 670.985 1338.19 669.918 cv
1338.03 669.576 1337.86 669.235 1337.7 668.894 cv
1337.11 667.656 1336.52 666.418 1335.91 665.18 cv
1335.89 665.137 1335.87 665.093 1335.85 665.05 cv
1335.19 663.718 1334.52 662.389 1333.85 661.063 cv
1333.71 660.796 1333.58 660.53 1333.44 660.264 cv
1332.87 659.144 1332.29 658.028 1331.71 656.918 cv
1331.6 656.708 1331.5 656.497 1331.38 656.287 cv
1330.69 654.952 1329.98 653.626 1329.28 652.313 cv
1326.67 647.428 1324.06 642.72 1321.62 638.378 cv
1304.66 608.132 1296.63 574.868 1290.52 541.572 cv
1280.2 485.327 1306.61 350.654 1466.27 369.312 cv
1500.45 374.094 1527.25 383.664 1548.04 396.283 cv
1548.04 396.283 1548.04 396.283 1548.04 396.284 cv
1548.75 396.715 1549.45 397.155 1550.14 397.593 cv
1550.65 397.915 1551.17 398.236 1551.67 398.562 cv
1552.36 399.005 1553.04 399.453 1553.71 399.903 cv
1554.2 400.23 1554.68 400.56 1555.16 400.891 cv
1555.83 401.35 1556.5 401.81 1557.15 402.276 cv
1557.56 402.568 1557.96 402.865 1558.37 403.16 cv
1559.59 404.051 1560.79 404.953 1561.96 405.866 cv
1562.38 406.189 1562.8 406.51 1563.21 406.835 cv
1563.83 407.332 1564.44 407.833 1565.05 408.336 cv
1565.46 408.676 1565.87 409.017 1566.28 409.36 cv
1566.88 409.868 1567.48 410.376 1568.06 410.89 cv
1568.43 411.212 1568.79 411.538 1569.15 411.863 cv
1570.26 412.85 1571.33 413.848 1572.39 414.856 cv
1572.71 415.16 1573.03 415.462 1573.34 415.768 cv
1573.9 416.309 1574.44 416.854 1574.98 417.399 cv
1575.33 417.753 1575.67 418.108 1576.02 418.464 cv
1576.55 419.011 1577.07 419.559 1577.58 420.111 cv
1577.91 420.458 1578.23 420.809 1578.54 421.159 cv
1579.7 422.431 1580.83 423.715 1581.92 425.013 cv
1581.99 425.098 1582.07 425.18 1582.14 425.264 cv
1582.62 425.843 1583.09 426.427 1583.56 427.01 cv
1583.86 427.377 1584.15 427.744 1584.44 428.113 cv
1584.89 428.688 1585.34 429.265 1585.78 429.844 cv
1586.06 430.218 1586.34 430.594 1586.62 430.97 cv
1587.06 431.56 1587.49 432.148 1587.92 432.742 cv
1588.08 432.966 1588.23 433.192 1588.39 433.416 cv
1589.24 434.631 1590.07 435.855 1590.87 437.087 cv
1591.12 437.461 1591.36 437.835 1591.6 438.21 cv
1591.98 438.807 1592.35 439.406 1592.72 440.007 cv
1592.97 440.403 1593.2 440.799 1593.44 441.197 cv
1593.8 441.8 1594.16 442.403 1594.51 443.009 cv
1594.72 443.377 1594.92 443.747 1595.13 444.117 cv
1595.77 445.246 1596.38 446.38 1596.97 447.519 cv
1597.17 447.903 1597.38 448.287 1597.57 448.672 cv
1597.88 449.279 1598.18 449.887 1598.48 450.496 cv
1598.68 450.919 1598.89 451.342 1599.09 451.766 cv
1599.38 452.37 1599.66 452.974 1599.94 453.58 cv
1600.13 454.008 1600.32 454.436 1600.51 454.865 cv
1600.99 455.958 1601.46 457.055 1601.91 458.155 cv
1602.08 458.574 1602.25 458.992 1602.42 459.412 cv
1602.66 460.011 1602.89 460.612 1603.11 461.213 cv
1603.29 461.668 1603.46 462.124 1603.63 462.58 cv
1603.85 463.176 1604.06 463.771 1604.27 464.368 cv
1604.43 464.836 1604.59 465.305 1604.75 465.773 cv
1604.95 466.362 1605.15 466.95 1605.34 467.54 cv
1605.54 468.169 1605.73 468.8 1605.93 469.431 cv
1606.2 470.305 1606.45 471.18 1606.7 472.055 cv
1606.84 472.554 1606.99 473.052 1607.12 473.551 cv
1607.28 474.126 1607.43 474.702 1607.58 475.279 cv
1607.71 475.784 1607.83 476.288 1607.96 476.793 cv
1608.1 477.359 1608.24 477.924 1608.37 478.49 cv
1608.51 479.084 1608.64 479.678 1608.77 480.272 cv
1608.95 481.137 1609.13 482.001 1609.31 482.865 cv
1609.42 483.439 1609.54 484.012 1609.64 484.585 cv
1609.74 485.13 1609.84 485.675 1609.93 486.22 cv
1610.03 486.762 1610.12 487.304 1610.21 487.846 cv
1610.29 488.382 1610.38 488.917 1610.46 489.452 cv
1610.55 490.059 1610.64 490.666 1610.72 491.272 cv
1610.81 491.938 1610.9 492.602 1610.98 493.267 cv
1611.08 494.046 1611.17 494.825 1611.26 495.603 cv
1611.31 496.095 1611.36 496.587 1611.41 497.078 cv
1611.46 497.669 1611.52 498.258 1611.57 498.847 cv
1611.61 499.345 1611.65 499.842 1611.69 500.338 cv
cp
1501.43 792.38 mo
1495.68 812.919 1478.22 820.566 1459.78 824.97 cv
1431.23 831.791 1406.41 824.862 1389.34 801.131 cv
1387.78 798.955 1385.02 793.616 1384.42 791.097 cv
1380.72 775.72 1378.07 759.906 1371.92 745.045 cv
1368.59 737.004 1373.07 733.422 1382.8 736.483 cv
1416.18 746.983 1450.31 749.46 1485.06 745.005 cv
1489.4 744.447 1493.6 743.03 1497.91 741.797 cv
1498.12 741.736 1498.33 741.678 1498.55 741.618 cv
1499.04 741.481 1499.53 741.347 1500.02 741.217 cv
1500.27 741.152 1500.51 741.089 1500.76 741.027 cv
1501.25 740.902 1501.75 740.786 1502.25 740.673 cv
1502.47 740.623 1502.69 740.57 1502.92 740.522 cv
1503.63 740.371 1504.35 740.231 1505.08 740.115 cv
1505.11 740.11 1505.14 740.107 1505.17 740.102 cv
1505.85 739.994 1506.55 739.908 1507.24 739.838 cv
1507.47 739.816 1507.71 739.803 1507.94 739.785 cv
1508.45 739.744 1508.97 739.716 1509.49 739.701 cv
1509.76 739.694 1510.02 739.691 1510.29 739.691 cv
1510.81 739.69 1511.34 739.709 1511.88 739.739 cv
1512.12 739.752 1512.37 739.76 1512.61 739.78 cv
1513.39 739.844 1514.17 739.933 1514.97 740.069 cv
1510.05 757.765 1506.27 775.081 1501.43 792.38 cv
cp
1478.58 360.141 mo
1435.41 354.947 1362.79 342.135 1302.98 420.61 cv
1282.24 453.573 1273.45 492.149 1276.32 530.372 cv
1278.34 557.271 1285.01 583.586 1295.54 607.752 cv
1311.79 645.073 1330.93 680.706 1349.39 717.064 cv
1360 737.948 1367.58 760.318 1370.64 783.268 cv
1373.08 801.558 1384.88 815.231 1398.83 825.078 cv
1431.01 847.796 1457.19 839.705 1491.98 825.704 cv
1506.36 819.915 1508.27 809.997 1511.09 796.053 cv
1519.38 755.002 1528.42 731.176 1566.66 666.717 cv
1586.32 633.584 1604.54 599.286 1615.21 561.852 cv
1650.09 422.799 1553.09 369.106 1478.58 360.141 cv
cp
0 0 0 rgb
f
1650.23 489.609 mo
1649.88 493.539 1650.43 497.407 1654.68 498.409 cv
1659.43 499.529 1729.43 497.281 1722.38 492.207 cv
1717.44 488.649 1650.56 485.781 1650.23 489.609 cv
cp
f
1165.14 446.513 mo
1188.55 453.435 1210.79 463.28 1232.93 473.392 cv
1237.48 475.471 1239.03 470.536 1240.9 466.684 cv
1243.24 461.871 1159.66 437.02 1159.07 439.272 cv
1157.71 444.439 1161.79 445.523 1165.14 446.513 cv
cp
f
1454 321.511 mo
1459.82 323.087 1468.37 260.135 1469.5 245.266 cv
1463.06 250.056 1457.79 254.693 1456.99 263.324 cv
1455.49 279.521 1448.19 319.935 1454 321.511 cv
cp
f
1212.32 626.455 mo
1213.97 629.58 1217.16 627.901 1221.61 627.91 cv
1232.41 624.088 1243.13 616.634 1254.34 609.973 cv
1259.56 606.868 1264.86 603.828 1260.87 597.816 cv
1257.32 592.473 1209.93 621.917 1212.32 626.455 cv
cp
f
1628.4 621.874 mo
1624.68 621.25 1619.5 620.666 1618.96 626.741 cv
1618.56 631.172 1620.28 633.018 1625.04 634.227 cv
1633.83 636.456 1663.14 641.699 1664.2 635.326 cv
1664.2 635.326 1636.89 623.298 1628.4 621.874 cv
cp
f
1333.15 346.09 mo
1334.45 349.612 1337.33 352.829 1341.36 351.105 cv
1345.12 349.496 1329.17 313.173 1326.17 314.542 cv
1323.61 315.711 1324.4 318.279 1324.8 321.601 cv
1327.32 329.068 1330.03 337.657 1333.15 346.09 cv
cp
f
1574.1 366.191 mo
1581.23 367.605 1591.43 350.641 1590.98 346.719 cv
1590.89 345.935 1570.02 356.738 1570.51 360.993 cv
1571.13 363.135 1571.56 365.687 1574.1 366.191 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.1.0
%%For: (Elena Sapunkova) ()
%%Title: (questions3.eps)
%%CreationDate: 6/8/2016 1:40 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kk?ATmqsaLY\ZYNg`!uigqs4A6WJZ9M?nW@["X7ZXkjeK<qqL#?b\Tj/al7B+O;#r3@J6:5pG0(E4*U8_6*"%)S`SUUY@hrO
%bH)SMX^qp%^=q:Js1*46C&Pj9V#`-UX+R;,lL/rO<PR-9ZlACMD`q%o=_VGj.q`gtP'Q4L)XSW7I%sTQJ3LM\qm]mLpuQ\.=m9Rh
%<K.pAA*Wul#JFLFr(cY=Ge48VLOQuKCOra)hLd3Ok`jFds"/Zo-k-'LYapil1>pW5:]$mu3e,lYdd[.3AK3&+mI7K<I](Vro]tl[
%9Ea"bInO`8;tNj9K1;KbP6mr@CO\?s6`ahl3nVlU?4JMQVuJUL+9/1L6%f#P9um9$YgICah8ks$Ms&dN0B*rU"#sK(ZJi)446Rn&
%@*907&ug6=2`m!khe-i\R[1?iIeWu:nNU"Yi/qQ`n?SJdQRtj@*@IV/L6hM&baN;d=jrQ'Td]]nli)t<bYu8So=L1G\ShGOra4Tb
%iI^jgn0Te.$lXTh<NFs]!]nin0hZ]E2890uLBEb['bZ$&^@X$$N[ij@^CPqND@DUOl^;^X(PCjFjen0FBuim>3e$CnrL0%`B'WUK
%F>BGW2)STK2#,6NJM)\>nT8!?cSU4,`8cBkEdSi8LJj<AJNVZl_;4G.cg%WT?2'G4[cL&ZIaY@M6D5/a`oXZQ50ChGlM\HS;WQ2a
%j2,\%-+*%,TcEgjI*aui<U*+9_p,\l`l4e8I98qCd]WWO1f%5hS\HuVT7+HZ=#KbcReZ;1q!NG&?7;aQ,R2!C<R\meVTDo_Aa7Rs
%*!a;"#QJfa"EPOcF.@8R%I/3Ej*:pj_*@5QGmNPX#_q7+*Pi'd"=k1jCS?8[$3c)3Qgnh$lo<M.>Xj6aR60r5H-*]CSs-?e=*<=U
%Tf[]G(ug8<#_mRQD#"tnL$o;"8DuYhY/nGM&MJOP^CViAa.\l&4>\79mt<cO_.LUnB4[P&$4mVC_fpb_Qa'8)M&+F%Am-shn=@0H
%p5Au)T3'))e)D+C'F=_+0Z4R\E@>EEA'W[Oj7!G.+c_H/9H*>X39!%!Ka=t(i4E5V2W6`L+cc?Cb[b^%ipmFq:*g:TGU5q=FhC,>
%4b>EY'Q"\67Xu9#9B2FcCrJ::;?%13&QCNC#Z>ldS1c+Ipl8`5l\He7Kfe<V_B=HW>tMTT,UOVZ_31t>=UC(N4'Fb)$k%be'#e(P
%5-L#]cSIBIB^ps7$9qi\JuSQkGTMC=o09d1<`GB$jujB6LFCV9(?JBi\IWd`g)K=F,$(WI/Eob36:n!@Ten4C&%SfU*HD86UrZ-`
%6^"D0W[4^6H!p'?lPf`>:MD;$q9Lbi;Y\B6/;sN<5PZCC[r$!i5P^o_r-.qXs'1ojG26PL=8pD)pepn/s71I748e/hd(NQBVXTfL
%PtLsuprWQCi1ICJa?t>frpnt30E+?Z%BEmije<,W\^KSGkeo+,jk=fXn)HT'3%'>PqP<Pof(IA8I]XI]Hb1)f];o;f`W)Ot7EnFP
%85ea$J0o]efme.#5;E%[iWT\dCTm'U]bkM+oiq?4lE9!mIpN5Fs2EZ(LN0JbF%9=(#K<QR5pRt<Y$!BGKn+9[555*,4i2Djfg].g
%r?JY0G#.L2r_]*H=l#/fr-eDA^Fq;<j-5V<6ntD]j`#(hqYOnIH5/1+F"LTd51tZ=$Ip/_;`)Isbl<ah]*haVA9p86+M>!](9gb*
%\CPmnqOQ2L]%m6oG.sn(g:N(Nq*Gtu.htIGa=j`532/C6d_A!]qIcTVIJ8Q'JcQT%:r*78]n.rF\.niQPpr.3q\PSK-99]#&RVcl
%%#f0PKA:uKK"Lq:ZX9`E$bBS2Y=$1eb#O;nVj0arr_XIlie>g-R6W-sCKs_XaQ%#c]*PX%^4`_@HcS/l'[,0J;46Y2FOGkh+*j,;
%qpB7K>sq<-)h9LK=oaM(@A?5DKD^;9XJfV`bfpIK_#KMC$:U]%;6i?0_'K(-Q?hSj$H52_YgFuc'N!`S7:Srh%4Aq?n3?\;)A-O#
%fN+d.>)q`s+omE))3t>Jd]GpN6J]-D@<RVR*P<&2,TXlTN]iNqj5gc+FY-"DrkjVlUDY@'#0Rb^G][)?!4e'YU)\;R(=Ljd!Yu6Y
%J-mM'NH%k;.\>JDBRYXgJ%@$r;`&BT'EF&Rbnf9`?Vr(&(c@12,m>%k$X_q5I@(7A%2N\X9Qqn*as!Wi9lj"VA>[Jf1S/=jJ1G<s
%n2p[q:iPAX+c:t]aC2e!26u_E(!&A(7*'FdA0dfpfEXYLr@N!Y9Om-I/t;$5qaV$<3B/<:*77"AE?=3rjBDmKR_bY7d^$b),Y!rf
%Gp"D>F6)>#OaM_2Lsu/k"q9`aN3dRj%`^IQiB3noo"Yg8]!`acR0Oaq#;h\u'8Trp*\>u%S08'en^H(>"JO&ObS[W4,ph<S9/NMk
%EOkjO<07R$4(+;@kKEs7M&6hk5cGrZ%=cjn-kpL<Ya\OV:lQ4]8AOf;@LQ/o$;:#X\uqE1W&Z<@$3LI&c'TZqdP@MXBGc2nZnVsA
%A>r^O4h(ut#P0>&TNtKQ#,2^nHDp(b:3+ud]'N!TX_'GN_r)G16?r$?$G.i7TJUHgEi9s+4FA05+iYL/;W].XFMb*gWITWjm)X$A
%.7*T<q4JJV"plm7g5(cqM"&8u4^r>!g]^P]2kk,PVGZ:8/5.;ilr+Mb4L5c6'FX9/APuZn_d44qA,$^6hF2P=#GT1GaY6>_15p:*
%UB[(_Lh4[&8e_]#N<r0eO]b>@jjJj:Or)?B"GKj!RqET+MH:8JL*.EPP6AjK<*72lXW5%`0hc'e&5X$;]i],jWlX1^CaM]bBud>J
%JMg?J,#^t;@ks\%4\,/X-%gk/kTUll@i-qr/?!=gM[hNQl-B]0d1ePhb;QnP`"e%k2<Y<^73R@8.PrUYjG:?U`1"mdS*lE-dT!re
%#9ZC)?idh5:gu"Po]sY5$Pjc-QH<6B/m,,o0#!R$9]1],fdJbP&WKm31fgEm/q+o0cBb&S`pjWuKtiGIMK:KdQVQ!U<:]6:'F2uN
%Ml8Ni$>`][=Fj(+5Vjo$9IcgKX*?+%iCK2qA8TI?:[CZ9^c5jH<S%4pjt=VN655/'0ARIC7)WTk)!RE=9\j.B/(E3^.c*\46:7EW
%Z6i!t/4#'n_&WhS<BX%,lP-jNPcUl.k@6NRZ6U\sL$52'n5@IVP%G5;:kA+l_$GG'*'b6BmC96W[l9/&Mt7cCS7;iV9M.ofLapKd
%,uE5oM:\]NNAGWb(+HZ<KL&'Y!G_s2<e;RKd7)2n',.XF`aa"-P,G+k-(\%c/AG\Nb#p8`H_B"[fj0?LS6.S7N&-T4'KqJ9Dhkt6
%R%o1OisD%(?(*#o=X1(ib\N`BG*NN(]SaY%'."ce15hns,%066=s^<Q[rF6;8:<mX`WaqR6rjK.,FTuL(*B)Cq7C?HK@pWGN,<-9
%d0qCE/LOD'1lnu,^`r\qUI.Id?.@GUGe2j'93dHi#WG*G"F[/s(YL]-"P<]UWRsac-+_OBNC/AW2(g=/P"I'/*]ZKi2dg5iJ[Tj*
%]FhXTf.e\/-&qNKO30e%W1Yc>S!T<6"T!15`Q4&'c>(3+.#Df96R7D?AMtO53WT_m\q]1en93Y6Th/=!,n71k>qRJ0.^f_EB>WLn
%P,q/77T#D9ef41XAL3X9YbWG_/jB7pJJ.'8Cd[dTWpc/)26*ljBc^]I40CXNAe8+U*4:PE+necna(D6BfH%XFkIRg;Jf9N//:GU0
%:!u;(rT(+XJOgFEXCIb/O]&_fl6NW>1dpQV..E*&8?3qi):$KU0ia@(nf!F]l>VQ0n*gL/Wo/85PkNJh#*rY!hodd<QC:iTjfW9@
%<C>_[<k(X=d5WHZ7iK:O:a_)bP1W1b)DAo$NeX#&`ee4YUWc))5a@I"`)pu5j#rje#a,3m1.;Zad5iVSgg5e1,fN618o0W@U:Oc*
%S>`[@peFt^_3SDaCP6f<X7eN<V2r28[DBfsbGYSPgaS"VWGW[qoh@m$1(eN:@P]8fga&jQj;;HajGnse6\_'(5a2Vt=bEe:XJN3s
%+<Qr6M&iorau*,8#uM"GX\p*k^`'VW33+<m0.P/GWYUK\Teln<2DbQdBi7Xh#3`&O6(i-B,pm&>`%oCHWU(ZYT5,mo\9PZh5bcnO
%GSkH(AMUQ91.nAK_k`Og5]IC1g(dgRCLltQehut'NN7:L`CA67$5eFFQ6NI'781:ckiBm,P$1-orNu?U0%dF2',<R,dn3XD`gKgs
%3KA'pP-keKKlWT[CZa$.]cGGF]#!]q`[V=O9F5^Y9JY+:Am]ctCR&M%lEUO,fY$2!0r^AZ:lkHi0(LOe'Y7$#qa6d9PnW_,Y!&4*
%b3DPniZ-[!hU"ZMZ_Os.C)/*!Z<HRKEl!3iI2u(`_?3rnj_-foWh:>bAckmZjAkR_"7mW=<r0f5%O:40(78]8Q=JEsWGmM,)`tVF
%pTRM]0Tp<DjGgnbF[qD2c-ND@^0_<`]ge;GC0RW+SPZL_p:`n.TIh%[,++bKe(g0r"\=U=7HPf+0bH2S)1ZuGBO#X6ar!SBDM8HG
%>mpAhb2n`o)D21*Ut!$/[L2IK(e'JaK'4DC3@-L;(sJ8g;5VA#NAMI,8Tg%G=B_%VI,]6g9keHhLnm"^S[.gj;'q=]Np=L"$U8V_
%]J@$!,W4%oYtaLFb8gsb(`n>9@?c['V<r(qaO5+k'KK_<FQ_RaM$_M/]FWbDR[la//J#JbN1k#`hOW4b#r2f=>L2MkQTb>e``hZ>
%g`%rBQ\c6[QI&mW?NrS@NgNWg'X?.!Zm0Ie+[YF$K&RKma70-h7n@Pcnq!X-#?0GY),aKGGeXOkV+0WclG^JeoYm:-Pf'^bT`&E+
%;!iZ$&VW`dNlV4-GkEEdYZ^$`,T*1"P9N+o+P=G!](6mbk@H1hg\I9]CH6)&<.GsV?&FQ`B]*NFq=6tk,$S=#3;#.R"m'#4B#t;m
%,ROW%(1h^`1:GABMn[h'Z1?P`'XTB&ndqTPLbB"09JX!_>AAbI[H#.LXAg(6R/Ep9/(I5Z*lEDr?mojs3[<bJQAV1XcM-h)N_W!s
%P[G@tjb]a[G@M&%"+EY*VMlup+sU!P^urer[Sb*rHQ_Ejgu>*'&Uq%2YmPJn92_>tA;l=7aM]7L@_$G&Kbk6Aj3j8RPai6:NDerF
%%Zs@WkRtU3]PPlh\@AAW-mH;Yglpi//EnLre=\AaO\;Au@cJ:\DJ220#if#QCfu'm9+s6#@i)=<Q%iGq19fe*>.?spLs#Wt+\?F0
%IR[q1EgjD+4b,g>-!?n:\O[lVM5qM_I>G2sd,t[>'_b7A5N66$^GnAC0#Unlr;/.kI#6O+V>CCE:T+-CcV^C,`:muPX/0-G'iSXl
%jRWm[5+O8&7_VZD?']U4N7e%Xj*pmlIus4Whu2HNpSi?(3\g%5FMB_mqZF03/&qPMmf+WJ:]%e*N;N"uY7]fDqs;plEPK']^PVF.
%4sN-6PBVI&^ZMD?;5il>4/GseT*-UX(>;K1CaVCOP+NAtheb=+BC]g4#@0F`qh#B!AD9;FL>s(ekYQ3VP:6J-cO7JL*q)#lE:HN/
%4m6^k:>:9sB.6ntTD4hFHHXY(`=-$Xc7FB#FmYr<S,<oE8(5lEA\\]-/U0;&B#CMX1][1$Y5+@P+gTcn]sBh4k/.SA?TnF]k2mh9
%C%hKts#cK`poR_\B%:8ngP-U(,rGU]Ze0R.hCNofZke$MC2$_'8%K""(>P%<LnD,-^BoP]eA(lC;lYQIh-S.*p7]qhD5IA&/u>!$
%21W-Ip&FlrbhgHCpk'u'6trdp$RpXDKG7>,_!;lP?jV*E%m*r);aQUD#T,Xj0?rJ`Pt%Nteua&>ld\\C46W5JNnWm?5JSh&Q`+GR
%:bX+R>7t;^<*eHU1<4ms=t#bi\/\d-/JhKX;A/kU\$agsOo,G=29_.BNl"?I78L`HfBr0]riN+%^&D0fPA29MW?)8IPQkBc0hnl-
%V-4lja;DNK&a&RQ"^K#Ar?RX?55a(rBfG=jB'>BD\0iK+=J:jUJk/q*l,Z6.=-D<3`&R$[OGS@06-k4-Q:<_K!XWee2HrNV?g7:M
%eV8SKZe+r@Bi$6;.UD-a?i^%%IAS2WQ0:7[5Isb4#YjN$_=S;9OsPg>V'mL@9tCt2co.8!a=EkQ;A+"EQ<EiU+[cXin\6J]WV,(c
%Zobc3*]B912(G_#2\L$,:PM-`R=rI4)ArNJ6l`<E%33_+i'RA@gW=5#6ZH:JeUXo[K6lG<!(Dt?e5BdLI^2RK&^N)C].a?DK``EO
%/$P'X^5g4ZCMQinCL,tYLTd=8!8>K6lTYZhB@c%F\%=^Tg,5M:([G(K&:UJQF3:>=bgPCn7LLiOJWP$?-\K,DJa+]bk.9Bk0MM/P
%hPbSq(-re*#MZA0GS/j05>b0V;%0moJT%":,u_t7NqMMXK0u$*FVaHA^![b=Y4^KcQr^'*+L!*o>.l-8FA9A'*K>-TIWjRDJVjNA
%.Wj)]o61O(rgms@I\oBhkLH9QVUR$bgFL`-3[O0khp=oF>7>hd<Tclceiur]P([%6\)LOHO]kelVpjY$ddtXfs4b>-<RZcn&H#N_
%\j,DM9Ll8OpBHU62GsQ^,s$Y_OOTn_'_e&R;D@m2+Cn0dUGZ`Q<Vr'MIN%Mb"hlIV>4'4VSLSd2;!S]5rmFX^gg\VZNQjEkoLTln
%\+osM1dR'OHnleHKLL[`6+?,DiVHQ3:p?33'Pq'GaGjJ5":</?\s7`VRf\idFLLR[]f")a`#3&i\\8d3btbl@3F)u7q+[o_aD:VR
%*^G1Ffsn2QS[HQ*L/D)aG)OR^OkK[P1V4?4Y!leY$]3\R[fU8:j$gT:S!VVWKd0p"G)OjfOkMBb]0s@a;S.F&C,^7Q^f&2cN+9D2
%Xi[=T\ic=P2I=pB)0p8JSr_\k>KbrmLief!ONQlW@/i)Ua`WR&]7.*b4[iHY\2MctUiCMsY;C]-IZEGn4EU$n\g_-5L:k*f1BftM
%5oTJk:feHJeGRdACV20UZ)?V`qScE)7:<;+[9fas-b$"I<NS*X]?lcDWt=p'O93!O.VZ<m/%&P$O%H7b.KmGr*%MJn.b3gW3G;C?
%KO$=jX$S=rNB$IS;WT,9m`Om%7c,o,N,HPFQ@[WlI#$#W\<*,=-%/MJ]+s7h'kO8\;GhF51V]UU:RB-^r0=-5PubSd8rmR<gHTD2
%og%+X\5.n"[AdbY%49]jS6+jG![H,mqeAS"HbG$s8QG2:JmWNri^m_.ld[Mfr-0*LD&Z;O"dm!>39@Z18sIc2c+<Vm?2a?B"m5V3
%ABqIq85\if2J1lfensQo6)@fST/Z^t)V)BQAg)<@EuC`l2>QNZ/2"qZnOAX+TIWZ7;rEal&Jm7KLN.RYE6r6e%qZ_"bkZ7Af5W%p
%P!8RpcKHa']'FRdHmIiSmbmXc(44-/\qcg8:6h5#1G/<^@i-ilO:s(LfL'!3+YWPN7o@/Ej@Y;mggUe>Z%r7HEl%S)6`*Z_GEE>O
%,@su_fJd.')_^oEIfYOE;sRcV)_^oEru?N'p!_AURbOrVh@-4"jP!^f3SF=*]b,MqR6V\j++p.nXJA6"g+CCH>A5@#UrS`hVCBa_
%TR.#;;d-';_643LT73Q_r\5G(#!OR<!7n1;7]O/Ri=7=8d]C!37>5Qt.qJ@J6FNhS/Lk:h$JE1h6H9"Nj/hSDXUU)Ar=,tNos=A3
%pNjI1pG][4D55ph[)Qu%?cUStWo.Aa5J-Jo8U")ICb,Of2[?=RZP,T1Q/"AKd.&(E=3=-0"SR_r1rVN;;`j68't3s#(IAGbNn!Q6
%.JEO`1Z76'M`VA[Z.Lh8R6,Zi5EiN_dE..XCm00hM0dT`Q^O.4\_>Kh*=0kBKj`PE;0Z4X?@Ih1/da7i_TS\CZ7*B`3smXHbef&M
%=bWRGbG+L3.(if-Ygf&%a'Y_h$]>)7U4@@-KcJ6gB2Ls`\I-c]YaYASd[WM,ij[^4I[-5`H9\X.;=EsTl=3IMf?k#NgU"BPp0e^#
%O1m4f<&#m_bkcrAdQHT!efRkRL(F<m#?>$.F.B-U3Mgrp$cdKd&t+GpS.WdslcsM?'W:bKNn89cr=ZhenH>c/':c3t9S4]PfoCG6
%PJ[oH_C%=r%U?@lI^BbP\]HW%';+>rbJu`%ERs>WD3W[ooinY9qAfDOCcWgW^BZh.^B^6#IJt8%#J56E71q(O>o&g:U3VXRI9eu/
%iX2eQqt.8Ycbg>-7KiP6okQ!82m83@R$2kP;Ab$iRUE=BL!a3F*7DcO[@^N<]_3]:rbS(+PiiZlhJ/n*j4Y?MdmgrTj&;`=-]Lak
%@O&cbm7sK]n,HYEZDf%"TBU77@^mphUG=$</[_O$?E(>^']qfMjuNQ7C[bq!"IQgMFMB#BMaMWnG-G]3D;4'<IPY`b(=2Vg/Y;2c
%,>SO=ELuH5epm!1r<SC.pu*"E9Hh61];9,44?PED9._3oZ\X5L5'=;^lE!I$fDBPLQ[#+K^[Z;*F)qT^+spL37#O.Jk9MHZgd+-Q
%2=JL)j>1HU(3bkd]HNZs)s%iZOH1Tj\:]0K#Pm?hnqD.tHB]1onXAMn$f<ogIV%)Yj5L:6q=KZuZ%Dmh#N4$WUoS%mjmFCd29u,k
%#iYXLj0u2N>"V1`9<h-1;X+#=Y5`@s\#O01A/U!6.XuIqkai2$Y_Ej'Lhd[bT6;a8I\lS/>u+C)iI4^f$AQ;*`T%h3?./'m[g()?
%i8XK1O+*,k?PQJ@p0k_mYE%?cNSURdE(BRj.bnL[=6rPVRZ#k-jA2FmDo,)7lY,XR'c8RBK.!gURCeD>RXH]QdH#dKhh%0YR/Y5]
%?sIP\f4]AP-ctIdRu'/=)fEB!LrD/*Am:,ck5!$FhcI=uRYPn-__WXj;Io$MLJ7Vh2IKZ(eH81L3R[[qU^f2amW3TZmT4e\ie6-[
%[g+AM,J5o=iGs*Zk&#^A9li,=,+uYR7='=GGK][I4OpWaP@M:dS&5-H8K'?hMb9S'8Q"LqKO:XZDT/9PfUA$0Xm3a11aDT;A6G&B
%1@m,1:DRD_eRGE%^G3o=l/<1GEU]:PUMcpY4&,;S$o9='L]nUJk:B*7>j+3>\^'!\5;%B-f:qp--eLaUhK"Uqn$*#I0uLQ'Kj5V&
%r&mP$J("ben&LW6+b)>jP/!!05Fdr^(nCClJ,Ji/Y.9STW]CY$^=1M0G-C0#jYRCW2Gs/f*a>fH_`s6m33><(Vj1o>m!&D?qg/Yb
%";a!L[NG'nNN6Q2V=C>OEuaB&B!Pe.VR2NqGuZ9G.F>&jg#Z_BX"-Qer6osBeY<bhI`JYaMlDeq^g7ajNI&dOUj,4=[F2#A[aV$H
%&^[RF$L$3BUcFiLWR^;4qH++<HXpF_H?G7@Pm4("FjM*b.VU@e1#T*!.nr8J`D=bXK(,.f@N9ioA,F_m]:$Z5&_PWB,#Z@lm5,Dn
%4*BKOHcdIr<kXnn;1;jqk.9HKPq)<qot4^.[i,2,k:7@Fe*2HNV,IJG<ZYV"bGW5TBK?@t[(Ku1&(@!Vi0aG3oD#VuitV53>c-Y,
%*>?f=]hJm*qkH3=,5.ILSP)8#L!D8lDS48g.LD)Wc-^dJd'a&4)u!=7J!#W5gQRJ0oa(ealPei^OOJ*D<Ze-j$rDIUD#8D1h9L;X
%d6:4.Zam;fs1%03(7&lIq6#;19-L2@bI=^'AGO%#f`iN-'2a[#ZUGSfQkM,q6!20AN^Ctd=X)\MmS$.2ge[Z#702=HTsJ@,5psp0
%0<XlV(TEKeF/\C3%s"K[X<7+=WZNFKE7ZpK8GD/1fB-2iiiuGR>UGmsjU!$14\$tY-U2f:%o8TcK>Z[l;h*dS6K[US)s9W.kOfXn
%j1d^iT(3,hHi9T$E+HI/$bfPIZM6HGYm=\5T<hk12(\ugAj$[U[8^h`GU<j`Hn$uPRf\TL??qL7hl\V][<`GWr3$s^I,)%flT(#=
%4_N"@bi'(QcJ-Y.>lQ;:iYOW881]4PoCqibnV`phcT,=P,ks,6#P7anU06Ntig2WSj!ki-Jc='g5kB3LBCUMN'LZ+EeX5;p/B'cj
%Mk_1H&TQ(S08.TlIdZ4:`Z-&Q\;m0S=,b+GV?O<GRGV,_]fo+mjD*:(=.=t8]^"X,h3Obh.F=LYj!\W'R.8'BJ%Q&k\G9Z4d9'@)
%`aP(j%b4!:j-h8Cf1)%fUnZhn5t*"-%Z?4aN-j8I7:TBCpnFLfW+]GFM?Z5j&"c7`o68ptWuR/;cf,PrT7..#(#@.k=4N<kGQbu*
%4FlEu;X$`K3rb44LR-KQpP6$MKC6i$jduEbO0aoH8-&=OMGc/'XCcF0T9PMKrQ7o.rN>AWRfBNW3jUO324VYAG3NqL\Op^Ar3F1>
%kBeX%S41.NHca\[hco/gMgXuccM(3V"C7gMZ]OV"i@c@POM+*"[n-90$/Zrc>9nTSKPr9tZh[JiR,m5(A]`uUq"Ho+CcZL\Q(Nj'
%bGeULaRWpdbL781?L[lh3O"80FD>p3%UdWEmiL`H'_al;q(Ei7RMeb^[*?0"S#;.n_K[Ykf>;d/<W%,58^ef%D9UToe,\)9cgdA/
%jdq5Hk-[$Pj-oB>VI@iZ0jJe0':?p(cFP`*ENWu[SLJP_ChN`g\halk0;Utog)0%aY\'kDRb<1lI1!OMV>\rPX8TT:>`,)M_Ki!.
%nf*@5_lor<<fD44.f9cSC_'hn^X4Z8ltqXQ?DgZ"qG"`ThlV"'VoqYoG0[hF8V+gfEB28N%$tENpNg?PBd0!KpRbVYrKeDtWlMhK
%8!^ld$*+g!(#-5"rZLFm,a"U:q_etoLnm>rg=Wl6*bX%u6CQerr<&*1Rl,%EmJ?g3;cL%tl]"BFj%#*0j)LpcU[iJrWK(b#^X>iU
%H45(!.+p&rWMOl$*CF*I)NB'dYG?DH)e=6Eh0,57!_#AX$E:1(ai&;&.^`Hn?iQ]%Wt=p'Y\LRMBi(g1#L1)<rVIF0&`>/I#u`8#
%M1:i6O%Hj^67%>XMK2<`rdlhkcE'#'%/]A>DS)=V-P>!r)=S>c@671afY6@hU=-&#;lTZZmomOI4HQs3%jt6&+E;gmRlSQ,eeZS=
%SI+DLO-:u5r"QFn*4e%oCCZE"UiMO&DN4<'7HMKk'T(T(/BU2T4S*M-,n1L=`^8"*3D1+;bl1b0'I!&,/BZs'b2OtpV/4%3S4-#%
%`3jSFF*/6E<CAY/rc?3_Pf6di=gi8?E#'`/'%b.;V=HUPDA$RB/BW+fV7DV!C/S2o9??<so(%,,E)s!FKF:O[^ZSU%+%H1Z<F"Vm
%k3o:(VTk1+V^EC?ht7Xof?pAl`ZH>9&q'WFGkJbQ&"Z?k31oZ[c7BC[s(:Imr0mAscn,[^<?&L`@_+78J&'Fea_g@tEN)qG$m)h0
%fQ@%ch:dW]qCp:MRV^=1Z0CJ;^]*i!6e>SW[bhq;q]7mF(N!0SIH"o1h*LKlZWh-DcG67DF_e5$BbrRQ[8:Qol=[3B'(i-YDENID
%61mA!nq6$t<\=Z>LbIpMTJgD1Lr$S9i\`lo)t^nBd4=eF5JMZ.YN<@o_u@u:hZJ"GhJ3((d9igc9-6>)?$m?pPPHUH'>@TD#JB!,
%!uEKt^>&./:Z6[&!Q1,_Uf`EFAuFSm6YVrOHrC2gr9nJ+>7TRClZg9$6jC@2gYa`^CC;)q#h-+s&&.8)0PkRQ%Gc3+`NUpIo/;BA
%k]5mr5OkpinEha5r;\$RFu(4(Bpm[^E:EoC$"g?V!r"31%M\W8e9aa+#XP=dG/)JpqgG*!gHRu?J/j;=aEW_\dML.^%/Agr\mrjI
%,&n'_l"M#/>75*nFT,6][;;Kd,5ClHb`T9'rqari22UHg+,-T-JWBm.W[m<5N>4Re+aA*!8k3]PV8>T-$,#-2lhNmZEd;(X+-J].
%lK':9Vr$b>K%,g$Sd5*\[0"NC(Cu!R:YH6tlMj:)l;6fV)'it9G'/>iaMganLjS=[JSIHH_EVP%)&a]:45oaT:C+ae0Dnbdr'RfL
%o9jf_-Uo&!NgK1BHH4nnh;60$\-%9O_UQ@G=A:IJkHu\f8Y)Gg5CJ"`@"G,/IQu(O8[P3?q!(NqS*EI'J8;Nm(]MpsM,p?9s%/pZ
%h[)"lXLrVENn<sH8W"1T\;W9"]lN7BhC,IT:N%![FuG!nnZ34HrH<5dbhm=RdIgfLK2M97?tdt]lCZFm_s)B`r9<muQR_`)J'<Fj
%?NWsXCXfEVA&`X-dcUi?I\eb"j`J9.7&u.AcI31EQNFXqa0Ksh)8U"2d-U!V9s(,:$@^8+:.?-69_D=U[#"4lP-,i`YVu<#HP0X4
%m63oR48rrDY?OfmligS:BW%7),02h9*Wl;[f0<jqk9WEA[U4>YDKhS8EV;4YcI7*WT*QGRN%"Hp."IV&3JLqVdQR4!&5?S-Vmfr*
%L$!'HH)`$$;iO8EgHOs"]j?R$lHhS$n?X;T;fHQ\G@>5M5Fi/'G_]G<Ef+'_BahS`-5amIqAfa3#n3/<Q0DWo>LpG,5F]"!c0<Nd
%h<EO\p&Cm?F[_t,$%@?p`34"o$N&X;HC@f8NqA_K>d^Q&l._lZW;"bpdK/^Y`*lT^N'CN)M0nTW=HZWJ\m]!D(=kSG0b`kdqYa$g
%dN<[Nq(dluro_8UWlY^`<;IG_N]Z6J_tRpO=JC$\)*NHEW83;:[+3,CNV5r?ESu$FNLm`'A@O;TA?jF7A[iBKgpWQKFSdHQ9"1+c
%U1;@`)2QH;.SU*7#/7sZD:9O:Wb5(9fWe`.D<lL;;'o61[IJNq!9qsu<SBl07b5Vs%9[*Bk]\PZ?Dl5jkMH9noie4os)6g+L-7f+
%k[pZ8+b<<WdCN8U.8!]_$CJ7`N%c+1?FWsPlZLoR.a5[7e2m8=-p>-.9Q&3qB+?E)^>BA93JNV3X`jB34m2uGm6PA!f#r.b*PW!G
%dM!`jd@&.q9CP"m8%N3AAcSoU_@)X[pIam.6q<<3ZO[@ohu2tUNr6ZhR8U0DYFO)e:<a3*1q8(L6,*LM.hWFtR0+OAC(S3X[pttP
%rSI@W/k[:0rE=WrN*Q/md<So2Ydk9fHdKm!)]1'5JAd+/582]peO*I\mC6)/SII&]IV-@N#rlQda=Kj$R:!7Xcg:GarPhZW$Y(-r
%LEK]H[qE==+>JZ52jr+OST_K73GN16LPOn8J##ASKFikZZ6+jJHF1;Ja]GJY.!2Rp-5n:&WKdUuh'AL@6((E=5'5qkY9%"2JeiKR
%eaqn<\R)(U<3)/d%m=i7C;f9fZo^KBV]/gtG,s=65d:'-GCQX+i?!))X3ba-.fIS/V)kV2_a(D/otRCl]rAJUm2s#MU-q930r5g-
%.\uUni8h9$^pAJfC\S/k*G*58brQqb[d]!#gX'i=A'W98!\uTE<.@@CA]/-@YjrgT.77Vf@aT(eMB.7tcPXe:=I8;"PhEZJ0.Tni
%VtJKf'"(ATdt^8ZBt\h\M!;Su3GaCOg<$joWFia^ceMl3UbaRP'53NLW8aK!W)k]!$+o9sEu62S!K:-5+c9\#H2J:>C77<j\Z$V:
%?gVP*C<(jQmNjq5,OR!L^LW<Cf-_oi)q2WY+ULUFaH-d#E\7\%/R[d'[8FCJ!$6;5<PR9=2*:c/"i&G]UKc4E]_8scO@/-jN<qbh
%E:-af47-c>Ya^HcPP.cM]<A;a@l0Jmm;c0RK:?%?UO0'<UcG6gK1VLDl;+.@_W3,hb#4>dBc@,aG,nsfNJJ5Dcsbncp;BEEjRC-%
%e.r3)%L!dD%`VO0)&jrV\H8:+Vh:i8ba\2b=IQqlI^aqW8sLLK]r[fb5)82C[p:%3)JT^(*16Z?<L#5J6&<,`f/e?q+("sMnsa,_
%#"sI?__cH:/ENZ^i6b@L?91.>)c%u4=;M<O"8/cd!6Kql!#jMMGINJbf]_uQ4PbTf-R:iMjtm@O/$47`"!MY1,$g=!3)<bC6V2GT
%O;8]>1+3!:KM3KYNWbXoJbJrrp4]+]"u5<kb!WRr8"0F3<9am*3NYqE,scAo(TN5r_s^]g/nHhShs#u$R?L7<64ZkVA-IiigYJ<*
%942Jr_2EJ$IU*if*>haIENm&4Xg:p=#@YmI6+,+b2T'V^Pj0YnYM[EE3]2S+7*6p(_KZ>io1plh7NZqM*L2]1Koed@OC-`i=ebPF
%gb'Y+$n/7uE<6[]=7^e3ZW>Qu-fKZp8R*U$=%+em>pp`em&XnL=W\\=HMB`u!i#51g[Ys&;rE,Ci*8q$H=LTJ*P=r`&u"T(k-GLN
%9^*\sm7o.D)7gbi_W96&4J-*h;]$NQ'jJc/"k"./P,X?W8R^O'i,;iG0S%;eCrglQK)sN)STaX.3Q#WgaSH#TUgrU"n]+:JF;&1/
%@&8'Fml)bfM+WNLEAS;&5dfDLHe-6cQP*dq,Q`1*=`EW`KSI@3`*i`mH.%3GI(G;':qo)/]s*/gYh\F/mXN+]Ca)uZh5g8`.^>`c
%SRmRL*TO4>Y>G=9A&kAm?tLcZL7J*eg<mW1+\T#mBiKRW5_O]gXklI(#!i-5,HU[#?Tdhe;<aml;?BT[TQA\saSIKI/o&kNH5J)+
%PU?NBB+Rq=$*^'OrH^\-]rYWig*VIV=hl_$8G/15>4&a[dpPp)+IWMa!J=KmS[PH4@3>[BcSYU]`F7lrUs^7id?9h%hIa?7Ld?ga
%@Hdl]DlQ!P=a&.U>LEYlG=P1;X\)F8V_N?4<f@P:"l*EXZ-Mln6p6Se(;*f7?M&uV9E?/CR0'l;cd>3!F5#nlCQ2r-7Q^mRdlhQ/
%AoGS+]tm:5mq._.oDm^OAt9bGos,rf$nNb4<%m"scRSn_%+,n?N4A,Vd:E&@5]DL\.AJcm.V6bdTccnCOLtbG.S:s*>D,/CeGO2@
%HUn8Y)G_V=Tt`\BGf1]l-k1`M]89`:8YB]@TORtu=-)N='*(%.RK<hfGOhi&pJKW\F!+&9m7qee2'[q6,k_m>D(m,Y!/R4?k^Qu(
%+#?EA*fhSoqTsFJ'<.!^_G-`C/*1kGEMAkQH)H<Mh-.:S_VGgVl(Fkr(m:dAW(O,@mS=I!*_U+BJ`'9?0pYKZ`Y6U1p:0`EH^N'j
%nP:ooG,5^`kJsF:2gbEDQS[NYETXn?;-u0@9k#:H@F,`)@E'ie-0Nh@c\i)TNBjrLkC.UV.#-%fALH`t1nPH)?;c$&(jr%qNX\5:
%q8INBMCGff)"#iTYqe>i1D;4h9WJebcQb+DJNW[CP(a1JPK%R\D]#R";=?bVd$hm&K^45.lLt.![l0LO(`\3uOQ/&mS)]jO7eK>"
%os=A62T03)6L3#.r`2+^(hMtaW]FR/&ua+*9l2,=gRbp;*O!B>&Hs`$jl2Rc>1]J\W?tf126__<2)'X<PL[(Y=ER=W#BggXSS3#%
%@!Ib4_/$32j^UJP++i;f0"%N9!DqK7]EGVRH5a>=b`qa/i9:B&_i:?,"/R92*-%?Xd7N`0@(p"JgMcHUh,?P&gZXb.k.hXX"qZAf
%=uCRpA(Vd@:4I5d*CM@.j^*%BA4eL]HAZV1-$$I/CV9RBO(lUsU'StM0Tn+63K1kP-6$;qB"QG-:eCqNir[dRbCU;UrF5S)*F,(A
%5o"&N":^mrlam*@ouQrCXp]pbTb%%9T5a71dQ3E"p#[n'`mh'A$+%&pCTn@NH-OHH0R+%l:<0P4*g@Eo]MUKl1HI4R&(Br<j"b*:
%M/H5-mXtFT:G*5-:bZ1AU[:>mD-c.#Sr0IML;b6gfWc[O<]_?Q1S>JK@]<s$X;dHKTkHEFo`KQ&G1lG[<VstHMIJT`A(1?"<$Yno
%\/i=Gg_jORaN0'LU!<k=?p2lg9Bg+*T_'[kY\C7O8NY'J/1WK;/6UGUl0DQua<J'g,-;^,NA)U$^`u$2*0nUtMMdQ6Q3*'`/5&p@
%O/f?uC=P;Q@t\?H?+?HGM_S<g<0cgLM]%Wh9/>.[MSZ=RC4M`t(Dt@k=R`mW&Y`JQE`#Y:(u\ssVP[O]@qO`t"i7\L',7L!TsVlj
%!+NQ?oQck7haD9*I$CN_eD[GRL.:8Rb#;d?,cQh[-9TbBXF1[D%2b(7=N1n(8OBangl\n.7DDpkeiQh(eNte-FWg2H.3&Sb-cO?p
%<aX]5K"c0<h5F+#GmCcTVL/tA__\BE9;0emPH8mk<ZE#>e8DnKY+Bjl9ut(u[.p%+,JciY4m3N*_\50iO)Pdn0Kkg*WV4ER:'[KC
%cU(a@HPsG^-+Q\ao5kYEPaE0j/sS=Rb<T_POWWuY74cRu;o$#`g#G`2pj#"^5&/`q1o0[9)C%bFOp\Bi77]Dj3KYD?b8S9TBnn,a
%$N&f?"I[VSoad.EW<e"^*5[3L'U'&dN7ih$%M7Mc2chA2.$ffY]2ac,$r43F?m[?jdInhi($Uk74q23uKWC;KU0\!QhtDe;]:<d+
%`:e=#Qr2T;7']<YJk\''W(\@HFHA%tdLN\l,2(bU,,_sn?o%<`GW4u%KQC'l2e)*MZQ\^eU59SAC\/oM*0TRR)L0@"Bg(7I^')/i
%gO;-hMIm,p.bgCcBYt\I3YP%A,#"1^%k61&n&ljoVUK5r1_RB),&#(u]BteSJ#DkdmtOiHhn"Fp'PkL,/u#1!JJ(a>B0'Li-=tu9
%H9U#LUZ`#;M;AeDYL<0+c3MUX<i$k-jIPG,P,3(AZNL8eCEY+4W-V:SY%g85_nu,UCDZq!hPH04XiGd45HJ\8H$F8&noj\oH$=0Y
%^X[b\4C:<gh0;u7Z+>%\:p4DV\"-Sr9?s[4X]J:>m95S&G<Xm<h<GKMU0KHsh)i2Zh9rZ:nS@Z2<P,rPnMtrGCNHo4gZgp\*l'U:
%)`p!i$L1bYJ+iNrcISlS*u=,P+'"6Pm(K`f\TV`V?p[^AhcUcaTCe%K5NT$ACTG!XH`*4b54"oF4E><Kb!kXiS,CmX]f.W>nPjjY
%OuV04iLPkX00aj.*>Pl`a3PZX>Q;(<Gu=RJ[GK(b=,O&&#3D[/[8WHIkZ.T`3`8*=oL@m\>E-,XVtoq5iEX%I@he`Z[oh1)^27^N
%^A!?eJjoD@T?f^1iS31,`U2CQNVo7BolfbBm8f,]n[;=7^bjp"V3PepC;4"'S6O#QS%1WCh3InreLrFWKmU#G"b1LkdHbGSc8VcR
%ap!6pYEVe+c?X/1HVb=1qX#s%p!:s!q8SuGpXZo+*s]?I_n4e;J`X"nBBLU8j(uC-[$>E,mkn/fmVY,uc&WD$69OJ&R^m<Y>@4pC
%f7P6I`Flm95WNi1(N3!L[U(ULVuW%Sh1nX=X+%c+p7%#Y]:D#fL$d,hDb@(%N=Sr?DLZVC4VEJBkEX<D[1DTCafS>qm\A>R5j=DP
%rt_p%KCd*.fg8S"b$Q\]CJmE)f60"Le#hHcK?E?4nr8q/?(ApN$_M,I!eG'mPFL;BrNYpl]ICU4^*u3Xpqge1$]eo41U]T$heF[&
%*gKccio@A#EhG?%2`GJY?[O2<"tPGup@>Y\#,(P5JgGdOQ_5up4?t=PU,Mm<^3E?4LA:&=jh,fO<c^dMY:IT@#LC/M.[>@io?PIY
%Qeq_4\$'h!L&?DioW\=3leA?11RKM-]fS8eK"cGDmn:^tb3Q_52Rca?IXQ9BW./q2Cn*EPS<XJ[pN<.fUG"qReCrl7mbtY;oA&3J
%rTE;%EpYkc8(!c*!(ER<ahD#*r4;HY;0q<5Q*$%@rls6GZi4>H\KTs%.&!$u[X1@NFU/nm=27<UQep?^S/GZl*uD?Ua"<M9@.VQR
%\Hjs2Is!'pp-'#Y.o+kJEtpK5HlepS#"0iW-;(:N4&9n;cZG>>c'?SoQh&Sho5%1V4F1oshu::1.u@3C)'!mMH0K3Z\T$sV>a/94
%ZK4nh5nDh[ak.T!C+-#bTO#gSJD@9g_V'46-T8!.%W^RBnRe.!qbJ07@tWZd;Hd9fnWMPa?22_R0MUtK\$c@Xk)i`hn%?8'=tbFr
%i1@RpVk?-u6Sk<9];+B7h_-YO2`AfIqn99*kfFWgk]DV!i)MolQ\r5m4)92HanB9<Vls09f&D<8Sbr5drE;#7BYA<HNm?P=L,#:'
%"9Wa<X6g]mq<j^HO?5Eb^B`RYh9A#346P%6/f.=P4`t/Gm;k1BV:TXX.Z4cm4TBM6QFG-\^.!DKV0HI?^WF1#;shQ_mcG">4uD&u
%NO;KdDP:FQBgR@D1MnptZ.,b>2kT;,&QA`/i-ltE(@Wmfe#dC5K@82cDf7tg1NX?8HDrRC@"J=9#_;e`ARi>r$MM)XbKfF+`eW@.
%QY-JIe]WBog3d)F!m$_[?k7GKk4SJ$j4rVOa9o*`0\S?sBl8'olZ\b.;+5ohh"]CI)aZZjgsT!DT-!4H[H:u4HKT`[HhQm$#Cgp*
%i6RaFH8U&Q.'MJkHN\1=!;Oj!!e#]8W)L'9p3&`QY!%?FVu-*6?.GNPe;DuOAT(qil!Fhf<m/>6=WZEL>MA\F[u]UBbP=M?6Yq#:
%gWcka1pfMSq=Bqnf!ShE(8rS8fn:M!3B>gALWAmbbKHsb]hJKPobcOLjMGU:,ppIUOdq.;ahC10n!2hcNBFke3Kb$gE;'5\2#pO2
%Q\-(kK\#tiOGQH6.IBPQVrgkoiXCKAAH&uWN"<En=G6D7rOj$&mGt?MUfhu3M9Dec`97AWp[YR,n1FOsAJ?DE*).*aDZmWF2g/.r
%PT-JM/gj%-pe'"o8Dig</=&Cm."sL>>e-U.bC`o@>!@psK.@O5lbmZQ>]I#&?7=/D2QFBZ0Uu`SdRU*tkT:\B_fVVe\0ph@H%`oH
%W$=#PP=@al=4jJEU*d4h&EO2B3;4Zg,1dNoi35^B"9;kH&@G>ZVikEjIuqaM0_!QtVrhW.P,'Rha2hLRJe3_"j04<5nDaW%IBj)O
%iM@#V)LR!6!9#aH#so8XEc^De0h0'#667p2/C8As%i$4@!?.-GLcl$F&-ur;dRL<Xba9'WE81`l6cMbLJ9L'b4@HlT4*pk<"k/^F
%meKA7R@G0mO65P-i6T_mb$T>LXd<t]c^nqOah"MSP-s$U?55-%hV<F"<iCL3hC;MY^>3@%)[UfVr]UK<(dKAn@+"1Oj\8VS7S>>)
%XXud"&9WJLq.&W@A*K\AhK/#U]d9k$4uddoI/a%J5)N8;fZtSFML/Q_T=ZJ4`\mGa1b4gTXM<+#a.$jOb3e/g%rO"LJ@t\8rq8j]
%\pEukn#RFCO^qP>T:?Ypqk^3Q+RnUJ^^Fj$K>io>?3JknTEFF8k2TdCgrA,jbSY7Mkdf8nY^>joLML+HeA?\7Mn'P@Bg^kQDoed)
%1mcLa#W^3%@gW%qM_LiF)qjZ.0S"Ilk<]AnDkH,?k)PWtNqP]u5pJt[pf-I,ab,b$1F<j2oNrnp:HoVekFHrR_t$Cujjo4aq3Q:h
%odOq5SitJTPZL:$b!"e,'.L^AkBXMGrDcgO-mr/ZCHWE9)`pR#]iWNGk!;^s<t\;[@%&bW@]DV4SGRje4NTOPZO]FVb0X$pSc2sc
%ai,8BPjIKY<b&0!D70D>F7[?A<]7#qS.S0/h&2DVD;M$jF,,aW($L,?9s5U#hD;THh=+ruI<=?OH<jWE[>M2[7S<4Mi`>%9j,J1`
%o^T1!JPTE63;YgfZ+C'_e,H<].*=TJ0q\%R`krbSKg=e.oie\q+fh3.l&=cu:;4ADqNq]r''7H3mb]L\>(\KJ*O"_5I')7SnA,ji
%SS.bbqcis;o"4#l\^&%'41U\2%UW_"5[AX+eI7YYp0CBt$r6N(SPHW`UpoN2s1tZh`D)^_EGD>djfNFpr0=\(qrTWXYb=5:pk&<T
%5s+`HgC_*l3r,\!CQR/pH`k*Jh2(U[_rmQ!nU)puE+FC?eoPf<[(=f$q<Vhkrpm&mVX"]PA#m!Qpo8seq0;_T3T=dkD4Z,mD7t5*
%Ed.J0jff6Od/+1!OMm?n*`IH3\lO40^&KD+/fQ`ANu0KGj4I1+NR?WWemu\?h3D;dRMqZ(flTcEOZ.8SN[tAl)=lDQBqaCa42o[V
%%hN69^(lBW9Mq=q>%]h_b8]BcPpW!sPJZnq6*9J@N>L^<GPh?oo65M?)>WdtMd!C:oN%4_0&8(MhKu==$Vt]GTj2BjGa,'$"^1s#
%=`5A8li*6_^*M7Xr<N-fp-=CQ%pNHnZMrjKql+]8q9B4Irn3:5Du%^PJI=OMU^mm<F8HGD_V7O%K_;_#ab0?\G[s/gqu[ZSU^Q'?
%"2W^Y*6+O0_hh*ojHi(!SK(#,Z@TIIFLb@Vd6?]o-1<.I_Da+<L-c$R"S:3qk2TNeMqcMQLV3T^D)V.Zrr-'gi+StbjN`rb,(H<<
%]$UM4*R)D+`U+0tpFu_0+:td-RtotVV*OXXgnVKj&'N#&m_13C!m1!Bp\&@lg!]Fh)"Pc;ip=qoLkU%oj7N'(H,?Wu\CH4<C$!'M
%9)^H%"d!;dj8A)Bf=1YU@-Scjo[s\O^Jd>;gIKr)fS+Z2[-\B"2WXpi^SN^Wmaoq:p%l@g]+F2.@cC6;^3b/jM)R.cHY)59qnpHG
%+Kt6l(Y+MY+cm05oC<'r266q`^GsuHQWDl0FYK#fSia=&T:Rn:p[99h=#Mr]Z?3,P^1I&/"-U^MgF%[kL"DB@"GF3m@%&I(\i2f<
%<;l1a35+u:&in+^Zn)da9o$/u')7Ol7=FS`&'Nk%DAF0QFr25m7Xi'oK57#bg4fCJgGXkt[?kYlg28:[&e!Q&]@udu:ESf2^%KhF
%Xc7]U)OAR#D(][Jf=V,fkcLBM<-pp[G[DMVhY[8`6WE`mG4-G;/F`I@Y'n$.58ka).TI0OIsqfm%r6L(*>+Q,%imHj[$[M2(V.sk
%:3[!X;B?WM?hU(4ePiXFl)etLpZ\bafK)*=HMaDMSb!n-jH;fLpV0VcEO9"#D\i54'nKZ)F`V?sNISCuG.P_VibCGBa]Q8QquU$T
%5G*n8Emg*F00[bFPK%K]jcOfYFR.]YNHYE(9X't^*pu##"9J=EGO+qdd3(4>,NmaQQp%CMD6:SJM?4e)hVmkC\QNebjCV;_\)25G
%:;.&60ZJ]kN<eYGk:__D^(hs7e%J';l/uBV\9_%B8$KOOqp$]'b'2b6c+QX@W8,%u#p/KnIK!\C?NQ-uh15RokX"b2W!iEoG1qnR
%icae>QR@""2kFr1Dgh$i:YX\V#q]>3R,!#G8'dK@]BX7DE;J3,<MN=kX3&[9mOI+CqmEREp;M=IaeLp]`#YGeL#hObpUst]%@Un@
%p')2WO(^6((B)M(QqIigL(1#*IqdTD],PZ2=F0Nq\#8C`aMo</Ci)B$gkmSX$B<tJm6NiZd!Db]SO]lb;U/TqrXu>f5!0:*cr*)p
%NMAlPFgJa0.TPjO9YH`t*np@QW85XR_qd*;iSAscSN@iHs#:Has1(3J7PMUj"BF1/qX04I^@g^XNS#"QP1HL,p6bIWgB^t)FSVl#
%du;?/QQT@:Zr6R&(N[p^f$ho'"i&d2=O1E,HLbsS5oZO4Ei_BNpAS3J5i@8YjVq[p2J!eIJ(DGq&oiDOG2ltYm<#ZR_'W3cfR:?4
%jVs3)Qf1nne;p5d::/8md0Ns>cf#8B7`ED"Q<V#2G"^"![!2Ace\,lY'gQ%5JsD,jL8MLcWnqh]6)J^u>;!Gk:PU0VDbgme.%T3S
%D;Mr6g&4tW6]P9)1_^\kK)I<5a727t1cF3T<qbs`!"D/r-,K+`0nDOB"atcI)eLa9-VjVPCU6lENX"^bZQ9Tl?d*Vd3e&Zm.!]1P
%_*%"rpHi(U-p:g]\blpnQkp:u\(3KLXK+V/a,L<6(egj4-/P5YEpf,t+8>H[a9k%6HX5!*21$;AqV<J@I]sf_qU)dLN%c>TrOD)3
%jP5sE=i<[hm=##?ne?\k[^L0:n@N4birN-VIdo_";c'G:iGlTrhB<$^LZS*X)+aV_i2AP:N2[b-`ou!8(ml`<Jf)0U+AUVFboNs)
%!H69O[t\G#<#saVcFI`DRi!M66UD"&WTE<FMd"ANrT_jI=$/)t/Y%<hh;j7&FE;6hV>7[sr;#L"?mg?3k=3"&\$WR5knSlHioQ&0
%XF@4%d=6WHDYUT&4)!8b6B_iO\FOgD\,>r3nbFsSWuS[f>PV$WJQ9`'p>:e'j$=(2$4i&-[W?M2Fmu[(4Sj69"DQ<_Dro5a<D$e0
%Vudq20so<UVY+KFZ%$uZiKguVUuN&kQqmm*=DMh=l.l9N(.gf,[Hc/N;7XH6Dli1n:Yrg8gB-7(o3q0M6!er9%E\1-:P3^N;f[q^
%VmY+@OYt!sX^>LsS3C&%"5JC6P\Zh[o`@2k)7'2%ZdC%b(`joQC#\0eL:HsK!,2/q%[abmKD<tU\YE6c-mYF/Z1W5E0Q4[^PrXuN
%?f$=Nl=dl$[Ri]]*%@Zr^%1nUO,E\t&#u,"n"/]`mcl\?H+,sO'+Rl(i_Gk,1@?YYN0USEMYm<#mKB/q6Xgn;A\G__m_]".;0gXi
%>'s0CHDb$=g@`nW\*'s1p8kr#!<1ujgACA>)Om;g7iId@D05:<EdsiiW]J=HIWp(J/m@!_=%:Bc0-M+`/`-Z0^AYdQp<GhE>Aq`n
%L^;KpYFaj9MS8n3qVg3#b2\8=5qbM*[].:p$jO<CE8tL-iaM@UrS=T3\-2t3q@>cgR5b0n*d>chbJO'UD6:>(.(gE)"#T'"a'7Z%
%kBT"qs*h?r+`=B5*nlE2k,<IfjJZUE2A5[03r=8_-_Anfd]JBUmld\dctT;#I:g/lq=8Ycf6VgS^\h[-PCXYBZ2!\*W>8WBG[B>'
%o>^L\dfX7]mAgo9`\5O)&HkjtNb@&``dc/c_oHGQhc[_e.E*G[ni+"$]MdHhnN[+V<^E::HDTo%V_Hi*]:I^5X3udXhV"ANXR.GP
%oWt028*ADdY4DT6r>",'D;_PNR6A,oV3`XZY8Qj.)m1]c2^1c.,3R[Hj<72A]Osf<l8H%Z)':BYk$Gs7F%6I/^+oGfo%i1D2#?l?
%_p8eJINI9\4T(_j_cH7tYisR1L[K?Q<*I*??[h+IJb@S_UY!gm,JQ(2DM[1f?"EG;fe`/27+)XaMp9Z$rC/)Xb0*8k!]L#bITV'_
%BADt6&&BJWImnf[SkdE,ocH?7s(UsEIN#Yc&K^qTASc2<3Vhu*9.-"i7?&A9[*p4.!25U*n*AMI&Vq)$B6:OkJ:A:rJl,<kS3&;N
%o=EerVn'ehmQRU;$kR,lr7?G*9Fft:rqPeD"8oG0Dct!)Kk4i&XJQA$a"N0aGc$1nB8*CSScN2'iEE*"[_/a#!)+IOnL+>/%)..D
%[N?AmbNrh)I*sdX^Yn+f?iRBRO`_,Rb,jj9CLqWsAt%B;Ao6?0><ut>HpjuI$e=BC%^ijanl2*VR@,OJ7o1QC8L*Nj&P(u<cDT<%
%bBf`n$k%18<U!ZFM-pLAl,"9,f(MKcL8jFaAnK;\Zg$,T-3B.DiHVLH+)c79\L9hkg:!hi1,R1N77"9C).q6SL`&\5!`l9YUa3CZ
%Nb&?1%[2c9m5QL'WQ0c6SQug8r\ViL!gY9<BP01QA=)D')/Op_"J@Z7`n$]^,=K<ua-8,#:aZBg13,oI531qoEa>,o+:;:Nl[i_=
%!2W]%!(LW+@&,6GCUWA'RkOoTC:5F%>pH#HL;Y6*BBOD?SrqPCSM;q,*cVc2%:'I%NHteu9\U"\4DM/Z@0CG%LP&2iI2EY&FGC'Z
%:TP>mAe!&n0K!7f-9$Rm"rJ18%cM"c`rbT:JScH)`%cj%cf@M,W/-)SOC=WL8X`oScN7YM?sH3HbWcX?:CfJl?kKh-Xr4Z.+L%;u
%24Ta/0)1MXG6^qh%SB)lnKCD8=6fpgTnc]3KCr&^Z^1(^dWbfs_i"kQY*mf#l:.H(RVVDu#h"Mp_LSed`s3TT>HZ-@Z9n:"Zmifg
%iMnF\CKZZ1:"'8pg(oLAUD@Ee[Rj2rX!o_q1RV>RBuWGQ6ouA#g(G`67`tkR&=>Gp1te$12Vs+b)KAX$,'5E@0:%VVa+<J\2e]O'
%2H^/t`^+T0c%llj3k$<!!sUA[/ugucaqRuK%nqgo'4rAYB!<i85na]EY%7bN&/pO$TLRj^,Ua-?(gRskXR#*2E`JEr[9YFnJn;4&
%>9M#(;G(GM&'eRPB*T]d*4/$Jb[gp?AN:g<&0S*jmmothdFR>&N_ZaCARqA$!r>_sPmQ_eg-N''Jn9OUL3"6j,J[jjK`Wb+T`WD!
%Jf92Z92HO)Nt46+\IpHU'kT]G_pR,J)_Oa$fSj^cn3DK:5dZ1fW(iYJ'=<$9n,sY%*/!74U$(GZ7qYntV.H2oAIMXtQC`e\4r=A2
%*k$><coG%R!*p8beQjhAP>!7KTXt?G+Z0iABk.i'=/uC4T`l^7ISF^g_V#>:V:3S55tGOTBS]>$p_H-R'9K9M(BF+f,`XfEi:,7E
%n(97]&*8k*E/B;$lmVaac!Wc@c*\g+-AIsAZiR@`klkoL=NQZH,7[L%QXu>IW[eR\R[+-%8nY@C/A24?d=e[bE^8*Qc1IgJ^c&XJ
%'%DekieW03QU?d.Y*K6g?_QB`bMbm@6PWo-0$qjq0fF/K"UU1sUKM!32:E#'R"Y[B8UXU#325t)_2-!-b9b!'8m/A[DueLC^;LNV
%icm/\"f`#76i[Q+0!r_S>]N*93Gq@j`?DAYLa-ua7=i$rG/.o"-[A^bfrj]FGaT+3=eICa[Y'iK`"\$hCbsuuL7:T2"ON8SbtQRP
%Ea97>HFfkR"^L*'&+U>h&/X)T.4iPH*7n,!fH,cg&:T89lTlJF,GUnsRA:EbkN5d4Xp8CKUP&f@##WS9_"1`e23nKucbaqZ'Z!`Q
%fH<gS!=GV@4:n\G!An6'Uq%3N*DfKU?ihT(bX3a.*$\hmG]Y'eJ8q\V!t<AJ2B+f:C3.JW8C2lG(k'hgAphDA\`Khri^"-(CG*ZL
%cj['BU#tUt<Ns`q]cd0kX:!]ecOAb`<^I#`L-]6=H[*Wjfp*IB88A@>+ETl-o[(Er0!KX_kSLZ6Ps]&NMerMXFHAWkK0;&D#.+D-
%.jKfX7g'/G9J2[n38dG^"bX9s3ss60&SR/>TQEPjmCHoV#!j*7\TX(M\301=8/T_k*cZFF\L[cU-;5^>Y/=!>>(J;4cjBmlBSsL-
%$'<(`cS0r>#o8P3:`RlB%6-,LU6LuJS#3^T>*=G'"*k?sm91isTn-_WFo]BU6#@1I=[AP%=uZ_.AB9GW'raGR[(tn9/o./RfI('X
%$a.;YDDlH;Xp:pA[b,JZWk)lMBi1XU1n5:&DId2k116micsPE8)c:9l6LQC3@W:fp`Z7?ii1Rc82D_QF?qOtNO9Ct.iooH<=]>V6
%'Z4J!!3M>;3FOGZWi]ccXG:YEg2np>J,o2_b=VgV*n&=Z9WeG@84]g)e$&t5\ntl7)l*rr-k8/G@GGOATUrTOZ"+DQ69<A24$bn^
%8/a0U4F"fl\WsB<=d9Se=T/qL'b&/D!jC^#&5?W'0LK+NZ<.S>#Gr.mRB1m0ON@S7:!II*X92a\$rUA+R$uY;6nhjrCq#B4,QMGT
%DqG>k!>jc=@1:\"EiqG-3-!T(29=l&0-GU\eKmLZ&'Y<g">=QqNrb4ep9fNBOA]c!_$160Ca=0P?nhdX_`C0&N\!IJ%dXGABm@TN
%G]a(Tijds;&EuM+fPa+[@llBR!V%M8HO'rJ.Beb_br@BflbnQQ=G((bCSQ4a).PYM>5/2oWaJ^<Phg:@*T@Vl(^K(LBXG!c*)P/C
%3+WNfaKTh7E=HZ.3[DCn(0n-kD]pA+943G?2TcKK-<_g.OB\F6(g(GZ#\*+?Gml7`^bi.\`J7/iK46J2XVlF=#UD%H>bDC6#pF*"
%l9H*nTo<Q9I"Zsq#`c\/8$G-g/d(E?$s4#*`eI2kK3TJo1WWaE&.el%71V^4kb6Zq1RKn1oIqL"kiBQH+@qaeTk`XNJq6)0NW\=G
%\f;k5G%:o:G*"L^\fHag>*=%U`$VVmGi1p,B2AcW#eB'VfMp9RUIs^S@M!L7$3Sb]G'qem,q.2=/_LJu%Ts1C:=Ik'WHJQA$nP0m
%L)&,HXVboI\=ojB[6_XoEEF,:<+Qt*BaJg&_L\s4MZ-.C1l@*fg!k/pXB>N(N=LuN;ko)XKu]1ab6:nl_c;dUKm"DuI<JZ<mU/"I
%NH/-;"T$QN+H%S96-mLm6t?W]Jq[X9VqTO>;^:GigkGuCC'#J0A=I(Kq2sB2eH";h"UGt:>)rBO;&@+07T8_bGllfT.p!hn9CaMA
%UfrjMd0LS.dBM7/hOJO%+_*gl*>m/R6366n[NRITCMA>6)FOkdFtk37%o!t8#bn:%lDmRs8Hqp,2.6NCpQ29jAnY7gLRk\(0br+=
%+iFN+J7o8:%YiAF4tAgKk"<KVUgcA?\&1JN74LZp-,X(#K[`@:,JXHanOSDNar<Yc/Pll6*IB7HQif[-^`Z-*l[];oOCq[ZG\:E?
%mE0S[;U#V-RaO>dSr?mRfVjFtj$F#.)U^)K0Q:-RTY$M[:=u**JGaq,R$/d4'.,/Z5R*1r=JuYWPZe2bfGl8'L&d\jGh^cbI1jjp
%U18N03]mC1Il=]c#IeAL%W6)lgrTXX5Vag;3BH<1]$%m@@nUVp9VNcO<Epih7apt)*^bfml(g"n%a8qr9d`cs828JhU#\H`eo*]h
%`19OqQYV+p99+P<UpOP(D6=sj,PZAF&6Df]cd@;c&C9kbT\Zku!#0#X4\4&4HA/NQJ:H>YGS+KqliLlu62%dl`/MJa'#``D^oE".
%+Rbq]K.0Xt]lQ>p#LFKbQ=XNrK9i/iL8?.l5Ign;\71r5h.!Ot&--`CL5dg[:5uhZ@L%/l@)f$WC54@(7lI]bO97JT8)tMs!H78Y
%kaI)n[=R2C'IIe8L)'asb9:7eqq.><0LYP"2L5uKKH*YA<B1+'_+R/\\L:1^5Gk\e!&"Ta\8#PiJRK3/H:8#fC_IFhAPCl*V+/Mb
%@Bh?kh@poGg^>Hc`k&[WllH4TL*qPgqTA%rQ`4b0C1bXYYYp3\KBIhn:i"EP;ZW@)@WS;D'GG[l$sb_gd"6<>/'MB14KLg6AM_:f
%S\1V*@?=3$Kp!P#c+kcZKGbpX*-R=%Kj3<7_n`]Lp)G"T<hQB'nDZnV$#YL'^a@5*;er]k`F9V79Y`+97_-f29$mo&$9S;2aU%9o
%7Bqu-<I<>Z.Ue^/dPs-"4BWnR)]+Z:G+AeN(.^Zp*=JSgR0B'#'K1OjncZ&p2b4?poPfN44U[KeMH#*C?jo.c(_!!I1EBmX:c?-2
%f+]cr!nGmV"8Al'g')KCEgUAX0uW!Pa!$FN]8o:r&dBW3F]21h[PfNN"D"bOkcmphCoZ<!7Ukp,/24;[kTr(0cuc7PhuP!j,:c)H
%MBH:DQ>?B]I>*\1%lSa^L7mu9<_-SSgWqD[*0D(#SR\tdH(GX^&-6(3X[$-D0R8;$>dNJ=+Wd>F\.=J0KIBhZaGFD+JAf;o0Kgu`
%@-VaL:LX?^X*J7R"dYT?Op6O?/Asm=\?4^4('[r'@PKbJc'%W_a'3ctkU$`/.:<p.LVc3Je(G.G1U(3)J0<:Q+(ue^+Bo6]VSu$`
%`H7,G%h>e:+Tq`H*m:8U+TYWfOlmRS?,I[G+kq^)5moSc>]%DKf;:qBUsKmaVi-P+,t48ue++2,,eQ/?lNW&MeEBd/"Tmoq`kfGi
%7AX0i%->>2[[W#s71>_3<bqk8a6X@:amb[]cq$/7%:GsqOmS/CIg>;Z"u?K7lR(>&Zne^^fOilcHHADk0%58[+2lbJ!<T#)5%5[K
%gVhZS#09C_E&/9JT!Jc]r,#6<_[7gRnPh(?8'k,:D.^+%QXK'*:^LT+H+HT,J;2ma+J&ZbW:ap#eZ`^86W^)2\9&#mLn[K__8K8U
%0V+%)`UK80aD,h5i(?9*23p_eIqLNg.>.^MNZcGdE<$)fR8bRLGd[kk):/n9TVSQc3j-I!bD(aA%lB&A8mp("1-,QZ*%XCNM%LhK
%=r0RsD?L&WF';2\L.Tbr2ESuEBZ0BfBQSf(fP"XrNu.n`=@:mmcj3ac,0u58BSZ]A`H!&S:"X.5^boeIn0j)9)^2e4Gn"Guq7%+W
%3aIB#Tb4ar$r]'Q&@Y!$'?V=RH<eG@d5JO%_#eTf@GGKBLOt^uoT^SbeNL`)JYD]]&Ko_X+`,\F=h"Ie2H,i[nEc3mN<83>a@6Of
%`^BqM:W"k;6mq3]Lo$3L)mW>D$G#6%f\4CcY0B<qTIY+jY)I,2Ud@#,%1=#"f*1gm#N08JO20MC3.N7CYT!afBYhN+!5@YPKu$7"
%_Qu$@<oi9ad%SE^(nqt$8'pdFO2k]3BL5Z$>(ujqAD[R1-9;uK*KPr"I's4u_+'Q8fBG8d7TEN+2_]4"WLtGODNs6E*R#iI=17S%
%"P_m5JSnq/%^DrX0-o(uKLn`RgBn@#;30XmNE$`4JHXG4,RedU-<%s[r?1$OJWZfQ)^3YJ@tZmF+-9]!l%J4&H^2s<H&]_W!Xj<>
%#O$bp>nLYh;*h@X$,[@<3G^E88OsIZ?h$sPK%/1i5pI4Ob>l>kFeB0QI/mq_]$9hVp"sml]7YfPk^Ya^_>Go?a1sJe*#lFjr/b,4
%OLIL3Uf#)8gE?e(.Y7g,*'MgXL)<EGDod\M>nTD,;@u'`:83:+3Z\D(n)E=FKNs.hGni0Q=HZe%4%lT\JJf\F8D*?V-4Krg8tV'%
%huk2c!GQ^N"mFq0"!f+).:ruT[bI/t6DL+5TM(pseu:kS0f!;Z3&&?;`tGZr(UsAd@b#T0`-Aa)KuQE>$B[:0"XF:[ZlFiaPceHN
%LCk2erIE++(+-e4ks1^p9^t9l#a?<\'@YmA.1_CKgF:2^D*2M:`YYb_W<+*%"rFUL?0=Jp$?gq?VO/_oJ;#@N\Br?@6^P*/]4)7_
%>1BFU(?%7jO"82T)>A6pGUlV>eSnUF689&".=o_7hMI9'(gA1teoAmbdVM%_iQ>QL;&f9g+/2'ek9@K;4=L9[11]<s-a^[_R'+MN
%%$&j,n44AJF$*PNA=I0%5q[tF6$+tS2<1qVCbqnLdjZ+)TM<JE7YY[,=`CX6Y&gq#fdl!<BIZi7WF8)[<Od'<7Sr28:efQkU,36/
%3jtG3Yei:h;Kt`n9a;/BEJ<3_<6A:IV2*@K'PQqqZIA@-RZ;5%7-HtG5rQ]?(O-FOSJ-Tab)SheC;=[=,k#4ZO%GJ\eP%#d=6pCI
%>tsBH3_aI-GbIR9]^]ArS-SinLCnce"\(F&*IRq2.gCYL#:><:+-Jr6eSRJcMTmJd_IGC_3WoboFjPeSl*63t[%'F,i7_#Z5pq1K
%[P"%8kWh8':#e#sfESSu/-q6#m],\sg)DD0k:JY<p+X8^HpJhKlp%C;GkBAd?#uCEOHsDLOdD*IBjl"f`[R(M@>Mo2!d?uQ+/EXr
%*/'1a+O)\:0d.=]q=la6STm[<QB!;Y/I1A@->!No)p'-\ljl+4V/i-bZjo`FR,Lu6k&Is=':DtjJH]Q($tl'@cA02S9fdV9>a#Z#
%%c*j+(PF4c<O5OIq5=l"/$;+`j>rmbi+<N(MLRc?I<&a(XWA6WYYF.M,3C]tSfkg*"RDmFQe!.3pWa6'R'@W+Tjc&F06"1$a%bb8
%D4/<b[;;8^$d:?0\#iOYL\rGX.r$l.64bqL9bc2Sbo/O9>%"=ig:6PRD'6P&[i&Fa_cR59V48R#H;BQ9j7,B<O\,?ZG^Rk6Nu)`H
%>a_keoJk;?RiSY95q?@3&Z">G0]JkdEPA]VK/*!TKt<pl!"b/!'=M=Oi6&J!cA%>/<RB4sA+$XE=;Z_W9K1R5`%=)fW">l&)N5qF
%<)_bXEs9e)X\-em0dcX^iteM!g]ZWRAM,X[)A+!N4K;n#V%e-h!#LVNHE8j3<,Zj^T8DYf@%!q>(92>-Tsr9[)aY$k)q#M2\N9<_
%cU_O;9&9$G!$`nuiKA1ONt6VIRr&a$63SF_B"5.L8R$oRf@%I`dLHQrh$>KP?kigJ8@MTgM,mT![iA=Hh)mg\7gnEt);?^:**<Th
%;Un1onnA4/%#\i+kqPa:"_j61K[iUUq*Ji!)6.N;i;oYS/#plRmpL?#)hp.7()bU+*D[bQ3KJU#6jZXViJLmpZ/e4lFMp/NBi3`D
%Z\(R'1*d&`HlNTb0d6Wp1Wr;$YjCZ50h?*n>^+%Cg]h09mB#g0Gi7P/A-#jsO%V0/h_jmoUkqCFj/QRoM03C8Y@+,1?Fp5;^_7W"
%F"N;M%FR77Dc=OT%,5$X[c#do(jMX6>J^!r(j?f6X7LqYoF%b/S%)jq![.dN*B\Coh=6T7<)a<"s.JqMaL`G#i22s'2^k&%d/c0u
%!$)Q&/3MM,gR]7MiXJNlRp^-[>;ZsO)q[VW]V`+J/WC8gRWae2j3Eg?\W2MNHGQ9a)n1b\'QM%.L)/WNL4hoIUB_%)k`-1;ddQ*:
%/`)A=-S?QV$r:+8TcAu#fW)E@B3qho@ERCdK1iThNa$O2fAM:K(qR&NWYJr**1R_9*LoY%.<@<?CJ]%Pg`OFofE.23QJ!FP)>T2p
%V@X$&!,M'sL>##u.A?Sr<d93JBUAWhdf(D./_Y;o._%bFbS-VokIb!SV1Gm#Sq.KiD$8c,N=;DDER`67(2dpX%:K[Ea$FE)4Z;6^
%e7u`S@7-]eg,50p1bWrmLitJb^ueb8/j]':#'`5!,6kM/G[hTZ[rA1l_&Ak9Hg"ruB<Zj-_$&V<A+9htZ6%WH;3rtJ(q6Vu#jQ)d
%FEKpeEqgb*Ubq-BKPWSE%h2>IN+I.bLma$Ll>Ct>i15Y0Y_Pi&Q%N9!THFgQ$W*`Dn2Ps#7KC3F9=)tnRIU>%qEuh+;&isKVb.B#
%s-[+SQ&Y>],7#<p6uN4D==ll<"sG[P"!dr=a>iOLJObG0'@sr,G%1oGW*(k)'$-`!1LYW\KG2;\2WY,FME#G`?n%!aIMd0R/o:fQ
%h-_(:hk<W`^KOMh*58rpk!W,YiMIJL_h.]_K=hd'b>`_='h0IW1hTqiiHu%1W1-taeUk.4Rr!BFa%#Z9;j08PNHu_!^:#7U+?akg
%-l=XXlHrVcR7(j(&=8[j:ObHl=odAfg>liO#1S#=Q7B/a;9(D.lt'(aVf#kW4&Pbo>Cr)pU^>Jja:YQ5&Vha#bJNPRniIV)rU@,^
%m'c!Ybuj;K!ko9'+";.:!8E/Bgk[:n`]"blBun]Te[c;JAS`BVKbfCRcS/N>ab*m=USE!OX0dM']\B)TOaBtHH(1o=F[JtQ,DS,8
%6]Ohm=,"8BDLd@t<Q?FFHh.(?2IgaE`mdWhk+YZigZ2cOC,=tBdL>E[6#"F8Lng.a@_#b"P@PBuG"@Au;OTm-E<4:]&_o972pj^3
%O@D*X_.$:S>ejGMbN3tdI([k+eY;QYcB*o)hctiZ:3`N`h)&Y(Qm2hH!>'L;"5@WB\0"]6*90Ue2\&GIHLW.KB3-70K/]F&&O7F?
%Zu!C367?=%+\*Jq9rn=R#<..;bmEh/F`ad[0k;u8KVZ48@cNHnXGd62Wii^5a1[`b2p2jte4b)O\p4.t%1EpdK?<2RgH*^Dnc#Wn
%FlT,OU_+)NAWgY,[),1Ii=U*'5-_oCo<c>JF.5i3T$0-FoAV[n%jJ*E]"3%6`eO[.[0Y7f6'4&s6]THpeqJgi?o#f]=gmN6=)bXW
%KDUqBUZ"C2d"^X"e8J(F8miWsc]Ljs-O)UeUrXh+Y3Z7._Z\;Kn1[BXqgbTDe8u`92mcB@"o!R8?mhnt1Vu&Y=U\sS!uc?UZZ<k/
%WR[^c!d"O0E@iX/_GFkpW#6Zd@:QjiZ@b&SDV-5OqZU4ekXEZ=82CI<1uRTQ9&q/ncpPk:b1k`,N7C7UL=KMN8qa&%=N:uEdh5/r
%3Jb4j=UaT65n,Gia+bS)>u:tgnT?^WL5C/=RpFWD_2!cr$;\?f!X3FCR_Ui)FT_)JlI&NCBFL%o1h.aW9WlG?JXNJ@3f;r1\aY.h
%,&"Cn$t8Y6NZbFNE>sEKL'[#6s*8tKSkG@qX7-!XpH(KU/:los<+c*PKNCNn-*0S%N%nG#L#=Y;#156XGVJ:74+D$7f'`.raQ?ab
%!F;7;qaBmY].,?27''Lqi]?,.o[3X1dJi)t[ef;_^An$L/s,/Wk\@"#MhC(>3#2dBJqNc0EV5;>l_\4k$.:m*)4Fe+kl(?+P=q6Y
%^V8dlhk'RarVfqf27>&\N3cRX+R%aPWiVh6=S::T8.*[X4&%b25H,#sT.fu?+85YpIN/in'Qo35a<^;r5$X`M9$6I\8FMX+\h>j@
%a5)jNj8hYA1_WSJ6e5cF',e/19)M`@knlfj3I_!=*k'/`(>(`r9We_kIt!Wq^Spth,KOe`j&L+F<uAu/i(PLg>2-^rY]"$oNdD\B
%bcG-L^m4deksCuEM*>af?)Z^YO<06q@lQj:02Z?^JD]CmpT9Mh%R>lQ.+kV1J\]*i%L7A2nR`mUb_kXG$+r]`gD7PHP[FWNjr-`!
%CN'M$CJ)G:q/bK;'>iC,?h!a)3"0ekc[RS6M%(:?bF$1!!]!@X!UC7K(!GSP1/Og/EL.OBYo5OL$Vo6AGT49tDAT-&b)8eIi3[*[
%,pqHg^N4DaB=R0;c*b7#->Iq4*E0I5[^N4)r?H*9$]+(HmjiM?J;qsJRdCc1FA_W,S'%kfZJ6?-V;kQ/9Q^e#l71+Yb,8In&?"'u
%8PScMHFZmXneCBlaC77!VaQV7l_4ABX]>Bgb26XJ4a!M9\XI"2X692&E:C#aHpOoWO=;A)`"Ue.b4FgVLM.<:qbnP`JW?Ne"hC9l
%,(,JF,`j93O6=ffD8^Vq+T&qlT$%_A\cmS6&cr*q1C8!jXHZqU+65#r<`UO!BsDh^e%I10DI.D5XG94+k>adhr(W)Fo.ni\T^n@Y
%i`!L<+6-UX6<);1fHA$`$?H1!C>d:h4k"fMj,DCYfH<a="@W5[ob%o/]tZbQO'gt#l8*CM<M!6srino!*"Yo^3i<k"i&7XE+Pr'l
%?<#LZMXZ+2=[1TX=04Noh?1E`4<%UZG.abRs._++aitgO7o-PqEPK]?`eKlsn7RISIt2P>>#t$%L4+\m=FM[&O"0u"MYOi-r\p2'
%F(F13O#HkPoltYXcA&h?Slf]+A6KbJlig8ao-X@[p=,`gf(h:W8Q4$JKt(EcJX=O@;4.*f&E<4$>po@<a!FipOJZ6<fY)(V/S+B2
%LgT&rM4($gD(hm)ID"BiIc,-C0C3KI6HE*m\a"-W5-V"Q/o6>i/_'60TtF&qDkXjg!<kZEG3F:hO6r#)j+_g.6KBcN_b4P3Ee-B9
%bo[h';TANlD+%DX)j!Fi^R7`;-AnCong?UoH^Omu+i_ct#[1#,.9Yf-Q^Khq6:V]88ps0"B\BU!5GUHN^=#?m<DsQNeQdj:DQp*H
%k2B6I)rpf$orWm9Et-PkX)oM#MKAWQH0%"P&+Dm%Wh?k,+YX]GbX;[PqLfY>jC8At5VT@,kC"SrYS*)Ap#\#8\m3+4R[Kp7=)F7W
%gX#'U<7Y?T'UNUXA_M25R6'p=0==0GY1V$p4VEoG8de5#Q$V5tb$;)>7q1l%&,/G`]Z,O$TUIs&A1kWa$T2OJNXP5E./8kUm4LqP
%n$=df2HF-:PaQ9$VV7LIR8-@1+8$DZe!Q0llin]%/dj8M>]hc"B3Y^&Z@j8Qr.&uW_*D_\3^**bEdc&7MDCBsbf)/"Pb'1?0MPE9
%foGp7EPU^O1q@R",&i`=iBYk=@Jb(%Y`/bQa\CuTbF'G$7jOjm/6F8&n]uZ)Z6!Pg*a)L.[4II`5=r\=b,['k0KAsU72t^i'KuA*
%gK+]^/@1W'^K-c.qgRu1!_:,YSem-^\B(nMad=VnZc__Z"Rp6n(Jt7B.!W.ZKp&<_o0dSa:gW4SJX4UEUWT.qB[JrO8R/dH>NRB[
%//>b?RSMcVF63@*8fBm[AE#02nUCp_JDOTkV1BkD[@NBCm&O*+Sor>adodUdhTWU"Ap2R1UC',"ReqAF4\`e+\b\`u*uam[[u$W/
%XZj(n6$Ze4aF9;DqfU>(R@\aSIuDf-aLOH\jZ%r0)3d86P,2]TfpfT<O55AhYRR5pq']-0=gDS'<;EY!)N&1!'Y^B*YheEo1A\E/
%<N7n%Woi!d,Ya3snG8]YhsO8Y7G5=O<Z/V.)49Inf@e-BdtLf`8&0H&o@rhZEu*,[0U*0-1("XZf'CV,H`%4$Y31Pj$.h9uS)nUU
%l/(t$T2[2D>lbt4a*-!5rfT55T'FNuU5SAPCHn1HH9?8??b_57Omjl%</c%D`e*#4(?XS,;#MonUeYC2Y+O2%VY.o_qo#Z7NF]QZ
%%jAiQa6I_!\Q$CaWJEKn"45/0(/YIS[HGh8(B7%'8,"Ck]ots`qK7;LQ7G4pM?%!),EY4JVZ*:?lhU8Lc#GM4"?(aCDr^LIP#(HM
%Rtn+C@WgJta`gWi%1[0!?<M"&"D]#:ru'&@p3AF%;Puk!bV%RJcb3'-3<jKU:;eV'>B/M:X;UqjH1N77]>mF@Dr.+IN`0cH8E;t`
%i4M20qBkrahE67!(T-cIK8]J"1&A0Do6G5bIIM(\WTU^=!dF6Y2RE5H`anIGrKk&=>OacC!X##[;Jg>"n1XBV)PoQ%RT.UFdLIcS
%ou[j?3LgOCZkF(=A,_QbOM2+rSi8LC:4JgDOnNTH*Lrnn)OU=[A)G*l7G-qlh<.*P1u)Q,\:=t-NCpsf4>oef`ag20hkmLnEpKN6
%NnC\Y>/V^+-e@acV3n]t@,%*<O"G*D3Y(cOQr-0Ek]h```O=e0G%<(7i^$D>?Q58>cWXh8p%r_!,tp;G*K?q5HTlU6..6HsopELB
%Z3>CYf8fg7TpSDGm9&OQfWJsr^S@W*jsQEdlq!P/f-aR1]WhHDqnsLW`ioP**HP;l.H_aAoUF/%SG+VXK.<Do+!F!`W-6hP5P054
%:s?4r),=Q"6L06W#1120c?Il,!G0o_7+`Qmn$`AC5$&<7Rkc*%S`f4hA4fgVD[?-_M+5MVj<9%\@Lp)Qdkbh8=taB,2QLWq1#cd%
%`\Ydtc[UGYCq^#Fea9o"ddD@7j*"kFm:oN$FT^O^Qpqis)4NO0L1r_^A[PJ]pA&LBNFd>;@suo'IE:s=TN:Vk53d+kD.I,dcG\\G
%Zi5]A,<9#f)t08?A#dKFV6LeG%,a$KEB`=A%7b1Nq^_6L>tm6..AcUeHs"sr/tb*$r7[tkQ]3c(qjPj3G]4LVHfA!G7NsiuTsFuh
%q7q2/eHS1.QZ9d[>T/f\@`<VH4(R4s4W9CW>koFr"<St$H=!$oRo0flR-m$Rn]_/=W+V\GYgg%s!@m2dK^ph&7h6j5Dk"Yk9B^7-
%Yp]8@aIV,D0JXH9pY-k0PX>1Bn)n2fT0)C+WTPLe"\kQf:@ZH$Oh24,:`d`]5#jA7&u$nl,!,S-=05m*1Ag.i1lK),qqB8WZ#Mm%
%N'mUg9raI3@=c>LoIs1?3K0<r?"#jd`u+4Y-h0ANN%Q+&;N]NjT3<M_\OT>!Vl#esV2&@Y3_JL2/Ng!B03+H7Nts0>6.sT0>CBgR
%jGD&TWqUhQGZ6&6,5N`3b'PdHJB[<PXS'"`F',@M3Uc@':;l>W+E(2M=*^?H9>dlCO-r4Tg?gO)9j3&7i$=ReTT@n*1O2c*"Le3t
%Xo2CO]D^VrDT2E&2AdKS@??bA`WM!m^_=5TQc%Bn`>-[.$L#TlJl#=M^:]DhX;)B6P9PH[CJ#BCL=lCp=ep0IWS5sbm6nNSg!843
%Zj/Kd:_e:Y@^guK@?`E-LM"I[*Fk]k*O-(M7?BSNn)r@^3uTMXb4^/*+fdO8N!.P5T9&Ma(fEoQ*0Uf4kMZbJg1BkU')o/^Z\:NR
%[^EuNlGk&p^-C3+pal?3:mpB(J3m9>1f&ph1W!Hb!<a0R0'pJ'TYQ`3i;"pS=ohpBO4VKp`FK#Y<RoL(Z[RHmlhRhXMro[Jp=rYI
%EYT/#j$''\C+fc6gQ1OR.*O7#6!JgcA(_=Z(%@jL[[/$!*!&.QZUbGD2fR$ZK>_@T1!"mk8R4;s@hik,IJGaB,+/7=%!j21--,ti
%neO8Vq-@>s7M[k7nq/Yt!t(TAHVUP,-+<G+lh8Ql!a7dHGQQL?BL,;UG&@sd]q*PIh<[&k/K1$dA"SeX&&X23jn1Z"$`0j9]mMLn
%hARA0aZA#E1#>'r^^77ff5$E:'I\7ojYcRQLoT1rQS#j.b0@EeYtGHuAb"CB]SMH$>!^!kIQ8Qm;a=N#T7sF,5R([udR9WF3Cf&D
%c6g_q-"nu%\jsg50r]h;1*Vmjf12G.-E<4S<8AU,ldf7<6W(&>O'2=gULQCj6<TSX8^)77_tJuP3fp=ZJI%sqE]tLZ'q_['C0ijF
%@dNdLpQJD-V`rZK<!3Ju)G7Z8&c$?]!qY_jOYNu=b\Jp4OM]<#=Sd:@(J>j"?)sAoFloN]JEXb?=]DAHG<XaJ5X37uV>n6W$I;\j
%-cpEJVZ]"-oQe+9pWeQ+'n3$B.d2SHFtU@sbB#>4]HqLk;X879%o>V>BH!ic?O2YSU?&;"q,6K_LYJl#!E'f5_N49nj0@lGYj,h^
%p,uM78\fQ6kN`J13Y%7`HG)1L@B29hMk1)dGCrmG"H^p^/?X\KN)61/'!Q@)QCf\nV],J+_1!X;qb-M[7"uEg3Ot!-EF8DQ=>V*j
%gD$`8)PCb@?IJX7pN.R+3M"DmFfTBuIiBCk-o0F]C?@30O?"OtGQnCC@+FsZd3IW]CH[5Z9m^cf8l)clKQ-92j11=Us'*iq8%3Si
%%_l<q0MA@K^G_g,YN6UAm=nU%iKG1uf,k,>U:NYm&aqRoBs#CTYTp7O8aAfG`?f4E8li:(.WEM1@FD`T<KU!ZOd"AaX9sB]Wh?G@
%BMgmTeX9t@.#ZN=XNDiiLA=e)oC])WR0k1r'V2r'O<eimWNJf:J<K/m/0n4p[l*k;:ja!sSa)j(3hreUkq:ZC&Ep#SjKVP"PmP`a
%[lMp7Hdf3'.E5rYEg[3h6E`#*[S%n8Ej`PE[kuKF]qk*t>C'4Kap".J>"tEde%>P,67FAtQ-.%CQ>0'2_G$AJdou)%>o"oPO33`b
%r]I"(5"V>oT8I?>3a/PXQ4'k/BsV@hDG.OL9HGc_;-W7dA^YD`&oO]&gRguKL!LbY^5'B!H[CO\&]C^06Iq_OD<.qfqN,iUa>ung
%>poPpmnF(b@SkLX@+!_:eHd=`(J9C;<c&8nSd.i2KX@#]T8.C5k=uQFV`ef'OYi0p8[jP#oqPJ6kpJjjhH1t=6':lApb27u8t)u[
%m93Q(?.)bCC"&hWLSV;J;VHA0d9VR'mq.KQUor^IEg@L%Jop_R2bL2M1?7#:/=_-hc9r'/2YD_&W.&U(cQ)]'b>7/Ls'"di=4'b]
%(]C]qh!5<N`c.RIbq0%.2!W9D_k2+%qp[)JD(<"'B[bluNKSeF?18`'+1hop0S#d;(L1AK)-ZP$reiEPj+mVlYFf%n?X+]s3G.ig
%??2YWc_W5Y<Z"U>#c5nq:HQQZTDbHngo!>X/#4\N`GttG-Op+4\c_)C"EV@3"U@s?0aA[S?+*_KmC,a6h1)*YgeS(GI]_&-!.K!N
%3(&m.gc:"c'.A3aH=mM/$DfCqpCsE!iVXGas.1Q.dg<))6^jlC',mq<8"(ku;_"jG99uYNdlONL:nB@5;bO/R<1:0ddT`bWfHP=$
%A_?Qa>ai/q;gcc9@$3TFPDm\DA<sr'':l2"BU1m-'!849CnAMgEkRCDE100ie'3g#FI'm@e(q([Ga:lr;sqj,I%JPXe,B`85fP0B
%M$FEO6:tq4W=KB.6qXIMknbkQ7S<#<.3K#084G1&8LR6O8ks:rGVBNN9ZF9XM)[$::<)eFW'Dlid"5emdZG=#V3L2.;PI4iWK_4a
%d]umnY*AF@;o;WuZBTHsdaJt:[ZpQQ;rhs_>tVh8d.CA/^5N&Z;?[lD_N]Y>P8.0C`fp[q&geF]b)D1F0fBj/cBJU';asjddY*OI
%P#dnXf8L0.d:QH"gQ[eh;KnHihi&8>Z%nZ>j-5k"&suV+F2j/6$.Luc\g=HEN4lnIHDd;&GNO-F1!eM9)/FXhE)4"5)/"CeY>:P\
%).S.bma(.uZ?h'jBgGXNOB!g4$6,-@LoaJu0<.Rc0@D>076sFAqsdu:Z7%'AlV=b^PXR#o<qVVUa5hq2=j9ZAS$OO'8Lf1pb+M04
%;-%Ou<$a+'R*o09Ua0\P4S>0heBaa[W.1*qc_]%\Wj/qF/1Eqjaq9,$0$Y2ldrN"#Z7`>r>>(O$WM7,-V_1RFo;][/qJ`Q0qanX_
%PIb%c8L=V+mrat4Ona,\q+Prq/J$)U8^i:?[IERe20(K)h0!"><^Q[iC:fd,Ia_DJP@@j_"6Yre=bZAf,T6JY6*DPDo4mO&Wd7Nm
%rN<Ms.Io*K^Yc*1P@F*TWC$Vg5Pd=>68+5VheVG*VP=*XIo+Pm/Md/1<Id$uJ=hYZ5A#c;BA35UJV/.uKL@TS^IG8X>Ql<MMti\[
%s!Qq-9]:IECQU&RUd>sbFq0SdSKG-I&\4K'Y5FD2KWN/PJ#t5nl-HQ/9JXkV9GqElD;]JBJu!h26G4\qGtHLnf$aMh<;qBRFT57s
%-547!G&!Js*u[""T3O<i=t0>Z$:'GKOB$uUM'f2/8U]eW=aXnV;j9ilA^X)Z8.mZEUKeRT8oXeOl*6=U=su4=@SW?Tdm>-K%==^S
%ZBUS!Vk/rQE[hm'b%7[2e?0Ru=H_#<CFEk5mZ&&@3Y\\a\JG$ImlFe`8MHUHDiaUZe\b3$HR/T6\G7X<Z:qe[;`Mt.d%m-(=S4uB
%fUK<Q.`7Q$[UmU!$P>Ajigt?+H?&/k4^3q)j-9[O.TQ4Gcu("T-^D@-JO1Xn*nRa`6VVJB]U*@)AQjNjffpng5$tcc+A.77@NE:=
%jP[X.@A[GB&3H+/i\QhM7?i8\A$^XD6>H$bOtk@$>Y$tL%.[O4T`usnaHr-%>K]\%6BpqjPm_G%a^@:K4nV[oANi%`\]fc5Atm,0
%96DSMT$mUc^2*771dW9uf?ae/aGK'%UMgL9$SbT'Sj&U9P!,'Er$)8YFju,,C8SP18@'p:>c%2k.*Gf_omBVd*aREPKP[MDS#Ogg
%"Dg;<h6rAL'6bUlql[;q.Io+1H_p?2r47$",mXAG'#`_)Ec<?\S;@h2FGiT`J#o>_/9q,u/Hh8AU9*-*"m1M@F)_t3RR>\PIrur`
%oUf']kX8E3;kIA&<PL%fCBK&8A4uYX=3/[oZnotoKfjRVjK/H1frh/*GU=T*8W>B&a`@LS2kfhs-@./6T#n(sK'^$iqd,m9&s'tX
%WWo(%a!^`S$RPX;ZTa_acU@7Y\bnir58W6RV>>7)s&Aq]CD;jf'ZaJhA5*E:Ad41-#?ct<XHgYslU'0qiH$6!A(C,nkm`c`OB?Uo
%+;o@Jaa->9MuFI;YiG=.>?tcF0s^3bMaeXg:C\SdB6lu7NkEJ(h@:fH)j3#pTbY\N3h*6BBN[)`<hG[(BlB3:#tic"A^ORJ/QeT+
%G70_s@4+70=r'h<ZMlL[T9r&?RAB`(>F1eiDJ56B^3T1/ZY63\6IkZuUh&;PV`m'#p,n7&5$?4(X>`u47d-u7&7(*T`^G_#7Tm3q
%UaslfJPsp3.;?o2C>Q>]o9Ap#auYMp4it%]ja!3aU`Xp62LWt]IF4#PX_I[,^O+ZA5%tnLkUrJbU<ab/kH4,17`GU3A+HS`BtRYT
%G29&O]]7j<ZorQk0DNI1qK82DN1B0B(^6K'UNTN:^**P]I-onTN]V<=(QU:r]u++8U/X(BY%MP<oPpjrPpuq7e)RT>]=<(`pr9%O
%jW#S$c1Po)k'O"J!EW`5@4*hQXP4CB?Ua&G\<$%Fm&+]Xm]hVUo$mDNc&^-cg:Br)>)u<SqZYRj150G4f+.a?$5Jr4V@R&#l)IH'
%NN$!!J,u]YnGKsu-4kE?S<L-/U2/RBGS#d[eDN3N"p4(p<Vjlk[=]o6YG\J,lo((&JAVm>.&PaU#MdUI"eH@?1?0_GgVf9/&$G6(
%dm<rk3!An/&g4]R?X8u-2a9/K'[fe0`Yi$uG(Y,1`aaM1aPA\FVbF5;@F@-I>])ssCb_r3RJQ3;aNGon:*n'_VujLm7^r/Be3o0K
%Ud_,;CC3-O=uq<\?98"3Y-9Is[]LWQ#$-Xs-V1]515"#o]E/6hdEOLNpPlhTT9?=:5&!+?$-p7k*HF!+";NVnS#+U0YrURL6Ys+,
%.of+_Y[^FjX3kj0m=&Q5!n]I6\KERJc8b67kABiFNtEF;1GFn$A8F29!H@m&0-+7EVng!P[-QZmB*r_KQ,B=Z[W0?T::mZri8a+C
%+[?lG]f340a1(T.Dac!38-C5pPl0h9U#>Z_Y)L6Ml9.dp)h]32OK1/ZWXU"V=qrA_0mk&q9\qr"GGU\egJf>qf"(iscHkn>N'i<k
%G+E3lqA-Md'1.LLFo@geRs/i):1MM[W-;lV4.aC9]WP*\%2qCLRPXMV'S&o`_`COgr'V>tj.,,8(MF2q(!oesK?J3PEQ<5kL3ai%
%+T?g`Ob:7iPA\Aa2V#2Hh-PHm03\ti-sSeT1W?0&eE19n]TRno*p]CZd`l^N'A#0@VA=/:&;&3%Ya;Gib\3N^PE<dR=K))tSuqCV
%%,!8DO2E&nFA],Rkg_'W$\[tg)NoEe"@MmO7+;g-DYEnp:>#_kg-W'1#urp#IBl#4FQF)+6Tr?oFG6kQQ7t[V)5\?2R4h17mj1#4
%-PX)-fHF^PL!RA.W9DjWTJa6o'QCPtl1RAK(uZn:q>K=\5-W[eE]>#R&dW]\j5h@O0O=j7_D)sa.slq-!K?pCR7g]!R!Sm8Y`B)7
%dD0NQd4l\AWg>35k+5Z,!ZN$NGjW5##1%'Q7Jq+o`esqUEX)[EBrjhO+0,a][7+I.gOWs"M\fnKpG%VGT',8dL"dM7P-a=m#Om0m
%ACE+7N%:HH*Nju;7UGKS7n\QW;O]lZfB?VXW7BS=./Z@4M6PU74_@BI]O'87TjHI#.*jLG#%cDU(>*eoNN=?";`emSq*+;=6S%m"
%!@%C^Z91QPo%%X<k9/B>%dP0)N9;4]).JMk%#hk98>Oa,(+1B#IHfQm,ejc_E=5:;;)L]B[q_[N20$^KG,QC<,O^97P:Ce;4F(b5
%^[q]fau)3Q2s("BBu[Gj[WsAaUDeCpEL"1P0Ic]Ob+Be\a$N!>aCb+Nft#BF>O,edBWpZuQgP^F"'=K_0#6.Zc7qP_jco:!g,Y.'
%D(-bKqkA3\0KQdq*CapM<r>`#:<%L-h_a_<'O#l_(H[5XWF8bBX7+qrP')4um.aiDecf4o`Io=;&SJ@-Nt[+nXD,,AC>p6,*IhhJ
%2WhVq3cUo,'(H\&B,J,I+>dFoAA_0h%Xn0hA+;:6A"qZ/>QolP1_'W`B#ZZd7mg+N6A]U7jeJ28(d-4)B2^F[n_+]Lf`+:M7)?3j
%J4e0Fp*gW;Sp6Lb2UrH.T_Y2)KU^h$`t!49gulqifZtsIi>H_F25'5,coqA,[nnNnp:aKl]o&#=eB2Y+&K\-^;]%/\'i\'[eQHZO
%WKN!C,TZTs@CL]]:g>NZPWt)pEmM%"Ms4X)lMV?sWm3lb!YNH3Wg(1ceM"r6:rW4G`1QdM#._EFUpjG$=kF)r\r-F(S9d:":<85Q
%2?Yb[(^60\rt=GM@/Y.gGhE3KYh!P+8+;/5RGqr8'7O1cQ%n?-Q(2-c?'jh1q_V1s.-&s>p1ZW5&@eAV)6T9;dj^80\Cg3ZED&(G
%i!NuaKJWbM/$]qjL+hCb<7H8pn@hVJ&=2m<'3V.Ie,0cIK!SrFT#ju9GYZcXf39]I7l[A<NK?H_j#eCODKmY)fhg??pG-CL:'iAP
%aO^<15WVA.N3Tm1$7"Vu-urou03&UQ*$$s&iR.hkq&VGu"(Y^d!A371;1T]$s2pp\mFpH;YX6om6>P'+jN$0+]/maf/LStD!OtLb
%JViD-LQJ49<EFA/F*H,kCdJ$a'k!!1"6-.\-F=,7:[*tZpWtf)E?0!%rR*^,98RXJdBG)XISLr+]nM-3%^)1%GIP<)jgM$S=-O0i
%$Kt-m0F9T>km9oe@_8,iX7:6<9ZPjEBd09:LuEXe(j'rU#lD8bE#'1)3P%>p%Lf,\r=3;WNE'$g%/W%VJZP]CZSgP!J*b3KA:`8Z
%'peo+W#>$.-L_YJ3M<="OmnY'3^V]#0ek:"]=Fe,f@PGk-kMq/?,V22h0V\Q"=<CqW+t`D:9lfO],XYo6Rtin,=f-^2W%j>iQF8&
%P0m1SIk-H)%6-V7X=kl`?9F5Q&dNW:Q<6re?Jfm[:5bTa!4C=TO:D(FARQL9)]QJ>U_WKaIn>o37blPm)VC\hF$'_7X),2,qtl3e
%$g6-:geui^N$2I`NgZVQ!aYW''A'8WMYSgn[)3]WP2ci,S\A6XV?-slViA1]$Q->knkX9CYBrn1li\;s2R37=B[k)K"G+A>%')o^
%86a9^5o*P#W1iFTf2SZ`1#.+(H=.7A/9W'411'KsMC=/&`q/\IL0-]_j*SS([+*G,*E9e^4V(49^3`RdMCi#3B?9A:)IO(uQf6d@
%@GE0'L#Y%+>QGR"_7dCq?$*6UT-9e]B=C=8B/i?WNk,s0:q_kYUOI@+8V\f8=j5iAh-N3am-E.-BO7XXYOr#A'6n`VG_ek]U.@ZY
%ors9*2[@'47D`<D0GQWRW$8)OMM]nn0$F%1WQ(d'5ZSUD)sAPT=0"KtaU/3J`LAFBcgY73:tg0Q3/1]!q!]?4R@Hg2)8Xsck6gf/
%=A09N\NuGK;&P/59L*`#ZgK^mV\<1'MV=0$^i!3\o3LCOGL0iApA#S(AY_&hs87(jo&'DH^\=XUrAXc?07N_d^\FkEr7?GsT0N<=
%[XZ*-IeP5gj6up%O+6sYIeP5Iro#R/ks%3.eNa&VJ,AV?s5uWDlRuV^n.5Qchu1N$att+2&-$R\)#YC:Jh$_bnK0.0Du\sDJ+@g_
%lJMO:5PsP\rpIh9^Kga8htrc?o\2V1-i`DjmsdGArWaNpk>2+Lg&BOso_=ojqsco?\ao:bro%5_eUQM\rn7>H00]C*s8.<EeR/@$
%L[O<bJ,>0(q_.rnJ,$@2s7NQZ^AbHgp)Ca8Wt32MC`e/L^]*>EqV@eA8,i!Bo<0_eOT.&[[Wpm'\c9m'rD2HLs*iW"dmr(TroqK'
%nUGEus7UZs0E2iR.p&bMR3F^P5:P"KfN$.l26dfu2o@a=B<X]!*,AiWh72o;U<amsG*/i$H(tH1VIF%GpIqaFnV'&9njPls_SM?l
%/4$*Mp?Kfk0Baua\AB!5LopK_GPG&PLlsShKHu0BM*5DEMCLs/Ckn5g<Jc,QgRo(0r5$d3o/5)bZ*CXC"n84[:S",R=Oi)T301&H
%a/54(huaM+/='S'>pof6-u76^7\Im1aVB!37i`tQZ?G6FJr34SKdlBl:A$`AHY?Ghg#8`(<B8n:3:pf-<FVLh@k[6O0R"AQ:@95F
%"5MZ(CQ3R3_f-3"lN2F_Z__`ZHeu9o@kr#FP2Epun$:PbL<4W_e_MmDm-i):a`b66HT^/(LNPM=PqH:>5L_1BXffiGGCUhCHWFL(
%N,_.?5cC7>[LVh%[fGV_ZJEBJoP6^F77H.'W/&;?R:j"7R!tAjdOlH/@4p[U3iQJ;,H49jOt9'';ZqTu8HQC1p%i*cmUt/urU:CW
%q0aGm>^\PK>.P\RGT=b$![>TFfmL!$Zjj(JV*o6=p`YnbX_-hcli@NUrJim=!'GEFiaheWSW(+0HB!rqU[68mNgEM'PQDFt&!t]U
%Lt/0cGZR;["nSJ2,Bn]qHW0dB#HKH\#LP%JE+W//iSkHo-5\n7GDB%l0gJ"r%#qWGZmJ?Q:E>W#PPak!<H)qLnc3dPgP(>#YSE>n
%)HoClW'Z]X5q*./=OsTf)AJGmC)Tqt#]tt]6G&g8I@#J+$:2*X(jV1-3oL-d;ll4'!*eK\N.:Q#^'ALt/Crk7DN7QZ4$`OdCcD)#
%_RP<Laq;XrO\u+hmJXlUgD,$h@O!hh_]J"[JMCk[%J]A60Ojc<8mXVug,@oZNO5aN.`.UjGZ"U=A^fu[!tWo@"TGWLE^hibF)Sp\
%8IZSSQ4fctFKT$!,LY'$JZ`+:@t/HUEdVq]pAEmoZqf`A[3`V0n/c\gVsGS<:cAURWMR8'$ri@QBYjD9NcEO>!8nL8gh)SMG83Z3
%`tV:O^sp9Cq`,^d$AF,dFnb4Lc;G58I2fhubofTskh<M(X!1(jhOJNEPN!:KnU@X?TM_*Z:A[(`VO`ilHPg9-GG#1U?gOWRAbOb[
%L;Q_`ItBPUJBfX@jnQCKg1_F[7qX4M>0#u]FAl7`9i4\X%h&6#KD@rtGUHruMW"utU>ipO;\)j]H2_j%P`H=7rqe*Q!Damnk-tJ+
%_7!2SG!tTrHo5Z'2P#>VUOZ^`r#;P?[B1APLHBq85eQF5*`2sb5Tdi:2NuCKf>E"b<T;-oipYlo6+7sHN?/nSA5fp,bZ\A(S(X'j
%;'hD$6"D/4R0'tmi0lW_$I@N]mBBLfU"$S!BlZiB!<)Bd,MqWK_AiAr0fd7YH,M=W&U4%177+i&:aKIka^$=7U?nH;eQrO7=1q%U
%HWjCNNVfIB>rskl];C::kM\`Se>.;sFhL2h7#@b4;hF0D>Jk=akm3:o8a'9CEu0sDnhlXea(^-5qioXJ2sFZK4)*>O?65%7PKNE5
%<;/)*@)]js#natn&b,.aZVQ2(bUW#WS#*F[#3EGo5I'\/]jC6A2fZ+@CT:O[Loj;jAR#7m-B0uMI+r8^2H2GZW,f@>;/.-;^();3
%b)qQW+<0u=k<+,"=VO"NkD#)_nQYmT0L(fJd%7q;.1um/pOkf*k<0MGl,lPf8W8YHPOHM;g3fJ@9,;=%IL9RrDdLcq6pNo=C'`'C
%UVLl9s"7fPb3os3Ri]K`!lSoG[ln:F/)su)U:\b?HgVR6G!\jb/Y(ZNM7ebbeF5Dcl.*TKB6,:W*SW@Z=5"_9-^_#/7EECf\$DMb
%bFPN3dSd<ODpEQ(QE\[e)g`#<7DiVLEIg9?+WtDCr@h8FRlXIaY*bKK%+IV)meSg1fPAon%LLrjZA)C6i/#!lM*2qS]EI!UFs3JA
%]Y-YiId?c_@1\+sSQ6##CfXR7&.A\HBEGE?J@q:Dcf$<:O//r$&L,"5Ubh-"'!"Mk*ILETb3e#:f;=aM2uCRL9AAVSY_DI>=HPKA
%Qe'!^R;0gt4XL!H*d6q5rHT-'Nu]2#2);T"CcjO`KTfH+i<gN/'-"+]QB)aqB+APF:+p=5kkeht)h$Ql;QTkH.$e/*oFBmX@TiGd
%aU$A[O205P)8[U%[4;X160(Wbi1>+YB?-X]!aX_HGKYk(+56Q'QT`RpnmT,[I4CXb1As!"-`,GB5D`<3fKIF`;66KY)Q)Rrj#'FC
%abN`M"'^Ohf`],gV>r+@Oe*kM<,pilJYg\]/.,,3eR`]h7D`3O]F(n7BKV:/=$_:m#c-+h$>;t-M&a94@ND(<OVBt#_s9`BSjr+J
%#X:TW;VYX\1AlFAq9SJmVFg&gV-_itKhL78e1Y)%OI<_KqP=QI2YD<9hg"6R0>-^ss*WqPVk/AV,HLs(4Sm.YPZ:PD7mL4YZjNn_
%-nLG2<l&&W#VI=@4M4?td55U_6ejL>c6MLPR%;7XH1\f\ob1RQ71`L=6\\=2.)lVb8E#[>7p1Bq)*jB03=F=a7>OhmBa$W\-rl"7
%/[2Dm-d)Lt(&4(>FW%'c!W[;K0S:)V&7gAnk,;mPJ0nZ<#-'9VfG(I4ESVT:cJ[\%=&-[!74b$"mAgd_`rct4+9rd?nGi=QgdJfC
%nW&71,ObM8p=h>T`.#so,f9mZ69d_#aPLPYe(n1ZP\=CDe+64DQ@$:B#,,hNWL"!$).f6uWU1IMWZ:f)4RWubVJ0-_gPh@m#iO8m
%FjhC4Yir-N1-OGe@@%s[.IQ&8_IV)dF_EDkf-K/ss-<JHN_DJB*[TXul#VD0:Q0"I&22=d"t!e#VgHLW6#qTn<_FjC)BQC!2OJn"
%Xn$4$D1]bn>cD(O@gQthiJqQRemHIB7rDHbZltJ3m1Uh@,PeD)FkhbJP2qAVr0`st^dC>h5V?$NVCV";"Ihh#=r_4l'l:R5UndG&
%+-ls+O'1U`"OW"X87+d34n2CabJ$=qXKqGDOm_W%5p3$FiDG^ECkmZ3!l6p@XF"]IGN*ed*nV"'d=r8$N4eU/nI7*9A7DP?[ntBN
%)*3,LS_$Ik)b84.T"fIe^+)CD%c&d<=k<(ICGR,HfN!X-R9_cKYp`iShAfuEg."ec6&:a8-m+IcN[$Acq[Pk9LVS$BG`mJ:Vk+4e
%a`cTUO8G<p>R,*C1Uu4^s19mX85QcgA6h5?[aW9,OdC9%KIlO.#-H]@F.:l5G[FAeg;X:G)0p/ECuBD8+V]MkW@Neil[jXRTg8.2
%4]G,#Ibt_5%l&J)Sa/&>VglKJ!Ci+s%.N[)ihK"c80(l8nFhA>dg9f'r"^8:]D3GM>Kd9=i='RF$H22`0oS(AG%ol,Jlq:ecB)/G
%GfI@3@[pUD$[ZIM2-?![C_Xh"d'uoqLblDE:C45M<YEp4R&-ND<M36E[td#cVCkmc7O2<OGGAab?b[!H4Sq/uk91'``l!+:LYs[X
%UTp/j\Jid]$qSSf^%g'9D^bLte]G&s_&60:CuM%^a=qA,ddB98bus*gISEEu3i&^&K-s/Dpd=..rX2>fN;%/)<sUEg(_@(91+*YY
%olI)#S0k$T,"gB%borifU24t1;7P[?pKrDN9orVM-B6N]GZ!6^nUcH]+JrR4hel>ke=2@2,S$MT]T+.pURWaY4HWi[;p?9ZaO=4l
%Eh(-=A7$@rSD9m2CqRQq=Y8X+AgAY!)]^%qkrpCp%?;rYfkR)bV;6`3)iU!-D<)h1+^PCVF"Mt&>j?@;3CNfP.VKc;)c-egG\8uD
%2&'PTSY4Vm1C-I#q%ZkRYO`nGN^[,*+pm:r#1#6^l6-0j\\o%7l_Z8>W-s6=T8-u=8d?WN%,N:Id/[.WqOj8HLE,W_/UaO=`djNS
%>I1KZ<Slc<ECQS*^N:Y1=1DPda':p!3N=>QFbC<Ditf!_SYL09GA?eVg&c]h#!:13BkoRR3^V*/W#GRq[^&(U#OYZ!*"8I?p(Wq^
%Z1.*HZ&d(&7#&:,T?B,3*R]$^SQ6rl.8F<.<@#4E8U;0VS.-r00EVpOTFGLaK=3V4%!7eu#r&3<F6G1/CahgDrX$koGU6_p8\bEc
%PB@7p[Af%t9Y9d"p=`u:G=Q$ISHnW+Rh$n+Sh2E`RLn@g/F.7,OuC(m`D/J9'Md&4B/`;[`j<obIoBEB,@m%t:i/05%.^E(6rZuR
%JY]'&jg<%sm^#%hB^N5ua1Q7&)3.-m`K'#q]))&4H`3:n2fFo.Z<cuG`d>^^k`Tj"T`TJ=a<B5X\@#AI/3<sRMJlFj5;E7F>_`pD
%fM<Z\kdnVHKlg;>G&e4e:ki7UIQbG!B"4NrhEG3?0dF<>&*<mF5\i+%>uM%J3;e@YjtuVk2C$bCE`=n6mK"?Fb(CZsN3!B$7UWZ6
%<q`burRg^_Rs,Lf)S5ArC9#=tPqJ'9$X'1*QH+>4SC\AnNr7FpMaXn#4g_Shb&bc[$=#F*V1]CgdbQ2`iIi6=00#S4YIj6'<MDD\
%^G-HP.R&m^PI>qYM7MM-l]!/<>fX9W'LIBWeVA*`AcRnWLsC=Xf?J_2V#,ZMMD*CPLf@b]MJp764'@.r,mr>(bH$Be%qQ,ao`OP(
%'g^@a[=^)5N;coFB0AlWYX^cWUbY"XfIAno4d.-^b>sO33@&kp4P*Mk.VJ4[6P,-r3?5ig6XiGt/fA)<#G&03_lbWmn8h<eE[O9R
%nHs#VWTXS:C2VDS!LYUVNo:TQ)R0S<_p-m[a$_^HjY?;10&p</7r6D1e$0uAF]/GSfi6hTk(Apc2oiF&)Pp;qJ[4V6@b'qqpP(09
%Xe0+mXPepc'(b^t1Ea[Pl1_iG>>6EH\Dd&+TW>&e$.70gr/bP&m?^['^-^+@p:GZr<PkO"966uT'[<U0%o&e_`W7=s&Y9fq;IjH?
%f<8V!C)_WGq,-O7e6-W>-.Z]YOCSWF>F!iTbO>!oYOI7K,0,PkRaK2E>M6Xh30WUR33*`Vkp/;V;Yspi4i>pI8&/D)-+D3P5/o=N
%@csP+KoYB4b5J%`<+m9`LGJ=,mr_sqFR=olg84L[g6PD?VimqFhX/eoGZN8B@t4;*=0tn,@!G]?UVZ'\RgW"!>pIWC$3<g^>t-_q
%B3oQg:I\8e4*EOmWU)JiR#D%^WgE8o4tmeO4\5<fT_L(BXM$WOFd4XkbMTrk,?2.s"VGtP&V0q@HMpsN/?tJ#jM`5pm1MVh*d-U9
%\sC&*&Y02\6FI?*6`95VDKjIaoU,S3h3YY\h\EJ/r^Gt*XIPU#_b#9ML!,ST(TAdfnlep%-hW16a%:/SicT\\a#A!8;eL:8q5/%M
%k"dXXn'k31?2BidT*>[K=L!`LZ@F51D3f0<)Dic!eLD?X"1L,*>K)5?n<eruX-b^O@+.qr)&K2:F;AaI6M!$m:BUTgTE>LbOF[ll
%KHc1-;W&c)8Q%f"LL+"@9a9mYnBV^t8qEfIJm.,53Ok?k?jk10"k[iDDM?hV+C>H\Y->eXBM9Sk"al_)SLGtu5YtCh2$[_p-uOe7
%VU4fF8'WgO%%LWIfdZ3W_;d$s4U'\@Ld$SA(0F%XHE89Q'Mli5QP?<RS6+OB.&_p[W3)is(&('(kmemd[\[5M(a[K\,HMWg7iT(h
%^p*'tCGk6n=B&Nt@Jtr0j?nH3V7&j6M/F,29(ri6YHPM;W_qnpN\r-7A)&].[UWE2OAhU_dE:;A7ae@';,`Lg*qhrr<J99/Y[h0f
%0K""-5LNC7LP'D@4gl4FWO9qDYTK0*^EmBFgSnY%$Q\/58eZoqbE-TcfWLo<UAE9aRj`_Hl!P3@JGGXk#hW^ihCQ^Z=EmQ2Q`1Ak
%E"KIK:ge0teOIM?A\)]Z@u'g6$gu.):0H"2\U%6!Da$GY>at&Y3QK*>bf8RZ,N4?S0P8<B:2,?kr8$b\%Z;E.F_RRaS<S?,o2O8W
%Nqq2SZ<!0_m`H?H()$)pFNtABN35"m1)Lu$]-S@O2M9u1_i<'I(Ss6hrKu;:#uVr#8'M;kOqG9?Fd'EafkWQ9q*H?Qp260*n*i$6
%,[EVAO$PBbEJV<p6oMPTI-WtEmlbc-fV=?d_kV=`,JB')FB[W6L=c[,PRX0jM+2Co7KT:?fO?_:F^A/T"_+9%?,1@lps;<Bmceoh
%i1Q\XdUH&##-npm37#js9)s;qKr)#W.uYaD_WiW06b<#<,rhCKm9g8VqO!OR.UC>K1Cra"7D$>#-k@41H^1>A)TDj:dG*-Fpt/PD
%HcicuF'$lBh7+?blIu#=mcN/9f\*=%.LBZ#H$;eg2/FXF6[]p!VB9#gCY&fH<AVZslpOg47RYSu122]?)np5]<^m`7bCYSRNI.-"
%l[]<h47lj_qJ:7CX#f4f*F$:*Vt;H))\4n.a@6+oaEik<2eg#%Z,bb6=b7nf!A-:D2n*hg#uBJV?IrU?5kI.a-mYJ=T=]>u'K11n
%9k3Gj*KJmAQ>3PPIDf%tX:]7-7N$#r0nQQp0It=5mHSCJ^,3h@YrNJ"0DAYtl9c2fq2"!K*AdCi&&R.il=KW)'EBb0E8'.I>D#CB
%4UNhsBLTT:WFG:H0uC81f_,PCKY\Bgn#[_YrYU_7D+@PAD,j-kl`g!9U4N+77FL3O&AXld2LgtIJW^>H",^OWi<'[#edlj,C6TsI
%ZeXtnHT+3HCBC"@$6M0MYWUui*&\i-D0>Jmj<i+[Hc1\aP%+sYQL<Mf0op[O9t-qqr%$9P=+;*uo$_)J+R#+%%[b-fOD)BO%>ZZC
%rXg-cqt*H&q5$tn/-,1_>FUCL%L3<?;7@e`b@ImE5%P[^S2K\W$+I.PTnj8LOQ<H[D5&3$a(hW*91T&b2t(1RIZHG0m1]qo*=Ab/
%!@]VFfPb_nms&eD6ju\3BpF-\/>A'p_*F#&Qd!M_q?u,]oO?HfYkVWVO+kNj/:g7kN<'i8lg6;<hn?'2PU:%P:Z5C&7N5f#+_.R5
%C:d0q\-Z.=C1PGq7IZAB#\7?pnQ+1h?3.It<o]3sPY+3;YV2LE@)CCAbXD+kJAXiaGC&(\AhhCGdc%f>ME49(N>"3<VoqH0<QFV4
%mUM.?dGZX_atJT=l@pRCCp8U'Tu2"MO@1=$G+so^eI]V82_h&3S]t%9_P_0s)gKG=k+mqGD+5W^#.k2Fi%)*!>t:<:1"R;\hULQ:
%W[Ld$]Q=cepLrNfD05VfdS\ZWV-U\DB[3_n&:2m]2&)]97jt,$Wn$F#;mMdTVD,e`8]-)ag+jG]bWaOoofTpZD`+<M\)._d/8s-S
%3#Z4E#>[#s$`rb'"cbD8Ob;Ulo;a/Y`l-nTNY]fE2*N4B$0njm^;u?0)>qprF]0]b9Rc4gMB5HHK^RXTODNV;*aKEFk6U9"=B[QX
%:r1Tt@*\H"\rZd#P^3$bS952_8fA_HTrr">^<rZ%?KbuBcDu1CK#XprPL&JjCj#hDN?a`UZ7)e!h8i"LGYh_ZqlMtcoP0+Um\CnC
%`Ai!Y.G`1!@k[s(ROTDGCXbmJ6p4^<2.$fT_WnhHI"U684p%F10qbMOrU*r#Z+^*[[O&PqSCn?R"aAo`/@4*Q+(G<ul+@$<>2)0A
%l%.XW\)LR&Q.#\7H.Xc"S*M?&\eJpc)posIj&mrLWp^T#Qf!?`IY[)#XXUg]Mqu8q3M2\h&p-'Egs,4s$9-.3O$En>GduOl/)KXK
%Z5m'"E4D_EPX`-Eb/(Qb?a+7'TV</7=u5jrMK"A4DnT9cM2Ir57&UO6km2h'E^]WgU5,/mFX!jLn_=D2Wt8Slc:>h,ONt8$-m`<^
%llKe+f=OmN6;c]Z69KRM7_c!7WlC#kKrE1KOT1A8+K(VP[9^D88`9Nl@GS@H[^6HXqJ?VH@tL`*G;$ECa%mW&03ersehl<ZR,_2>
%VqAIMP(nIHm,@BP1+]8=IMi^Z[MK9RP2JVuQ*#9_92]JoHHNa26`37$3YY0ad_"<Y7!/og</97,#86K[^aHS)mm\?h<&o/H/%9"4
%0sLpQ\l9bWcc.E8RL";BC2r<%q(HM2hC@#1-qZ>ua[+%1D=.M1d9*6fUqe^@pUd2O><n6*C!toY(Qpu3r>_9U+DGq'YR7aCqu!l:
%9./q*l0cGZ2](S;@fZ<#YcsQ`G.c2V1DLM1eu!)Q]9Ff^iaEi)j#s>tOcLLd#,\CZ(#t#e)''!#ghM/ooVqb;Q>m^kW&<)<eQC!<
%'McI#T!hHS/N<`=GC)aC-V;i9OE5E,*/E;-1a/6m,j6+>2JQJ+Z-CTtic_:C3460AVhZk&L(#iRq&P=hn<TR?Ima;?0eEDdHB@*#
%8-LG/!^u]4cpk,?"Psa:dkPX1WP"-'J6W^S(Tp"9o:egZaMLJJ\S?L$7K0FiD+NZH)nMKs8>#42dH&>d22'HjF4?4/8Og6p727iZ
%$Q_X$XI!;TTa9OQR/2`o=kE`T>D\+'+f(/3(JX.Pb!,LQBMNhs+m$;IkEra\lt@BV4gM"*oAKDbI"3;ZMA]1Z*V2@gO[1'>PU$?1
%1>jJ!BMpf;JUJ:f7uE+5aN4Ko8ar)U[oksY!a4B-6SOhMMp/iYKk$SIYaM],G)P6@ketkT\E*,(Hfj?A_LX7Ya<HRC0Ts@+=a[O_
%L#.HZ/@N^=YUj8,!kWR\p`;$$#F15:1Q>Ak,MGTURtf&Rd<$FRk7N"QaQF^rL(:"-64,Y^\3u'Y/>/";'R@Sk(,/C=a<\jO!ourC
%TF<b_5YN%6Q(V.cJ1JIQ1<aP<Y@U70L=kV?hE(q/!/3G/R%]QY8@a7,1ZU=m8/G*;!kN!rliP2O&Dq\:36.(9UcCl>Qf.NUcM`cX
%04=A[@=JOAF2U8_p9P`(Sh<Pi$V:OHa#PnG,XG1+(eY(R,d9uQn3gk&ZIj'+#u*%5bIK'@N6?oioF*_[*FKB-_i(-4J$4Gc:)Cj2
%FY2"nN"B>j.,mW@Zt(LQGqCp#/3=!19.Tj8]<X##,'k!/7@nC%f+h3(2RCe#@uLeLItr5-5nX2PBIEP6.`A*R:Al]G3M0'3gR@d%
%&$l$tNH!U=R<:uTNFl!4ff':[&.@nk);3)V>_O?/@)$AR.RpJAM&o2#Sh<$R&,TrC+C3a0E7c,-.Q!#Lc)\H=P!oqkO=8NB[YfpQ
%4)G&`5ShYen%--c]lgo;R$SsPrJVTmhOH9R!m:]m4^XsbT</US(LnY>b=#C&)eC/u@RiAjlVNLI?l,WKgO/WVIN1t8)6`\.^e*co
%K@UAnU`j4Ys7<c!D<,&>4jY*$N'QsJ#sGBTOE/:uZ+2/=M<cmqRf2R$<:R!JIrfc5/<8qf=-;S]Vpki)DNQ$ge``k9EEO;X[FgbR
%IKj)/^%9d+MT]RTSif0b^7lEaD.\9jW_W8[g@"+*"pL)$-t63$ppnWVq&=^\8o2CbLG0&"CF^-nB5ok%@[''[+@-R^376Lkc&kVT
%I!N+C5H:kO;oh&-S08p*4WAPiTr_OZ8/(j3"jmQRRL/[KH7\*j,VrEZPG`cB<+u^+TmHmZBP]ddmPE]%q`;6h$bXm&7]1N"F@[h.
%gT`"9E\4e8:^AU4A;4FHk1dF!qqE4ugE'G3qhV,@J1F'@:5:g<efar5+`=s8_fX)>_:j:%pb.X:W,>)uRFceUh?Z(7_:83<b<=8C
%GDlG)oGi_u?ZbmUFH!.ulrrkRgL]df9fm$AD:\llMr:>&VK03`XWUm&HhtY1<$_.YeR]'>>u)X*R*C#JMNH?LAuRaI9QRQk%,(jh
%a,@+OhXDL,5Ll2AYRWas>E7tI:eO-uq,t>ElSRP&ODq.Z97K?R`2`Z^$Z*pRKPatF-b&Rad3k\t3rD?ua*m=7g!.&uQ_r5H4XW,@
%2m81#5[Jlg>'(t(@3fB+!JZim93_L1]5M>p8C_D'+uL$(IQ_59Zn6s++<@PF\JF[LoF3'Yo,uD^_ipk-3a_hc::J#%OKdWf(^(b/
%q!GR;[,*#93('4KKqlefY.diOU%IR'!Y_\kL-[5d<V2F'[d]3tn12miQ/G<A<mrD.f;'Z[C+aEHU(8I5O.+<qY^SHrHNmI=i0cp2
%$LHaaGU<5IU";mpTctD]=clCYiRT-9rTP%l6VLOrf9ckk<&BP:al]Xl</eFhFl5PlYC]_lp8(Os$)+2j0G]XAX*_Bj[$j,hjR&"L
%Mq>p&0NGTtR%!I9"Re0B<iNXE49XEtK<2)4UNb(2M-%+*'oI1,8op]ifVaa#H<M*-AZUff%160*,JdqNlH#YTLM4dmFkGt;)AC:r
%/NAC@qj89l>X5FN22^Unn8<pc3lJOab3>r,$<=PXVpbk2MD7B]kk7;3["m,*a1^<S8to6LM:l%s1Kk<:n#'S>>]lCa<V?7?_ugpQ
%TY`M$Uc7/F*`Fk'\E5\I7!$S#<NXWF?*t8SFpN`;G0l"JRk6CM?;FR<CuTj&#^-"SKZm3!/M0`tHoMkI"8?NcDMDUS"pd0M#;T$@
%<G3/#]:F9!h48NN7lC?S4Z"Rs'Z5Q<IuaF%?$8(>ZE)-t.sDtr+X#2RFUT4O\!)NU?)M`o[(r>`7pCfIrUE'%qM.43TO?>s30)I&
%i@6]WK]]GD(E`Q7V@KFadNEj]\;&9qP-ffha@0p=%>,YO(&K:mdJ,hApe>-'\Di1+B4'D0'Sk*ZM)tNe)^TKhnjpb$<6D0gf%;-*
%3b]Td\)]@M5\RBgH2c:S45stj+Z*oM=O-bB]QiE]Y9HV"f.*l?mm28`gE#n]Sg%=UYUAY>-i)h2$FO<ch)Xjh:R&idpk#q!o4@?)
%lC\TEN]0BWZdQgiC4!Y1Kp?)Gat01ZZf,#=#m@i?_$f#MkoLS0NKcV,0^IPMA-J@QkE=2]f$T7YEcMo^\_85tLk]9'gPP!!/5#T_
%M=H>g/k:r"4@od;QQqVh0/VMjk>"mh0S=C7WfB8Q%kCG%9i\kZFkJJc[n91\7OE@&3OC>\VpL;r?-HnoZ"S!6.?7Kq7862NV*"B&
%?2(j5G.'L`kGV0+peX1(4i*qS8,'ZR@`ijYlDY#/KXq4J4feMacn=la'tpX*BHPADZ]u>i8@LC6mV758Sp.fMkqX<9K+6j#0=Qf#
%%ED[2$?eRrHR)_+E9QEK.Z&J^M9387*%H.tVO"S_j*nR`:(`dH(U$ktN\1OLaNLHEO4aQ,au*X`m`r@VG6SgI7TWd.&([i=AqVY'
%1$MDI[C><rFmCULLV6B*%JG(T6]YlWXfAelO?:t"OU"__7Y;g]B:O1m"h7]\O%FJK^N],%IQPhWeb3>5Pr,?7Y#8aiDFAkq(-l%g
%e)VZB5%;1PRuFrVd,T<>'m$*TEI&EYDqBbg>k:l80)h+4a?Y_cT=h1aLEY7PaDo7H*o=h4ST/MR:Qr]8db^]!3QJk.;g]UdM/l)2
%#&hp`F>HGDfWiO]<+BWTi8><r<<UXN=Q>VVp=X5l&mi/,#KB)mPCK2/\%bK)%b4U=QTK7K%6#$=.a"O,j]42S-o>i_,:L]i$Xej\
%kt&SYB[]*[nEhamY&%S3<(#BI8srZU4^sR[^0.`ts,[Q2r.+6EIWHA^hdY]'jBbLAhP?1I_J.*(MqeodI$WQu8KAs7,0BZV4X0[^
%Yg&3ieJZ(`nD@K'Pol,L*N=CkoOTeu-[1\Rr`%m(V+t4^7]^utbWEpPR6M2uj0P(:?&p6VaC9onR$!+K=n&_SFOIBA%A6bL<YCdr
%!Sgn\2t;InW:2s%r86[XI1&!_^iU=1jrnXY)_^472!@]Po2R327/\PsYeh#.g`aQ_E[W/d4Ve%>!_pe1QNX*e+Z_X]P646(<%1>1
%hN=fQWg,nY$!+LOeT)4="kR><?3UP0OPpOQb`KmSZ!<ul3>@p6V@/&7Kk"'>G(oMLODkCF07`1!Pg7YA-.8@#i[KDl6JGFP4pCIX
%Ljtj6aO1?pS3ra<aANnV]LSP=8^f+;>dT$IEY)u:=JbLf#(rb.fdmQf?*%^7K%)_b(qLq&&HQXArZ"^AhsTa&mUXL"4^j[0Yod2(
%MfFAe3%m(P&%TEf7+L8a^;C<U)r"SR&)K)t&io<7$a>T^JF.S>*Qlj18$;,=i%j&XK(D-#H^%aiSjRXoV_AGBR;Y0L=#4brK<U^.
%)>ISJ%=979SQYDZ'Eq&=+_V'.XKm%__\h#BcTJk<44Yb^4S^ag54s>mO00pb`,.3JPf_JeU)dZMK11-pl&3@Hge9r7#QSQ<CpAZ.
%88Gl:O"-SqmBe&=`6lJ[=`r?<ie#KKXT3ef0LP6qUC*QVqZ>72d1t<.mI"8l;]TXSXP>)7A,qH)"BZ-TD>(VG7'=G;f2tTuV>FSr
%pE_O1C(6i9bUj,qP)jE!s*l:al&!MQCcWf\Z="n@;>-kAkQkPGGEVG6J`8D#b+Oc>JF98oL-!A#QTIfUhBbA770FPG44UNiI=Z,7
%>RY)XY[$0[C@t.n>`g=3JXa^pdJI3h,n0g;RVFt'-GP_fn-.^/mm=E]HG>Ac49#4YeN$qZ4Nn:jkS2JKQ67)>2mR)mXut8),>Igs
%`WtTrO4@arY;(f.WGN2FM6LW$qGXMm5m3k>8`0c;&[]cr^flKD-Nlfj\o#%1A!XXZr,(Hp;u)*LW9D-N2dD8i&n:m8TV1GYr$\@j
%4N/6P,!p;W`%JJc(Ij`%%ZCM(l*qS#EhE([J2WLJ029SXA+P6LVH0eYiB\7!_6]o@VUi?JJpT6$!.X35X'$nf$=$S!CGp=&Jarm8
%Q<K+aY0@bB1ja0p?jZ5m4o#-klCsaP+=X30Dm<K?*TtXPd(>UXf!@co)Y4m`e4.Z6I[\ff3fGX3)u<5?M]Je-I5b)b=rY^5aBkrH
%;:092ZP)4QEn(fY?XPUtgFRhZUp2n)M<o#qlhDS&[QG#+S^*-nJ0n;"7%g<Bk(95[kRIP\$83*l5Us2>F9B+Ngg.%E7"g<i.M"Yu
%X;f)F-Pl<:7>?V[I\W[]N+Eg/)@Fi:`8Z=ZVFFW@V_8$:qHN;!P%*r$#TTBM+r,l\(NsG/r`Q\nMVBfXf.e05nd`(LkUgPJ#ZA8Y
%E@QjkAtCp@dPbrBU=3eClgt9;ohlXa&O"1'4WF9#\1R2^c:]2n\e#ZrS]LUhj,2*$r#lr!iO'V9.C&dR+'\lR`mfM_2LYr[_E@7g
%W-q255kk7?"nIY7noaDVeF.3C-tgcE6ZKfJjGf6.T*\^ZGBT12,NM<KMQ'BRBg&6Z==3;%AJ>ae'j\o&kGN+:nK$&43mY=ZX,Y_Q
%'#n78'6nImY)i<?f%W8@io()AV1S3Hq(3c<j^r'\mHV1ra+`H="plu[+]?<aX"MnICtoa8^Q6+L9VKR62>"I*4B%+YU*AgsFj20,
%pl&-Ka?N_D.9RRoM.pKiM:@oH0OT$B('V_/=Mu17<gYO&6#7d=H#1D3ZISbf9bi'qMW#/u9&\Pa>Hd4V5\RP0Njp=^+*de;`o3s'
%!hI&83?GFsQ-H,;i`4okEp0r=`)JQC\D5c//%47j6L_"W`4_qp2eE0+?ruPu@(Fa_RuRP_<H)$<p0srZ?*Ir.pL5I9Q>)s5m%@[P
%p*NI'%HUD4d8/d7C3gU,PaS&R`+(Vj[CB@52N7bpjZfE4MdB%4%?@jTe[ScW35*F,Cr.^i*;C%(#)?1E]nR*5B*c9,HsUh50fM_@
%^=dneFke7124W,_iadqaYotW-S'kN1A6mtt*c%)]M"Q:E(YA#n,;Gh[O+E0I^NXL_?J*+ha$u/nCL4>f$u8@Xk*sW9(3]aZm-gQa
%Q[q_G^A4Yr4CbE=$B9s%pLW&(;)J!;\7d^]a*]&Gasu8Vq)]ge5A`//*a9k6qWdaf].q9J<-L+qB!ZaD2?S9i$E#$sCiiD#DD@b)
%@&!:=;9_0?Olk.>EM6SCo1dUU[bY@Q[LNZ_>BCM1e;L!q7`Q"OR8:Pj29/&]AokXqr(&)>QSrUmH8,kiiq33j1Zp`FcG`6L[J)@^
%@lO*M3Fr"DhrkDUgWR5p"3OG_n,+&BS?Mp,07NVYG#Y@mLn\BA4)M-D^9-O"FkXEEPG6(J_KOl*J+_FV'I>=(.g"$QaW,(@Xb:Pp
%O0-l.:%cNgm`K-Y19B;;K/R+JKHkWe_]h0#mslk>NdEEf46/`!LFYW+46]M6WtHB-oBTJIO"]5cr3:tbnt@[FeH<s1mG.!'Bk:3L
%6F,Mr.sGip<)Q-d<ckjWC]gbH9INJ3%lA)PMR-g-_ep:Q]Q#$0P_eO/QXJa2H,Z2eMmfF\(3d1`GY2>lCOU)\#FT<hn'aEg2_)(o
%(F6arDS%uhO`oYU7H;=6Lbfk@@cG^>`@ZLV(:0fmB`q*(R?5+_>PX+gbo)50Z$Q!iAucn?9e&fr\tmK%$T<Rhep`4pI@lBoWYD5K
%_b"L,];(&CJ:4KD<,.4XRFbFZH:mBu`TL@R[?NID\jp%-'Z[d72S*UHo;*m,Al-m_QJ5$^YUe7WN<!5*W!)]Na'')m7aG/^G"VZ#
%.#s:5<s45cA)1u?PHt%:r7\+t!@m>R6&IP;\6\j&+O;q2<'ot+'U/Z!Jr#3e2aQ&j2!?QP^[;_irb(OOXde?:K7DV)ko?QIL]/ii
%aon9%]%o6cNIK5o<;YT->codB\((sf@A>4Zj7VY_lu%-KGRp<[`3l'f='[i$#RTB4a"4gGU<k/hc!oBhpe@LD,aM2XmNahh@e`(<
%Ig6,ij<4&C1H.=8VcTI6ihIlmI.$Q(]loY9_+&o+:<Vm:cpWbA&6ld,V]kP"Zm3=Pah;Q3/($kdk4bEFa#jjZ%n(X=D?g.RLnho?
%<T\:Vq'M.LRrN=^,FH2U]C!h&O9s(T0u&10Nj[B./3^V"UNX485dkWXGGMC$4A#mhLDeOfjWD7++!##7RZ;7ARjm#DpZq.iV[u&T
%/m!VenJSVk,6V`l[Qgp)M+3V_4FoP!`uBo]\'4bpJ(<e%bWC?%R!32&2p3uQpC=)(Yar/5bhQ:;QD_mFoE'$ijZ@n"q)n(/]m>'T
%Co'WQ`%iBT8Ze%ZkX85/B$(Z)S_Y,E@D[k5"c&f6@mOn%R^Q5?P_E1Q(m[[.8T:""JZF#M$SA[r1_2D5La7m`(-rFVdebk.Ue7jk
%X,uiDNSR&^=7fl^.7fK&%gPd?WUoF,_A_WV;4uP^GD5Y2mGf_^bD5QaE0bBJ11E.p>H+caCO5@"E6'+LjtkIoKS@td^t((7>EfU^
%g:V$ADAmT2,8_SeFIo]Bq>gfUT;>ccl&W_-Z.^`XX^cEJ#0cMjX[Lc!D\P@m\1!QB'=(qCnZtat(Z]@ehU:P5hlcGj0j@rs1L7tI
%e]Z4mCmHRq0#ntgVodt.P3f?_;aQI`r+`%fEgq-o$JTZ"G'lg."FcHGYT9$N/LL)Aedg)KYh^HN94kR!n^6X]>&9Pu7^;VR+d-l/
%15.'U[Nfs6&KZh(R2L.5JF@#dkf9V;pceZ(e):=HV6YeO5dm>1?p*6r(A%;2\0_HmToMKC=kbRpCL@hL(-?&H90T:'*,r/KhR?Q'
%)*e1)D1`TZV(;"cZEG5=okA3dR^\0!?-QF"3`;m!4\6dK"A11Rlq/ai@oWU&(C-*VX#r#*T[%gm]5TTLei)u*BCUZWS_G-g6Hg==
%$(D>"Z*uI1n:6)>e8k:++hSb!:?VYiO=BW7(<<]Cq0>Q`LtrR?kiIkrhQjODZM4.7+`!3<414bs*RZcnK4#(</OEiG9FCl;bemGm
%_lOX;fUC2WX[LN9Tt@JnKO-++1r.o6BR?,s*7-riCt8=(`)4Z!ob+\o%u$Qr5X/a#\7-JMQ:h^g4s8AMW,id>'663n+-SoIo29-`
%A'H7P3gQ[[I@kjLgTYKqod\sXmq^e.m93mP]t/b%R;X/_Ci3nDgTAI*bj4-`n8f=[Df#<`Vq18SB(C*@BXaLO&b+]Up$SD7fZqtE
%R:QlPOBoAB)9_B;K`m$g<&>oDEJ<dJS4U.kYbVE*E5jUo?t[+')'E/MU%I^m,7ui[*7BcHPh:@WZ\$eIe*NE&ebZPabh"\P>H2OW
%g5^L*+,dHocI)UGCESiUa%*ieHM(\"WG2(qmC#:cNW<`ona7.SPAk"AhfcF^Ws+MiPkCTPm8S!#j`qNAmZTe@BcJ^XQS;#g99*N9
%9!db;Mh,C7E\l1no/2IA)6gWEj7\L)Wq_NE^0BY;>FC\V3cuu<!R68,W%%LD(%H_D$D3f=S.CUb+iNl^8C2)rYUU!Im9,E)a^!",
%k'c"<]P%kSTo?%sngR>LH&&L=(%3eGnh`$@=1ug+a1S)^p+8(%6fUu5"S4o`LbM=$Ge!+"6,EgT4)>Y0/G"RF8P1=#CmQdD!c$QZ
%^9Y!CKG+VoW3h^2R_2W;J`)o>=$\jU;Ot>M<s4%"-8VqF@ekps^W?O`:%SZ&:pnD5kNt+L765He<blGk3o2nQ";_c`&LkagE:^)8
%WD6o3Dp!%.MO[cT5<sa]$H:klM;p.=G^:fJQW?t*ItFH\[^=+6glT6I)pe^"OJIM+=g)GT.mM%p.\,A7GDnB6jfISJb6hi'!p]^G
%Ao>+V3Rtq<(HPr'g58g?TXV!ZlqZ_c$1FoE5U&sn`qh:h&7#89'Lj'CFPS6!6Uk%r&dA/$Qn$eqJt;O>)H[$'2ZZO[ZCf!ALZPbh
%#JmVc)IO6a/LI5&#p=e+&A-]<$D-D7(OtkIlOr9`l81=YJQnYRXD?'8o!OT=&t#B5^Y;'H[EZ?5/,o*uJB/7R0O=l)Q=\QbOJmjL
%3/0%X]IqprZoQ.aV7<B8^`[,0obR5m)@$ZH<b(?2'f.P4%</#Ll(5sTl9/)jJVcMlb(_`!0a1>2AWb(DGj7!W:dL8l?d8qo?:^1.
%cIQ):VL$Ylgq]O\-<D_hg\,=bh(!6XTl%e_+o6+HbcbW;(s0GSRO!PK0^]U)7<#P7XRi4['Gq8Wm@Ks)2et!S^+:NT1U%t0&?V2a
%&erXglX<\k54ZDMDE.CW5%P5s/22SUko!9gnr=XQUM5X6hKEZbI=2faNXN>#SRck<-%;+mgFgn&4B36940Ems^P_C*dGdW"pka6h
%VPZ,a<sco4MOtQ;Q\S"nR:pcH,f4uPUtedW7.)j]m*d*[8X0bWq@jiSrS:qu&h1GpopI^"0%8h0Gfqrhi(b6<&(Hd&Ia[<=']+'O
%GQ4BgHO6RMV#@Hj`.'KqFl=D!?4A7k(<$*9F,L$OS17?S69=Z7=G7Aj\c@W+RtpcX;b3"?&78du)]A8]ai)LjdC4spIE%LlltHc)
%-&>TRHn@Uh'MhA0[iD'aYe1D99B!\q8^%ad"ZVq/Ql4cVL5c+@AFuENOjGTo9T54COcVX?4HPd_P#+de/<lC'P42XQ!mE`)-K3E)
%Lc5W--fOSH#sY&<5m_ldV&:S,Ul;^gTJn/ZW.Zafe#M:#=)T(\SB@+9^>>8d.>'0]RO*?g"``q#i:bHJbNX'9]XicE\"N!!dJ;WJ
%Ig^"!`Z]^W)STdTIPL`j;jJn+A\I3<+qsZ!5PE@TThfC0pJfmo:+j`T*GJRCan>Tn/LY+l5(([2^?$R3gM_A\Dl/?),rjegTPrN3
%aJ&S_YPQL8\'O<j,Y@m)buKeu/b?"_Diu;>'$3_^3Cumlg$:cDSYX0\PNHS"4jCiVg%n-H5G8'f9S!AH+Q4DQ4G<s6+ltoK*/W!`
%MQ_$NI3N#$G9c-^]^n/?W?8q^q8<pQQ:](EH"W^rVPjW9jYNGRfJ"37jddRd`hiLrpu,;URiq&CjICE(cTBtGX'%][a[&3E8n^U1
%gZUFJ.5JT/BhZ?par!qCbc&i%Win_6r'\"$Z;s<9b4o25WEsSlcc!&tkSo4,A"()pd_6Xos%Hi/Y$/hg91X&pl#Ujl:L(NAjuY(H
%A+.,$r4^nJrPT#$6uU'dbZKUl$&N#1qI3\e9,2(gjj2WC1kkl2/4jG8.Zkc#NMNYKm-ugU6#/)_^"mkcf#V9/FrKg(gNL6a%ZgRq
%ak=Q$1IL0t.!UVr5_;>2D+m]@c2Hi+0h^^G@,>d2c26I@(sU7h]#l3#@!j%CArX/.R,`V>h6l'6!$dOtd5gXUmCo3W#2XSI@lsO8
%Erlk`H9.cUb4oZOb0(3&7VD&)8EGo@R6I0"+U$?Em0>FBqTSqF'KU:lPC9N-lL"!VX@#Rkf1[u6_l"#W^[DKCK%lp_61.\m/Wm*Q
%rD2ZC2m\K&7j1,pmWPi9hT=N$T*[_Mb8CH\h4X1K^c7G72f*bj6%=Wi-]7j/glAE^0_d_5re@K"gsmb`IcddG]KX7+5@jiSU7\^p
%1\p[7<lhQWM`aFkdE"'bT9CNVGOd2Z134g]fp<sUZVK\ZR@c#to]p&9IkgWgX$kKJ:3'N@mV@q3Hcr?6M7<3nh(sGn:?Xj?Vt\tR
%Q6TY2'9gXMQD+5Hbac$+f9sspV^t?,k#1fXCR1Yg'"OW5^,(!+.7*lK@L)A4j>?%iV5LXnG+S6LP2f[d4it/d;Y+T<5=tQ%BE9!'
%+CuHB8-p/`+e^nI#ncX]M2YrLTOVNVNJuid`W_J,nkL2#B(J+),ibVpUm6npP-JEO#rBDmq8BH3Ao>m5%k$K)/>t]l$g=-5oM-t6
%C;/).)H)Zah?Zb7YN[hHl>&)K4qX[OU@6m;N.^fCf(s-ien8`!0Z2aM?l<28SQPU9I'_-U[,A0"N4!k9gLgRm>k8V5DGolYBlt<j
%mLrAL0):pb2lUs,s"EC=I\mhYiia^E<_4<4>-X>-G9o+SH*paP=I'\p/P=P/7;YW`gSZ7+YMP@*("@X>CJoJFQ0<X.VWs2u.BFE7
%25eB)jOp&6RrApZ\jB/-prn7ZBbWG&;>_91NSbkiFt?'PQIF@A>Dc?;KA]_]s(#F5VSOBpSCH3I0,gsEn41PT>5O&1TV7Rc-\YW1
%gV"nQ_$QFSUAD;Z$g-s>[n^Co':l3q(do:XE*7#hg[M1)K_3aH*.f,0kJ"Pe=kc!nEN!$mgl$R_3%qV<TGXfj<PoV4NOQnt=kc%$
%%i@#.I<2_NX9bDF>:YGFnHRu6eYjgBY1p77d0cSeT)A(FOHR6Df^"g9jmAR.T-oTu%@'i0<\7bUW9OA$N0EjH=$YF=&pAMM@EsCp
%V*`ktO`7:]BUg>PT,Xn1Sj9p>A3VU,3G)IFfEFX<UcCdV_Z.:(6Dp)b@f>lT9&`.%+pKEV<$T\]eJ%C!E)F#!3NH@IM5iAE&f;FM
%hVErE-*cFb2YY6WW%IT=nnr,c`;=UG[8!1tNhU]7],S\*8H3f[^4b'AkB+>*PKE*VjHb<IZ_C2lN4#.!0ppR1Cl>@&^p^i*'#!%U
%\"+>2cc:1Tqhr.ur+P*1J]Kc?hp3ZaG%3s'QKa-q=#+`DBhag"V6(;7"P!3143EGu6]WZk]6:/lU9O<KS@3cONQ6Z.69aaZH9Ms=
%OWN<R.8"jqocbSue_-dg>'u/;F`1;>r5H@P:GkWTq2&VaA=a168u2t8OUFjSdZj(M,i.Y/G&>D#Zq]29)kIf-23=RO.mU5C`@R^t
%g=D7f@B=47dn%B^l`79qHkdH+lS:Jr^bl&9DZF'DiSR`@1h!]:)@`?c%oYn[`[1cVYPt](3*<A?A4_C@np'AD[ZAK.T^?&%\o`i<
%7Gfj(8t8,TTU>/`Vd"t'Pg\,SOhn0C&Tc@o8kiu:!Kna$]@>VII.p*-WG87'c0_CXA?P0>#`q9+kqk6j74[`1bfq_61(gI0KBQq(
%P,U2W$Wbt`!V]?)fA1^TV4m]7@XZD76gbSc5Gf<)_<DJR2EeW2Q:j6T%RVaMIPT9mf(G]Qh!16'cUl$_W,LIjp5uG-(6aHGfL7W,
%?B<XMX4::<Qr6jLKsmt"[3Q8ReXDR(`jh+&D9\hrJpXjK/^;218t`>?V#5kcoS\&[#t+RJK>bu&$oP.P/7[M7R?F!`"s9se!#28_
%2&O7"Ck@#!r,/FMk,(P2<Y,?JJqhe6l&\aK*GSF)@hbsnK3#Q%_G0d-9<ltY5C#T/a"BATot%47p6=k!;=83t,WoTu]sDH3hEg(n
%/^M7p1<QNU8ZBGY1fMbog12+K;m0i'Ds5u@49lWK:O]@4(j(PhU`mHT1`9`(*KbYWATojWHWL`S>J9>"U[!AQltV@>49`u?Y2*t"
%S*ZuA*DNA0,,>6.!E'4l+X5%"q9'j3;P;LXb-.JBL"lSJk(&@\AMuW"QnS&80FM[G8^dJ5BEpt@;N*)PGitf>l-M006,l'@%ksSZ
%4i2TIf,]4Tnab_j"W&Sh+4KK2?1=P*Jp3d"r(J=brEC<Rr?goiD9Pja'L8)CM?Iq\Z.7^jWq?"B;7TB/qe!/m7[ln-eC6h8>Z\K2
%gD75SJ>848c`;)&*$rf644cE\[>8Y5d+cH]<Q"hU.c]m8l5aT:C6L9=YKHQ^9^CQ+r4j504NoiOFM:h/n8'g!<CWd^qpiUYDa8+0
%SLPR"(G.ocQ?e67df_QI8Q%N8'2_rS?Lq[Lo'2sFm/-^VhW6\cHN[ICC^*aQiW2LD)oC$na@,*E#CkCGNd=B#j>u[W668-i4I9U1
%+&JLh=Lq(n]:]^NEq:FH."rSCY;LNP<tYs<VE"s9:&./3-K6b0FdKD%2oT>TlcE9d;q"h>HGOfEcB#(bS1%8P/k4VK[AC:S;N50p
%;[Ze)%c'-M]V4"V=.RU,*PFj&Cc_$[_@TdIM=-Z+R<bg#8"7)/WO%pOKt7)J3LZ@'](0.MlrqM$Dc1?j%Q+m7."C[=L%ZW2#r`D'
%-VfuF184r[:?Xc6I=XP>[`td&oi@ZB!:$KhL)a:6.XGY.[FR?+&7r(ANFb-77-ohC?!kbir_("e0MA51gJ?&6CW2,CettJ&SX?hN
%0n:S_aelhuG'Bk+hAt&5SrmrOCZ=3JIW4:#B5VkWIj^8&im-_9IhEkL@75EbAqt2C'^'-&qq:u:!9B`'XF_F'jVX(N+=<tL>F%iK
%!DHSeho*\9dR5#jR;T-r)[`NT+#"87/,0)`bJMB0>>-HoI5]"LFS]B^gGqJLE)!c^ISa\>/XiFn/*?"pU3S>a6l<>r@<"VLo8K_*
%9u>#\S'r&.N?4(HV;Q^$3J$qRNRm6]YGe1N0;>LbGBnMdhP#E11iuF)m*irT:G;A@CXgtOdF7Iu*&Yt"!FqV;#(XRbpBLf=>8f]G
%jY`"mY3cYh):4bph5P0t6,bs.0m=ADCg@PSCh1gPcH.)8KodMmk4(kuh:.)&A+N(E"=Gcp8h>YE)r-%IBF]MSAAVafA:0.G&bj2j
%(rZ:59YPD$:4jMfoQb?B=1B^8:$:a3FpRc[CucY_3]&`RX5#riO''5fRnPWX]1e<`q0&CKK3sS4pm,m;>Obe8bEFC[oh.?[pW1mi
%<0&(.QnqRGc7\B=?Ckg?,`Pq(Zj0FV;(j39.@[q1Y[<s!8UHr]W;&&JnI_G_3=\i0]*8cP=(WaEf*Y>S;5pF"GJ%J.CihK<R*0nQ
%C2IB_*;V:INQiGT-bA*_;T[6<3%722q).IWF4)NMns),"!3WgsPR*3cb3tq\*&R1^b)p0CDZsi[9*>rk03bbBR=\je[^EBe_+!*2
%9BhA/@6,gC8T+0AI@2pI%_H(4IZOmWhHH;89_,9%ER)7s[n,-6Qp/RYDV<hfKZ_tD5mgXm&c]>M'^)>iCfB[p'4fN#J,n25EbKG\
%E^KsFqk^8E`Uq@4K`$:kUO86\^E"2Z.BYN$9i(m)>h)nj!i']%+i>mUO4AW9?b\#oN]o;/#$Ed#QG@D%m\\XV'65=D)9:0b*q/J7
%3r$RnF)pOQ=#=K+pN3rknNP%&DC>4V<@LmKR5T:O2qXiAPPi9UO"<DLr=7%=*,nT3.7ADn5%(D`.Rl%Dd)U?Ed:-m"4-lk%gPlN=
%I[c?_4[_<\gLU_](_/"fK=u$[kCka+1BZGeFK&=RoFfWR2j)7@dr`7MICG%hqjn(m!#_U:_BE>KG"i&%r;\`M!ZZ9T.D;_MV:I%;
%GkK//Sbc'dc-!e;B,&d.2KE`*r&ZsaWkRY_5QU]n>^fj7CVt>0>"(`d]#3"BM%d,r3q\$0cobA3#K2.W8Q;2N-4cr(8ZBJ93/]sC
%V$X?/16,5[JZAKVgg\jJ_+S5Vj^.B@RM@/AR=>Z^akaJ*B$oJY'*m7+<OMh:("g'b`FG&M<<4.jrQ1frkNXRt['-$_EVcD%(j3^X
%lZcsZ`BEm9fZlK5P=&?_2SS%BjZ>=UXh'+G,*0j)*`&Rg\NJAjb_*F[O_ms%#I%-RS=1#N%OUOe#MM'*:et*)Eq\k?Aj9<Ife7GS
%f':^RcLqar-It-C>M/e[(Gd;YR-!UEmPCF*At0t2_@.&#%YC"gQm;08=bRD%f^4miq3Mo4/NI"Kg\Q't,pu]9Ua9Y\H:"K!l2-U4
%S]g6uSt,G04-7&`n,>c<L+GHQbdkicTS:.F\Q8/?fYU]oG]iK#hni15?-:Car9U87oD7.<%HfTiIks#DF/Tbu48$o9Sp]\mB>MD.
%N^t@ScXFp>IRtcT/0Od'3^l=,3R3M<l9-Ei*4Du$].=:_@`;[ZPlY->6E(VD4,:K+Yjhi^?U3ur-N=S2VZ;40#tXUjH"%r?5eQ8/
%nq>#0iZlR*jCsi0ht!A(8^fUiSgVbej_:L!o[8'n.Sj%j3NXRuQ"J+#9Nma#b7esc)8,]#?_.aTcPn4a`C1\#a]Bflc1gjC,Xjqo
%9#'&JjA_>eCS%8KbN1&ghp9]=I#GJ4/rTZD6/m5JRDbV0E;I-%Js6/5#%c+?!5s8Hikn^E6m_'L[9[VG`MGmf$7TlHU0t`]l^o\7
%&tc0YCUifZ)-j3jPkq,<)p<)BP96/&kLCajiDfBYL,TNJ6?Ska,]#GbRMn\6VFlENf1<=bf,0uqVrDk/WHf:hEPppOR>MnpWo(.2
%W+FgG)1_;IfgsC[iOaLar/Tu2pXk.`N2[kGs6$-kGT;/&f_H[qSoVlT5R+UH+$Pa0.c%]p`c&jP`qoFn%e&Yl%1GX=TLK&lP^-XC
%"/GS?.ilHj@#_*o)Ln"MGI']U@CgnG(Og<p1B@<!A=c#ZhuR4uJGD:2^;/ZJ\3>Q<dgSL-/BEt]n+d2/!u]?1U#R\k3uQ-f,6K6K
%S(LcuF$*SXBTY3q1/(gt.`ke(RB8:J[Rc]qH*npt[Req[=hQB`[n%413Q3QDpn"@Am,b.8An4<eZ_)N/oQ*>VEjq[iYE?Il'"(k+
%pJ^35ZHSri`0"WV1<Nb^q/_][1?+p)g5uunZJSfNr,Y1fZM1!?mub<01A+d>s)[`qBEk)r!l6\63!C2oi7B6.\E%9h6gu8U\IU\j
%i\R.bCJMU"X1i6;ZAd[fEpsUb0ZK6)+]p%GK+;2I]TbOHGe%k/+`R$n8)+utN1slYQ&FaMgX(/botqA1.G$3A%I<pYl"Q@]E]:>Z
%01fs3SYYZ9V)^8R*s35jbnu@?e,uekO9pq`d.+AYJgq)GfS?YW$AdXYGJ%-RRfseQ1S,A.i5`m1X*n_'Yh.OB``=AS[sKn$.6SXM
%IsD.YHCBY+8/6[7+u?sfh7YCdFQ#t-+:-D`VureGaF\f8RMKYn[0%#iLn&gs)sc.l/K*uE(*M22*oC(RA2+)*.\-KSFU?Jb02q0i
%d*WFNn.Kmm4HkjT5Yca:.jBPR$]eFTdNpN>;N?$T^R?"Sr3rEVQE'o8+:\;8Teh2=?E)O7%Z(2:30uhK3JINf/":J#Xpf6+$DK:u
%K5.?J'KTkKDO.h1h:ZoO<8]Y`YN$=I#e=l\=O^Uc^UNueB/Wp!%@+3!o?iS=!?q63$K`:3$^[_hmh2BCo;5iLI@%1hohhIZTPS:K
%*Q>HkfG27_qrqW_TmPcF_.\A;K1&5'\)1b2H=C^?Q\LLmEuL(/;m=Wqf*/U73iNrKFGrAj\6.VJ`i1tak(+)Yh$G,=%GbZ-39Zh.
%U$>bQCphjO)"c(1)pR<58lGHT7VHRFJ9M4]-eiW%!RF6[CY7.*;*$r*'^`o-jV!Tm-9-WW^c414lrJ8kmXR2hFVQtE=WY#0*pt(*
%9'>ns"t$+FojNKO:dW9;D"Tp9XW@@t(EU._kZ=Dg^b\h#!-0mnNT*:Q@>dH`M@>WZ48b2_*9c^Aj@,I%8Xa3Adp]j>81<4a3c3MQ
%G`7\XYAAQ?jS<JS]$_TJK^l.L?%sPWZ*n>14I-@T53F0/F>Giu2&PtZV`B3!WH)6sj0lb=oQB;k\qDi54#Ogk2I"L#BaW[O6K?N;
%&(.#TbaTs`(Q'8Yp_5l,_Nb[u^p?=3OqnEb%Zd,^e6.q7ibOhmOK]l]:KZU22&dt;.!0"VmuU$FV+(nYEgS#/-(1"&ON-&DIck&`
%P]@?NX)'O@`:/H#`,EB,(h4;7KKm[QK./Sa&MYb(=,OB^//o_^]KPC1Sn`I#9Y.=]SuWN*7!XYf&Qcu_.Mh3XgcZ]f7jZ-).PUY#
%-g"[Jm,Wd%m?`cpF)j-1nZf&N^_(SY=^$;39mBcE]0U%(%[&b>IGp*&[]'?#Lh.]?2smM;+oi#sG[ro>A0JY.pPmqJL.gSd(Y/WV
%;#SY1Y$1"_ku.m&q1ppKWM3k?<BN+TA<>op5"=A`F^*&U=!%VKW@GI.AP!/BQ0Ocd\-FZcdSDLa,];"o,!k8qU%+XQO2lTgoQj"^
%[g#qY8$6c@D@f][k;d`fbtooPVP2`ICsN@TO=sH*hqZ^k`9D(Kgd69CrX'9TS#3s]WK^PYAT>=lT2M5IWu7BbK0;E1g&&\gTeK<_
%&5p?SmkI<dn#e;gJ;b+8gES%\<'m/I)?FHsBa%R,`nL=f[C[<B;JB;KP`l";NKIXi`(ssri?ruE+M[j%4D4Hu4[9dUrc@E!-'[0T
%[RD5FR?-<"Ct>@j:3VUA("tNhpNn"MX5as;W7<n(-9H"0"14f/FF2=P)bC(D*?1T%\0Lp;ES2,q83uLJ8+a!e8uMElKfigcTie#9
%mEr%9,+pFZ-iB4^\cpkZ%`LVI0%kGKh'QVnXN;\-L,M2X,>=QMr3pYT)jU#ZEInlMLZ'6*+$#q")gs=-V8(-$>(meTncMlf+KVr)
%;>X`IVf]q\1.:;QWc:Eb@kpua<^rnrSWR^bfkh]Js3(P:>G&(Hjn$?4`>.:IJZE+VRu1X&CNo!).46N63*`sSZfo9lV[p8[;:';1
%,t]%BgS[Tkb,3a<dZIM]XP>+GE>H)^F\1Fn`iD090!WIUYn[%)Df28/EO%')YG#OFg>ZT!_LBEc/Q&Z%iu*ppg;3,r1>\AT7B*I.
%9lFgR%V/X<V2T%G6<d&uDX)fo$O*W.h"0C")RJe<=>W\E8?cu,]Z[Z@bKQ^>GAkI?,91pt>V*uZlo;22LhfJBAN[#5-)tcQDTE[A
%%LH,e)IMHBZtI!+iA/^,d4I+<1'S.5(;X;>ZQ50TE*a8s_RHc,qt8$FFq$OoKg'>d'9P!L&i,ci;LE8XQ$4HkafZoL[;T!/o@h')
%T90D]jsGJ8$ac:bRs6OVc?L['L:GW%N68XhDZr[YDV&=W=CoIN9%Dr#&f2,=,4bhE-/3Yre_YAF.sR`oI+^p8-'L12e+btqi>",o
%Os,tTI'T,>/ho8`0$D]`PGp`QDf1`g",7]%B([YH`0/T#8_bOAA&k$F(-1DuN$+ou[_j@2p-WlbZ<\eX62,opoJO@3?R#N1/QP3m
%hngq<:72V"r+52WYilF_HrW]Erqb7J&[Lq$U"-3&W4Lhmn^7<jJj(aQ38);SfZee',PrprKF('S3kIUi5u(*8;Rs*@j%04UHU)1s
%$dp1<2pBmGoLTicELsU=;b+VY>a$`)mdR5JppBj\,5B6&_D[TPH"5OMm@Kb)1Kq]/HUIWFAh.'Z(-3G@>n3$%FUbWnQNFl:)U.fM
%XCd'0pC;e7LcK,o>?oU6_q=8MHs'T-;1L:10A.[`B5$LB:<6sGUHVq*D1qN8IFha+CZ,]TVQ"jup;Up3f'M%PXN:!\gZkp8ALu%`
%TpJ0?8cXP3%U5Jh^md>2-_1:Him<^!1+]:_*>Y*%08h'2-uQYHGbCqBG=Y$.14NW0'j*M[4,A[AX11NFkIIF`Ap@joH@Odihk[fD
%WrnsZ0pY2*35;jGCc\`(M6lr&7A<tZ4&;$h[N[oeKi#qb]\hNl`K]t[$o%`%>"-st8aH*PpsrV[&o-&1"c!6GR2o^#.F3;1C2&JK
%L@ib%PM#%%f"KC4W'%G'>G'*8m+)X'Xm%ee18nmIA[^_9gin7[3r.o<D:MtBIeIEHlCib6M;sK51>XG_Rpph`.T0amDP9GT)pNhb
%9o%ug.q05\,e+A7;@GFNaS'j;gZjG>B!Ad0bq1W9;]Et.aFu?0g$??;P:[Ei-1phWIJkVsQLLa4QYYX<%=4OF:QhhpAXsJ#gRiC#
%mhA`RCjZ*Tk'ch`"E3O<)6\4mBh+lmlTB1@(;17Ng:i::11IRoHq>[LkR8DPbB]$M/;551mGQTOUZb&CP\OBlQUQj/e<PnS2:R`k
%6_^=iR1^UNAW(I77@?[CG$8n"3Kn0Tj3RuU%E]oC,XYjFb3(K"#'^4OQB'cR^pc!.\$4LIVWr9/4@;Z*+'O<$Y`rSbL]!G:Emi0a
%7(..>XENg/1'\-:0s!LP/d;jgRE%0\2ge-3S*20G.DgP22_1[T]?f6q+sJdOX7se_4f"F@Ag*u.A_RW%OaIm9K(J:J1>&[q_S8e5
%=jSj7l.ak>%M77=O*ksibXcf*pe@Ymm7+>r+X+O'S5rIi!+^cd@ncR=d*MP=U:>A,<7'ci99JW*-#=4@Eo[gQl%eNS?fUIk:c/R+
%k,poUC:a;:8A"5u")GVsfZsF%IPRubK;CC!H@^0NTQg[4k;[emaf!ei$L#g!!bq?N8$"Ib.gNmkLfk(gV*NfC[:A'HJj0qrkSZ.1
%ki;]`g\\?mnheNuH\&oK=\>?4h=\NtBq=XmC_5Bu)3E6TCbYGYr2tjslnbP$lSTIfic8Jar&psMIeli?Ajg/TEV3KdG"HQO(cocE
%N1P0h"5nhN1"Qig>QH,)U)k%,?l$.+k0M0VO.CLE9C**r=g4<%@RsS[?WVUF&(<D\O'H6s8C7V9D=cQspqY<#(CM.?Maso!HlnbA
%aq(L4\1[T>9e:oV6+9a^`MR2\dhi8u8&gI%@gj)*\&`)EA``6fk%&^^9!4i_4;!\o*ZY1$?!dMMj=FpjLtG12IiN`ZSG#D/K1UJ"
%G&AW\8.q3F7ioZ*)f5Os/W?T'W^lHn#o1+9I*EAT5S"">1]F[)R,&D86pVY`G)>pa-N8\\A(_`2o?UCggdeQLi<=[F2@p)_9#QD!
%fj,]<`Xb34"p(I\2>N*gk+mh3,^2=-eP0Mr9D9Y>O6s(>lN#/q7(?UZ>P);M-g(M1fL($HM,3X.5/<>2Q6aOp#0hi=7J]`*4j<f&
%80m.aB^<+?V6R,8FnV=>eHbf"RL5i=g[QMe+c0A*5b\%Y]=7pd+Pt2tllOBb9dQ7_/JgFo1/C45[OS\pQ4@t$]W@CA%q+FYW12.F
%"MW:]b@VpGNh?^0Xt&!u#H6')RMZ-bTn:1RFd2AO/*Q1UbhDpWpCZfuVeNi+drJSD#cU2#VokUe<$LA:'Dn]:qZp/A1[#mpPaUb.
%[M^Y(:8ITUG(d\`K0#9gQM=A@ST'Oo\Nla?fm^4egN1X%Eb`1QSF/7a^M^s+oHsTPE=&EY?X7S/PRQ4[47IVtYaPI^2+426ObXhJ
%!eJI9h+'Bh2+`Ak*d7:aVe2mnaPCe9l&31U+[:*\f,`t8rQ+q1%l7cM-UY53r?,Wr)4]_f/hmIYOZ@R"j\X,?*Z<<'><&"GM-;Y+
%P?*>"$^"Lo\%B6N@HoAj0Q-]qeCLGuZOt.9]nj"_erM0^=Oj_]AA5XXCB=\8Zm3rSq$2Ub1ct:R'*\5@Jho//&C.ZIb-]U(\1X8N
%-Fm;uIKLaYaaW<%L6J5Fmj;I3BjAb-1GR/r>hG>[>YE4=hu^gLX*Qe#NAr:hr3X!0_]t3(#?f2,H!.!i3?!P:^J^013up<F7k%3[
%n>F5_9ol(^rVXTjb06EO]NI!78/KMm`]80+E]/V9j7Fo&C%6*'G<=Xto:qa3Q:Jbo;#%m4NroP#,g)f*(HHU:+E9i8fh[N)?`SE[
%&q_V?[LWFYT/prAQjs;?oQ:Q?87nWFBirA]#ceIsi1`&2,sZ%QMRth]%;/-?nZ&XQ-^Qt-r)6N8&/;jA62Dk[b/3"])1n1u3_Sm-
%8pQk7o5YdgR_/.k6<JK4e&ZX2$*ND+P-fi'B:&G@irrpfO23A]qHaI`9]uF&idNpIS8Li.1`5/1rU"S\@u$5AF*j][VCjQah8,F7
%I<gm;I4Fr,,MnXcJUjaZWG.na:h/j7V2E%#Zn$Z@!cP(d;'eS=VcC=MdU]6+!3sT;7@*A,ITV!AB#c;ucQn1JMg5Z$>$M"m'O>S2
%8+,MF]EkikS[#f\,)%="aer8d">]Q"`qKa7ZS$<28_a36]ap0D;H#e3XrIZ42ES_l1SJk:T>8r;YsS3sTmibQI)r]k,Mm)13j*F[
%*OdS&HMf:9$W:TSTWP%njGfdO<CQ\86C;Ldg)7A>#`,hc9V/%h9f"PT1lXb-p61skKmXW/(miKp#/+,CZV@Aj0RsXL?"%g^n^_7g
%'P!5U6q,QoAFB5C&/^HN!+$tT#XZqZ(Yi9?1OJ:Z>(['hgMrE6\b_<6b<S*E+N**Q^!AMf;\8r4Boanl[X`8)^1^s1_/(.h@aIPX
%j02P\#mM_M]5P@3[daGJ`tQN:GJbF@?R9a$RALCub)e^j]bt!9!0'o!`-O\OU)4r0Eo8L<Lbom@(?6Ol#W3Zs)WW.a$$@Sg+sg8;
%S>6REjPcnp^oB"5"n7^n/!8*F6nk+e0&PO6OL(B8??*=1Sp,INZG1#X$8C!32uU+r_d@EFBp6m9ZLu`0G*$LfZB3!D+c%"V`e?*a
%&oAQ&npSA1XlaR*WOGg1lUS$L^W2BhX7e*#'5P!sTU&<gQ2DW!m6Z%K`qh_$=#g@"\[!5aBD9Z&qt[O=TI[0sX/5`:KR)H`cAf3(
%m0["@G]m3FT2jCSr-?r7IKgQ-!nUPB?rA)o!D68J\7,"&VG_bun-#7KMG-^8>>_)P!.1E[[.TU@r(!!P,p'+)g?-qb5_Ruso'Vo&
%-Y'nL7Et?@;d>9tKf*hom+"J`;"<OahdXa;XZq\K8^\\4[UIufL<Yq[Ypa3nepFZA&!.kO8r:o"b9tjQk.Q_J"8%nu";oKYIkjUY
%^t(afA\qB?d<O5:)+-fJ\o[AP*&s]F9L'KRo>0h)ef3X9@:[j%\;j[6`EA[_0B$jgK*;*O&r6?^N*P`#n&;b@:G8UjF'7GV]4KJ0
%*BEbbd./4$=0C48LnR_:m$2:8YdQ=97uULOb"7SM,&c$@LsMmLprSZJCqF3-N!2HMP(8+"Ph^ls9615D;E23/0>?O9N\PkAmRXOF
%b;tZ^_?`c"\Qn*F_EP"B*pMY&_@Jfb72hZ4h(@s@dGj*iB?R1?C,VMjfO3X2"p\.$h3sV/qRu^[frg=#XC3oV2<X,EG:1hXh&')`
%A75s9Pf!Tjid(q?BP>!J(V]<D67(<?CT`eB/O:h],tVULRO-@X0?a,NT#8dV]:]E]D`1.Z/D80bmkO4n*RoLR[qGKfL\#)`]c#l2
%,:;U5R<b?DF(,2Ad-0mO%Y+o.M;,`hdD9m`lt.&EDGKU?p0<$IF,S,`ABp7(:K@7drU^S!eJ,nYc/cEI<f8EU%&hIr>62ULC:Z`&
%i[u2B4GnBC*Ln$@D&QSSqg17C!Yp0'`q7P<mAFAUX*Pg@8*/`kUFD[A7IKA$edN5)^n;i:F`!&EcCsj1P!Mb-$C$2nCVmr;$gGY$
%6%-aZnr3'M]8tgg.`iM+\k*O<XDiVV9Du&tk/jRQqX(]E].T!K\5TXK<eg&Mnka.WQ"a@;T$#m!2NE[YGJW[#pp36[&jN>W%s@mc
%,]HlF#q@nc&L%c0<q-;N*(bDW+c`@OW(@,q4J<SsJ"G#HK0LO)'-]b=prJNoKUWsc$F$K3MY2Y8*"%$ZA:ESN:CE8n2b`E(h#l2K
%=>3,C6`fb`/39$k"<nl/$rP1ZhgC$LIcMl$l:2>Gee"$n"1U9ap],[^fF?6e&4_2$c@4gZ7dV=BJ7fscmjCfsnG*_upEPG1I#-@G
%T`'rW#T87.]b#2r+_u(l3!)8h,#6E/916jSbfu",M)h8c4ZZG7+YOQc=@]qQil4;#m7=cVoN]>p*B:g$*t4RU"76qGPVJ['TK[9d
%oK,ut1SQ%n)Y(!YZ8Q<<6OrlW(k7\*h[/E]7K&4*Nd9sZ,ki,NrLFZ&3c`<77pPqDR(n^[+S+tGLTGuu%X86cr4#P]JKHgM.>3#%
%Vte)hr"Mg!O[E\KW586]fD)8tNjf_`NX)kP:g`c-U\s\2lJ6@oG,?;6fYX5hW&a:q8/HL+7K%M0B"kM@0C0952&$8>LLHP/Z)'2A
%IgeCb%pbGt"(p2a)>A5Bm@R7Fkb4b.C-E)q<"Jr/EU.Di+rbaT7ZFlSKC5G"2er5Lg4Kp,`)5!'d%#LI@uacbUXnY5Mu)7I*B%Ja
%mG"fsn$!NhDAnSibG-uf[u0[A".b#$n1@=]Bc%-t]G6Jl/KBTl,8"Lc[u@,N:BBWEko!,\,N3=70ob7mZ#'*+E.*XQ,LPjT?i-/K
%7ZuT&\i16'7tT]T[eS>Nr4<MCMW775*(cW,.VKjpV3uM?Fpd<\JI;:If8cZ_JHGbC(&(XQ.*K;DkbUS+V<Y=a4d*QM1AQQs4qcbf
%7J[6PJ#N8Uq?%4u"B!W6e=?$lA,*DqIrmhuHc)mM,3Yd]G?dP\),V'fpNDTnqs-ajaPG#2mNMs`9tp:rp^t9MYP8-n7[L>&k0Q1'
%[+Rk738Y[!r0/7.5'K4ee.<<O%RiNM;*34<C$F1(FJ%"U?E!acU:.&"^$<t$(%c<2X^,o_=O8]:[?ZIEB47Q=d*Qt"I>ch?U3=+<
%kFGu)8"ZA[c)@HlCAj'["CLPL;;:'?6SW=fI()3ZH6]1Cb,F,Om*(EW39+Vs7pkJXrV<4He5uUIiA>:CNE]Ll]rk4*m'1mqC:&s=
%El6biW6I8=#<m5>LL%nc5OuF3q9r5oB="qB$rLMVfKjq#[gm_jUF,DQ_mdqXh&u-Fi*eQid!'qR;Eo91#JKT(7eoDQIF*EBCt/LW
%*:qS1s3ou$$UEVdE&&4h3"^h8"]'c':HQGB&E0N5oIorlK?qEVPTf[;#^mb';i&dd,4q=K)cN]bGoKoa[!:e\&c-"UAf?g%7d/4h
%[e%kF^$S%5>!2?_Z2a3G+t)E5d%r",1H?;EKJ"^IT?>9'-$3l.4^Cee0VM]EkUR<[?[6AC;H[>Z:fVk(hnGqu:H)p<,^G5KWQ=eX
%:Cg:VV'1=29D9*!NRt,g2)*Ti85KL%Mq8-r>)/B):lQo*b8nX]*,$Q&@4VH_"O&j^5bo-WVj(,BGIi<al/FFJ;l,='C$'!JMbMKQ
%,!IX=#\'NaA#tL00:24kHu>]E5bDu-35g/3qIe?JpbE7t^Jaqba>8HDL<eQ25!2holC_pUf0BO`?-@g>;r_hj6rapqm,c+&*oq6g
%#e93M/R[D'&rP\&m):R3P.UDhHXkSo*e,#"N%OqdRXj^+Zg/r@/dhMJ2sT7Tll]R``aFGhDjqj-;t?he+d1^<.d^'1(Fo8Vo"R^G
%(odq('#_7c0bQC97?F3P1=fJIKUAHJ1R*)IUnE0ecrDUihg1Z4IJOPiH[E;J4S/Z4*Q'(FZ,hbQoIN'AS4.%'O_\-r($9!G$]AKu
%Ei`:OV9P\>qOj2cjjg%9qkVr+,i4Y!r2:Qq2!1JKr?,>U7IHihrhQ(qFnVLOs/k/01\t/L];e)/%1&F/hAlh^nuG'm)\Kr!L8aFs
%fcf<me[)$f?`UF0,&GbRG'3SBT3WSKl!Djp&iQ(=4&PpsO2dHsnKmC=$(>:oI5@M0b!*CQIerm][H,9N3tI1T+8I@bp*7WSlWC-7
%OEH<sn45,P8BWTSg3`%6=YbIh&2hf<eEU&?aB"fUfU.K%cCkOM''s!9OA0+@P41>KH9a84Mh&j`]ZerO?a=3XRiWgp@;%>.H-><N
%+>EIL4\i<aSAK_-4Z4^]5d30$<0IMLl2Xi>S)Qd*Oipuu@YpLPi%Si`=jl@I9B\*_ASCMM^>3$21)R*$D[>iKatXjn)*Z)K)-LJ6
%'UCN$+3J.qc:Ycec)#`K?p$V%HZCI[FdNUVij1H(!.2kdJa%7YoN.6)riXj]*^P>U#IA1P>#5t?q4ou*(YMJI)lXpB0U=;9%5C!Z
%6W1N]9'tPW9c&CPLD?n47cur:N1U?j^0%e,PIootfJrVAg*N?KYBbOR%#ke><MmB)?FQ4!aKi;<Pt7tP1H>`271\mks&krMREr3Y
%89"9!B`:K2'r)eKpY>5r^.#gn3D$JB`8)#?aS0lafT#-:1AW<<'s`mo+]Zi:!VuBei7L;"EW1*H>s&g8:&3?M=3J'4V#_S>4'$a;
%AVMCKs%^eVgeS&#/3sGHj`ci,QS^Z)@mp`0luR&>B5t(KgZp1U5+o@cT*#F.#^`GcT459\,p$o")/6R>n,\]1U-3Sl\N'-deC.C>
%S>fk(U4kV0'7.8!2>6;tq)K`caA?Z6B[e<U.<$t.RSehY1TIh2q-oZ7X,L+smrLOcejPJ)jH\-%&$<'H<`p\Zb2q--_).r1QE"[g
%,<*"WBBYBa;b%C`'AA)/BNec%#@//ILY6*rCdLBomC+Ic5K(&5f@qAe^]ZO6Y_pHE=CR7\-[hjJa-49,Y(o<F=Y$k6Y[SpgmNc//
%WY#>dG4Y[qJi,8]TV4-e/."&TPnOZ$o8c-!^d>HmF=8-@*]^14nE.$GLRP7PG2@s?6E("3SW#[)#sP7.1aQKHX-DO.r1o(8.2`\I
%J]*E1H,b6t`<=5O]7#%3!=UgHR/jF2k"lXf"s%31G%Qo"UI\Ysb.u]rN)W3,+cq'a4W01/,2%NVMH=:FOVu*rpD'e'a1tc7iTh6)
%:1a^Gj98)!"_%I3*-B?+A[,PK?;KBNK#CVMACN3r@o>P;:-9,iHD1OAAt5EPJ-X!YK/0ScO&3d-&ND=e:;s6X%`5?IdXNsrBhF7A
%&?60454;nL,E-VlZ6F#3h5AC]:iM`3)q0+-LBi-<mNV?L=t@!WlftM6!p%;urAWaVV]u?b7+_[0!b2:;[YcF;B:Lu:`jFqPC7Ed!
%8pgErnIFtI"$CPM-qEQ-=AC0_T77(<FQ+<@](#B$.,*;F8Lnj(%7-#SOf/_H[:RZC[aV%<%b.n51XYKi;1m;Q26G>%%tR!Zd\\V=
%Hi78>n2Jp2E(Jb\\kV5?_7e.IWpVXV2Dif]kC<t4i;R'-fk//]8#n'2@$HY*pYtdofW[D(El5W"^#1R1C:_<.qN?aj'm;enXDJ(b
%82t::Z)_lY9!_Bf44Z9(O(/G%_t&*S-=C=7_J.0%0sbF<F.E@T\o00\@'e@+%#!R"2rRKJ@lKgS.:ZtW7EuF&>?to,gp*ZsJK/o$
%?sq#-CL=lq\.6K4:?k^b#K%;L+&@b'N&lQMnn(PtY;$7cF.2h&R+>)c)3QP&GYXb5ir`"H1[\?Wai_PpUCC\Q0)p"bWQf#cG@rQ1
%2KinI';*3$`(=a3'#`)QA$-B?'iFf>B.@=f'-oet2!LQ,"^+p:k/>GA[#U[m^#KG;Y,/%M=.4TG).J5//5,16,);'XJj/0&Q,Soe
%UZ0QHFktlG(;K-Teu!ITK+'AJ#te.%E!Da%MhFYnUlFBn0Mj5E[4!KZm#4Z!Cr,@%.\Q,.>/mf.H[`ns&7`2YEpAeSCn8T)pe(Lj
%E`4dlOab\NlQ.GNWpAEkYTTo2h20[QT)fdN+2PE`%,J6!\)%c8+]O.rLr!D]1HFjfIbUl!7BnkkI"#8S(O:Db)O22TIrs4G6hpJ*
%ED0@A:(1$QV'AptUN8=Y??)ugR3].N>ZoP+c3.ftU+dpAp%q;upSNI\@!VOX%>h/$0A%X<RBhlS0e+joCR;A-?0VDZqfV_,pQGJ@
%=VB@;:>5gSPlWVLPJX'P.`IIa@=5(!/j17?3,\[e;XnB+QpjFg5'a&>:gdNJ4.nd)30:=?/D"<3!jIK#Xb^15c2?q62`I4&S&*Z$
%;MQM3*TbN5HnZt#k'4[d.=Qg@FiHl&V8YOJ$06dAGS0;!%m?R5@0-j@a#,ZB26H=lb$[!fY7:tG3;/`E,ZFBRQQ1jVmJZq1pYl<3
%]?n'2.s!$8??ouc>2pXa%=)'AM+*ukRVE$K>V;/HE4LW/NQo]$[lBUi<OA9r']2\NWXf#Rc>"B:2!"U*e-U[lceS5m4lHm3ae8P,
%[6KEpMr"6.7%f9C9]ODP8I^8;L,(YF<[#@cYo$6iG#=bD3C>PQ+m^3",*]pd&uOZu@WluMehg*G@&pJs@Gh1Hb;oko<BKF$RM0>?
%6/7cnVXa3;%c&k+N1$D]7mA]fI37:.<Kn9KD.A)C4)KINR&VBkB^6M_\sFpH%Q]2L.>H")aCsq`UOF65957^ZYp[T]1pW8LU$V3F
%AT',U-8L.+-P/oPWuR)@j\Y(fa&D+;VT)=0_E9m'\52@7SBFE*s/AD:`9LNTKEg7uJnda%&bqih%lHBX_4f.=`gs<1FAD7h4H3!]
%#Q%WlF&W)_,_GnVZ-tQW$bYWmj*FY*iY7+F[!9;hCcP[^0b#rU$k2\r(J!79@Gk#NCM$tI(ri"dJWkBjfb%KVU3jd9q*?NX&[u>9
%pjFghiN\7Fq%RC*KmM"^_P%n!&\q@>$TET/N(I%sC8(J)7_QH5R2N019i\fVii?.qk1/B20csTNJ8VOP6#I;$=dd`K<,Lm8mIiJX
%N^X3@G=r`/4[YLq]a^1?@CDZn<hVq%S8>5KTVc/D?^IWG"!jN(`BoZW[p7#O2=#Yt=1tq_RT02m]C"[-7k][D!^lmo=3V7V"f16[
%_f9.r<sti@QZeV5V1cZ3c[mU:Ob-Si&qHXD^?U]PBs`\'R"]<_a1W!/B')`[M5h7BBP'i16kiF`J%2oSAPb<?(DcXK-g;2qR`#CI
%AZj&ZjuZ[]`44g\;Y^Y!X;'&#"^Qs/NILbOTVH+`qn.k%V\r.MlTVLF<#"?/_&,#4LdBAJTf_4Y)FV>U=eUGW,RfK1n4sJ<Q+I4A
%YU_,KK8Z3sl1Ye0YTjt/a]@n/HPNY0Q3Ak"JSMaPIr:8-J/[XK^`[9S.``d.$<iiOi*A.fI>%KCK)3940?lrt"9hfl"?a#En@H!1
%,@"3-1JV*$%b>t,o.Z4+#,e<65V"KpkfG"45t<Z!q53(:Ru7KQ@P/$Hld\?_BgZeVGB"e7kM_obW4iQ]:0j<?EoB?H,S,OMD]%75
%e%F"DJ%(FleXOFK59q7ZO,MQNb?D6fE;Q&s\Kq&Bg#)VSik*A*2uuk\Xl;\??9G+A+U7hRepZIS]*lAgOiWO(RlN-,*KE>=oC*_.
%qfQ2Q.$j!iI1k)NjmNR8%f7DDA_Bk?9*^-[(]X]:qNDNPHc@1F&equp*'*'Y\9;OdF`-F)1g-:SqA;npRuSUqjSdjd9t+a3A@lce
%l$*oWY_Otn^"9P<lXI(kb^uL3CDr/[r53@EAWRZt$Kb?TK'^'JO9SfG]@6.E!='esDe[0fE&=_tI=5CVXEG7AJf40!3r7d2JB:j,
%4=DJC`\ZU"3EnX.qS?n/Fq11(R=$5@V<JVF]lTm"9iDXiJ>)A,k5,GF8/:<>cL#>u2+)+G*4Wmo:?VrR`%f$8ZD%BTLiZuo.Vqp>
%)^/uuOEqB?R8SOghsV(,MgqQm*FlAA7C]iX0ihj;KG_'D$DsnA!/eAS-lj=SP!cItnU=Z3.APl35G#\s^((P!B&oS7\.R^>@`'p^
%r,Q%P+k`:eY@pb8,4?DIp=/(k@8p+$(.>&GK@Y%e5mLG2JH3MJiphko$c)YPmLQ3f8dP!4]=8p[A[u_4jnjh\k3JL$RM6QZ-o?EV
%P;u*d:Og<ooYNfq+t5$nE(N;!-.GV/Z);.r2]%/NriVuu\_P_OUpBW$fC+>r(e$1Q"01W,WRgqHMjWa<q`XC-[aiT.1ph%-68`80
%)'diGBG0<o!Zr'g9=1t.m"aCmS,f.di*n,?(10A^;G_A4Z#E"GO7T/@S&>qY%LA9)[-I"EJI4q`%)hs'el8u!.%aU[;d)q`R01"-
%mD(L?#H+QqBc/Tdh:P4jR2>DRlmVO7QDn(Q%-JMO[TS`La_-o,KVX[WQ\8?qofgGsct1EUh7HiI@B_`HAV,5-ehuFI0DK2nUR,9D
%5U_K(,h:)h7/]"8_X&Pi;][K#Knlq=*,qLC<gJPP!MNk$PjI"N?NkW<ZqFTO9HPDJ",Nd>#-,5>"[M[$netD7$?=SQ9$VE;U4C^d
%.%)e;WO)L1"S3r*)-H)]_J7Da<qV/a(_Z::]j+>*;Ko$'^SF?R@@/j0UlS,qL51EL%@J\30([PG>WVU*5DG"Qk`kEr#BAo5YT`=g
%?(DlP5+hb="(S$'"it"^Bsr]Ek15HE/DVW2+oe(gB[._qaIW+n7Y.4-@j4KlB^g:AAe0GCjQn,6\4Td\gWIe;QBF7M"DdD!cAmXV
%lle523Nc\?^]@oPbK8X&X*#i9[&-YaEb9..o56DeW1>dh?h$_e%"s43!6]0e1B`_5[,FJ\NejG<nT"c)q]T==rHkp>'j=u,`+2iX
%Dk8^ndGG&\e8@eVNbm@Wn+tBI%'A>SVII!,O&Tuuqm,Vq0(d&)MB[g*#.`>SHd/`I*H_K5rH:Hj4"B>OdhBKR@'2F4k*X^%5BBNa
%%CJWdg_7>A8FM-%3MuNT"XEO+Kekdfpcp,GILP_h#j)O-d0MiD5h6#Y)aUqF`-[/i,O@BXR88odLgNYCpB_U"@-Acfr^,`fY^Z`M
%:'Cd!J&i/5aTNt/T&bO1(N6&-^h>jpO&%!$Soff&/g7\:YV:"<`i5Ks"OBl%^8[ce1O9^.:-:ZG.31BYY<niH9Sru^>0++bM7NXN
%,4A,$Gs#I@6U($65))aBaD%4Oco5)GZDpD!2J-_l?M?MdHrIonb1O8`J7"=mkVm4(PM$J0gWAfD&W`m^-dD(Gm&bsK78kRf<@GnF
%KNe\D=/Z@^FCPQ4fis@M.Fph*>GQlZol::O?)YVue9\C(0@Bh)>/>im0N90L9#[R(1"&;#Fcs#(1=0@A'q,@VB;GB_e=d*jBqRJG
%[&GDjCSZ37Pd(H*D5apllZ*LKhGESYW.GN]i`Kt9BTh89,\O.7lD:u2kob`gPuEg^l6+(RA6XVrlR`8"07V0bPUT*0ZUfpr&?SCt
%[R^YtP0E0d?334?kIn9JZ"EGJn,*%WTbu-Zk(lrb1=%V2qVTM<5C86DT<9L#DEQ2@Y+(Lp%?`3<ck3&7%TWP?IIsZd`U!.k*Or`1
%AGahV0scca&6sN_>2qpDFhldm6,>IL*0A1RKroi\>_`2DG3HpC$rTu!\Z0!%i66.\0(%4[)q#%JD*M7#2U`\TpQeBq%S3[i?p(B(
%I4>d(p0h3dDGAhR53l2+'bTNZ;9!1'''e7g>\b-.c3IB-[B*RG&O'`@]E3Ium2+\(]U\e+CRJK:/#`R7Q>Z!(k?\!dUB]*3Di9B1
%DM\'OiSdR"/"^ddj3]%Dr!'.XJ@5R9:B:<j`C%!p5h/X1r#;^J;>i9S&FouJZOkRs+_Pe&2bm=CaIBg[Q4k9[ibh)Kk<oW1r)(6d
%]kJpnX.D/6;e[E<'s_<s.P9`;6AFo"kP:VEV#QrM%(X6*<I@`,:/*o$9BSD^H8FVJT;8G.pcHI[,]CK<*dHEQaW!"P+a<i0R[ntX
%'%;;I+c@B3h'[5*@+%EfrCkRnCjsJ&T0raSU*.r,KIV[PcO_QJ:,7Z&;\?#_@];hqlSp:XSoTrt7e0hji[U*fM%WB\Nq/K4$hMrn
%4QSH0m,fJ3nIl;,4/'[W,R=b-6_VdR'I?0TVF]uoP!t'CW_dPTP%KD'Y#+T[(5I<!$h4dl\Jjie4?Ft@SoQ_0paq!mC%5"M(Q%Ed
%!FD_U46ZN9,/CZq0N8f/<J[>X0p4FYAWXJ]DqUr0/d$gh>DX6=2L4(Ck5!KcTdDTqO$9D;_K(7Z[6p-^fS('LCrOY)VbXJ+D(KKW
%HY:O:mb0+V9QEkbRUnI1A9ujpHd1+SKNU2%=NiTG1_d&7V;PXA_m@E3gbXGc!-oHIYY0/*kF)=n#--\/WX6[8&VdoY\r32+/&j5*
%7ar<[NX#u*#r_-TL03suhj5GWgD\0mK%9=u+2h/eiO!+q78%a!a7-i>mE6m5CR,-%ipmVTELm=4AP#fT#B0mlS-HfG9nW(dD,tm^
%NO[`Z^&5rGjP'?U_C#UK!6/_tJji1)*Pp)l,raIq)9^.Mi2,T9*@qD10mP0Bj<Iu3EPW!knK#h4pVSQq2j/sHjkdTT+hpeo!#Sr6
%D1J&*:WC#m'&i#?V1+-d1"mq9k#J!.-:M3HW9dlHT,]t>^]%m=r20]<`[iOZe4kq3K%KTOk&'6:58^ENln731"q(eAB/4ZcfJhPm
%E.1mslJ=";LE-t98[T4`M$&ZX!cgD:;VCubhr?_\WE`p/%BgWlK=^#\39/__0X]7lLs!0[?oBJ>j:I!!4?>SuOBEK.#!XAmb_"ld
%(2fqr9<27u8o(jn`)JN$$\@O(U8<s.&tDiIEnbE%:dCjTZQg"lSJJ+`#\2+1X=eS@@8J:_#khsgG^qT:X1DTh?9n$tlaGdU(>htr
%-"+FXd\c(k?A"2f%GClu5)_Klg++P6VgYZ9.F9l<i.XlQh]J;b!&m;0+<?Q#o4`=.LCD8$\7*/40*\FPa?Yd`k4Ad`=73coV?K/M
%BWK:F$hN6_]AU'["\J5O2iNci/sI0?82CV7N8tnWW4e/BN.Snb<V%:m?P:_o-V,p%mBTHgE&^72!L(mD]hP3ZAPn_FW<kCoV>HE,
%N#7iG'#I1fZ7JU^GFLU^L'K904+?B?Qo>\\BCS:?Zt@$;UYGBu>KarF6.R3"'l'"\1;n4mEeiV'N6sc_,C/QLEdBE,K]GB32^"$h
%7lp^X]kDL\Ms1+"VNl8kL!p`h"URG:Oq^Kbj*Hk8r&&&qN\ZcACk=LeP^h?hS2AE#[4RsR-5HC>WY#Fl6=(\P?iWjaKd=iN0LU:%
%N)frGf^*h.Bk'QmUTBMC9OO1?ql.Ip[:>c<&g#:TbsN,1^ocV.Wi(NN?Y(>8Or<Flp7I"I1nX6N%`.X21IC&!%gstl9pm1ggo(Eu
%qZQ:$pNEkEp\VZ(LfVF[c(uVI0:Pjh]EYJ6GO1JJDf:p7Q^jfrYQE(^S1k0D`r)o'%"_JRMfu&=rTCA(]3#nCf)[XJBq.4B2q^iT
%pa+1jK14?n5K$2JZcehc-'\s*D?c`h`-J_u`UBXS,^+c[KFj74Y1%h&,Un'Vo$!0Q97m#:2k:f;24VRsH_i_jk8lmJ\=C8NB2/BS
%iu7*6GiQFi#3XS`*[iji%VD<O?k[.)$4"J;PcDSC)s2C'bD?(LVn("AU,=_n7K/2#hOb8%"qbOd"/&0=-<]c/nI_pr^]'!?#^F<K
%Z0R0]!$PqPm;__J"/21-jr3c)`=*;k>)4nH`^Cq8$<Mc:ZXt%jbre*+mq,r2:;gbX1S1X/6XIFELtVF>AN&Um$J"OYS1@KbRQ4pl
%nEC1D<B<:]a:Tl2L)Z$[4Br:-F43<CZGDSq7nCU'Pq7[[5CCdnjWi8Uh&WQBAUCaTb30Pnme#FdO'(5&@]NR//^-_p>-J;\7?DcG
%Ve66/F"#Z8RW-Ab6Ips_f4#&@4!9,,T?8Fh@<mt,SrO1#aPh.<h+rr1o3A(GGdi;bbHg=4T+p'bS*U6\]31ZGO/R6Aa79?$79AMb
%iR=.\L30W_&`hV"B\I&2k@sYe^h[38_d*:iZQg!%A70dcmTGnX0Y2TBEp*[Z)@2-90C,MV@*q63EG@Xc>&K]*7&g^)7BlU6X+D"L
%"_R?@Cs)]ujRmY19l>8A/T.m@Burp?4p6]Wrnu!LC15Q'jfAkK+&J!-KZ'<!%AUq8(12*OKL%_j#ItPt?<'9,FpueimRNEH`:_/[
%::ViKdn&.;A-/:u.XO%Q("/7sN0au+eTL"9-.gKi]"\h39[Md1.eR=^X/)rP+EH:e<jgWj3PhIpS6@TND1Yuh0TV],]3M"c-^4T&
%,ID/sC`%+hME\*B-Lu%jXB#msoEdfBKM['PD\Mfo5:q>R'2BM5JDcYV4]tC5*uJ7K<"FPaIVMVfdT4"8P=mi8_rA7ScqO=;s-c[*
%\N-"\5O<O3-LfYM*WNdl\MLS%Win[?hT61`N'i]TgH,iV_5:e&aTR4%qM.Yp0j)pAJQ7g2^j^/IgNnKDR.WYNdVO?58p(g^F%<4t
%@dOBmV",B4<$,HbP/c*0Y*W#%j[]*WCt/eoA:N&T$o)Y.b1I?,=^El?MXMWE/c0snm%b+(>DWLe2Gt]6ZfE0I;NH!'O(EDh=Nmp0
%P3Y?8]DL)1VT/Tkb_>SM]:jhu?'ha_rjXpk_<AJ#MHrf;=c,qGG17_MSI21ga5nnl[eOE4%!@c9AB"JDj:>3sma'*SM>+>d3snqk
%=7QU`8p<$eVO\Q`mM3ATa;N<J]]NfRD"nToPR&^OO=?u?R!eo+DC'L$VCY>*oAlFG9(eP"-F9F]B_?0&RJ-D"mn:+YprMA"EEBTF
%CKu%c9du8JTSlgJ>a$f*>`FIY[>LnmYhIp4)DLO`n>@(d]7J1>m5'B,P],2E'ta[+5hF]df+Iq?LCg]e\(U[jPYBa@^g'XN4O&Wo
%'"Oim*H@qD%,-MA'PBH[g2u$ZZO,K\G(e83J!g#M:Q'Fd?okXT)@TMAV]^[T$8RdoC?6gd-`9NpMF!*dc.^Z6<P&=TWT>W1]ekXO
%UU$cie(SO$[.o>S(7q"9/f!0Y=\T=M=`4]qG<>;Y@D9T`6@W1o`e^;@,]ad%-m81h,JbM^oM=GN#YTMQDBU\IK/b%.F+B!3*%=@I
%:@Qckd!<B?\.Fr.qpQ(Xf168*.nJ*HlphW<^^#O="j_bMQ_p[AT!V2;;tbuMe'=B&.j^=(\U(E9<Whpu020]AL>d7+"2=NiNAI!0
%lAB:+9GI\J'o;dX0j*\C5b@)iVZ8P1?q@ZE;%3Aohj/t&o,`5gJh'-_aS5W<M7t`J9J,kG7<!!U&AgHg4,l5>[0[=#p\5gM2o,O\
%8Eei@(^XKRM6W!ufh*d/oO1BB+$nY%4K-;>=@:c6+)]\Y/RVG)BjL[IW\Y[,m2XJ*GA3u_V`GR\%J-.rZL?9%j=C^aZh`qflacEQ
%#S9(F8L-db-Ar*rCFG9fJn^'__3CLC>2i`.,L@6$]c(Q9C"sr<M]-kH0<$937F0g5RUu7@=Kbjdj,RUok+9l8cj?D/\bN80k,Ac@
%`:sd,Lss:;i,q=/B9(`g_H:Ms%k8Cq=lT`AJ=p#n4V=9]Z#s?q>D@BNAm*2@K3S?^VAZ/$Dj9koW(,G*$_ol#\Hh3i%1pQNEeHFX
%cub5`"E7(gl(%78#V6<kV'?1%kjY2q^;*>J1c%-2$AkpNmP;j]e#W?^^t-cnDu!oE2M.?1%&FB\_JgCh(%l"A"%dZfYkuFXs-qt?
%rC0!eB@U%r%0S:3Y3&E7`"A/"13rM=>%N=X#Y["`UaGMrC"]F5!@O)0m]cGA[JR2e(6m!?jYcS.:=e_7kQ&Z6@6LSpRb:6K;eO#7
%\?TfnP!9*)@e9[^GL\%bB!TWt$=i6U[1;W]2W8L^p=[DS=M.dnO<Wi)W4`q]B-IJ9LP1XB(b3TR*I[`?4U5"*9lWIOZ=kXD;pQmD
%h?J>$.B+"Oc99(`)c6k!rK_;rf4'4[Tn$J93P\AJ81QisfA5EAD0@+l"fP(&qe,.uE'[!u5/_1sn)rG^@n)m\1W4GGXL5r5PFWm'
%'n_D[A-8(p6^O.L%m`(I6+G8sG-:+E=MFrI"<3oBU/lhRX*F/B$9(I.+-\/[`.`=e6S<,,1SK[\H.e"#_6TX$7FpNg:km2c9<t]A
%/h.?0@'WeC)s]-l=P.r#Q?_p!&FAmV/d(>O`tm?F"/P,9EE,BM\2*\f)Zjh6Z[nk(L5=:\he#_a%Xsf]Y=Ml\?nKO[&)s#aV'Pkr
%MEbE*Z%PUiIq(S+!'rF6S2;1HJgn4*6dU&BW>-[/_e)JZ.@ZY<d"KUO+m4TmK*=]o0SJ49?j5p]@'a%Z0KdVshjT`?lk&Y4bcZ+-
%[qJI9DFJQ9,/X!sk*2o*@OCNEJ8]GV]W=TlZC(l4MDq1CIK)mlaL\9a@?<e([S^tEk.9(0r6(L';`Xuji5@k-?rAZ%/u^q=Nb7n=
%5jr<S,Do`X8=m8XM=c<,@JVaE?lO=0;j;+nh:)\?_a9F10o([^\KR2'![<%PkJU;!(9H?,rYQ.\OX\$srZki=Z:%A\aQ]3#TTCa_
%Gbl&[F^V:;DX0Q@7AO)-Y.[E:LoLh3]pSbVLr+sE4E->^9c;?H#Mq6Z80]>O^pur,Cdd;)(uKi_N[WrjgDggS0D>7XEX.8B7%Bl/
%p5"`YP4f-(ru_FMo`F$7E;jjAY(p_>=9+#^6;U[P8ruEN'%Spq+t0O[_V49SLkSi5=Po[,_6@s=CWo^C)HEtLSU2iD:DItRCPRUh
%<5_;WrWsL!EJ+U:LoZ,+$#q@O%Y[JV`.[6tZSq[AS(3G@5LTOlD='-HZ&/3V[E6.hQf\Knqd\6HBMdd@*/'996:7\3K/5/2is=lJ
%TI>dO#%!qC/q^_hNE*q)WkDLZ+OQ+c<,6YOQK4-A?Z%<U@gWEXNMZhmZ8'a]-"54Wn+_"H,&E4@\U:S/@`(#\N`uY&5><Xr9EZhm
%HDZ"Om\%`le8kBP_c%oSN,afG1,T\4LbZsGoLs,Whs\36I>ZNZNq4QZ\)4HL7S/TfZnZHGFf30u**\17<p<]![HmQ80p\6I)R8($
%#%ajQ>FNCm(]cb2Pf=sq+f$$\)Vb4mkkui"'g*Ys&u[alkb<t_%-dOqJ6@Wjjr4YMM"D"E3^anGX<AebKPt/4&5*T;c!mbm%)n<j
%Cbf$n7UjS4[<Y_r7V^:H2L:IP`cBR2\,$6tFat%nO/RUgNSsHGK6;-V+^c]b0&oZR3$Ii<8t6G!30fSP$!E^YcO$#3-V`["oq[lN
%ZpG8fbuUC6XTK"Jnms1h/S*j-cL/L:Kj8$,)P/@sOH5?Vb6,d&nt?)*HD4OQS8?:'SuCM-(QKBo"5Or;dkQc/U:__"4Cll9XF&%8
%7o]JEp5^I#TpFUb4GZrDTq:3dI^hfY&$a&)M?oI^Ta'O"fEg"JYn#j,B&o8@4<u8&C7u[p<j%s'/s.J-<6m\'2L]O>Bo\fiT]6=n
%5=]imW$D^-7o+]aV]F_FBQE'0W.#(r;C>=AW5&bJ>+r/N<.TaLZ'2[K;PJl6[A1Mh<l7A3\[TLPE9CGgkG#]"Ida*)HccCSNTtr7
%#[N6'C(:>gi`jR(,JTJ(/tEDNP(B4q/\_.im-Z=RFLc%_ljPbE&&"nOr0E\\5W.&cL8re%`79qHPf.mN*9_$&SaB@=lT+`=_L(J(
%Okr#0#0.qI:iUm0-9m4.T6>mcnG/AF7k3b":]1u7qiRL[m9Aru.D%qRpd6\%#Cah=Dh35171WDa:Pl\*q5M4*\ep!+,F!@6FWdrZ
%,TZM&J,&R#e3.TI1_"AIRbq*rd[%E\Sp2jbc>bdAihMKur`DAG(hGh%.6KEh.tLs?a:KJT)$E2?TgKb+cHdAt#m\miS*q2a:1ktk
%KhKE]$SQItqK10XWu^&r;O4k*ZI-\pbG=>lp^(6In.7DMX[Y)XmDfLUI7k<ki1DC'?pRpB@!TsIe&rikj"\=&rk+Y7`%'GBj2&Rj
%7(Zm98CeVZO2$@7A/P=M+(q]`JCb17$srgBc='FGVKnXd]c+u`Rhh@<V&8qWhX@L)G+\,.4,+9m"e3+;Q>@nEf[5T0^G26I86uMY
%o4[\?`XUcXde\ckR:$!Ck!(g"Dq3q*2KZA3p"oc>2:4e4=Qhj!TKBb<7tE;n^O%ijeQW[OL[Or5Ha2Vlq@Q2JO*iR(E/(Y*a5VmO
%ZXZPo8`ug'>+4CZn.:Ws8I!hu_Yh%_FPMdY=TG-G@VG>0C8Bk8ebZnAVYtb$b/anbdJ.+NTdBF<aHMA-fRF@:(><g=QBlR-5a[6E
%4`f65T9jAo3lF&``\UZ!C9c4`Z?+n,1=K#cU1!,-XE1Y>[;Y#le!s7c@"99A:86.YPhs46"OP6H!*7Lq'oWFK1:\R-kjemMEZ<#*
%=5lM,bGq2(\ISa"h@II%b=Z0SQtbH,2g)lMBkB3AQP<>Q*UD9oc,p%?N*J+.MDt^jW!m<Irct&P*XR`Rq@2jJB3,(4@:5^^okgk@
%FfJp,^7BH;-2eG$'nm@nC;e1Flr\8p!3B^)Um`5Sq"P2*1X<3pBQ3I8WT/RB&^>\AGem,omFmhQnsY40QQme/$!lt&*`b^^OJ3]`
%?K8*g#.l^ODWX#kIuQ9#V;m$XR]9<+aHl49C&_uAU-IP9]A7F.(St]/n+n;n8m47ko24/dL!9hKrOL/>&<G![$mK2#$j:7mm!\R\
%LDU0_:7Ft\;:MUVRrlE_=KX*a!.R7T[t^qXcj*ee)qt%sK1ie2Mpa>@J)@U2::c@d`"0=cgVmJ3/qL;iR$@mSTTeVjHa9g2I[dF\
%*Y`MO07Y!.^>(;K_/-F)'%]5TQFo"ro8727i1M!I]c$GPqjQUC["Co#DJ+aUbtko:h.0tJe4YMIS(=A2`Q`'/^3*GjTn=neHMH76
%`sUc+8<,pnOtZS@R05B2;]lIG=i^S6)A;)tN-N*ac/StsWD4SJT?r1UA"P2R!\MnT1ZlZ;V/qj7^Mo9O.qIGCZ@bf$m8(+ECU<!1
%%C<Er*!saammI$9hi$g$!S&WW6`tHtX^.^,6[$R-9o&FZLOJK1gk):<p-#kgpFF;me)2#j]_^s3SX`gVCp_)$W'QPOPm7(6kkuX!
%W&U#R]T)Q1ebR)BD+=TpW3h("jj"oh?SRg2\5k=5dJithB*\Y7_<X@j&XiSB`%Qn35Y0;S-Xesj`B+d+i6ag'(VqVHg8DKRi=X3n
%XkEm`m1j_Gg..<aqoTDo)hA+M<@*B44NkZ90"'h`a`s"C#d/->[M;KRK,%_f$l\4oT3<1$MmJdBe0[d6i%OtXR#)un)<a2_h!j:t
%ofkXd)fN#^7X,o:5B9TC%=^pZ:%I\qAf6UtOq,V?p3#\3RWUMD/e*R-1W)?#&RTtmVLUa]27<3&-?j)*2%YI-MSjPkTiiXs03'hn
%/`%ag6G-Q..^*8B&qg'V9Ej6G%iFPBo-<depoGGFb#%u>*hIBoAE'FqE,QA<ON$`:#RVW.!RM!S:-YrnYX.)ICj#m>2B3!sK>b[a
%9F$0^WslS]rZV>\b;Ci/lLZ=f/T9jj5'@!0D68[UEGPfGOp,ZZeW1*Tn#(joRG^H,\neK3>&\8F*on4Hn"_H1DX^f^bR+rSk-)5s
%1@J>VD&]`J+?=%Q(Xda4qY01RpoAeCqN=nWj9uHf<\M08n=-_c&A_@/%4YuJ9@ZD9Bk`Q-?ZNfsOG4/g4To=-c(HDE+@pJ&K$+rC
%bRSR2ig6k-mte$KPtpc,AOi;&EtIOU5'b]TXi?*K'n%DinsA2AcuQQlZn6^>*&MblD[qA!<8RkPKP'f]mUEG*E9BC%<_qA%-.ar3
%_0$ge;79B^q5.k3K8;g*ZI!OaDIuoIqD-[@oFNWQSKMV>?Urjb(-s9n]U"iC.Y>IKO*X$U9qPG1Tf8Jgp,Hg%F@W%pRHEtkJ9KVR
%SB9AS9YMBjenM'BGhD=?\:]1+X5es)3mFLC:f6`2cHK4L<bPLF9<me`L9Q2;NK_A!-X!CppEJesa#unc-+Kjq9OX+amR9KdAFUZR
%+L8_RdSP;E;7O0i-Me3!9=/:]/[T^W_V;VpM%lU@o-m>G($Q:^5VSSpGMj$+(T7>r\-Kr/J:rVBYs5CG7kSCSqVu2%mYGlR!^a8a
%B4rrjg=-]MXb=i]Ehf6BQ:pT(F>Q/s]0_ZOKI$mU+VBp5,a.c4`HODADT9>I@`t`Hc6b.:1Ac@8(9pu[aG]ASL'clcgG\Y:KH$7X
%KSe)12@%DLGSIIRUP!fpeMLpJXWYLBf"kG?T/"=oQkJ)Ho:-`0,TnP*%3<<m:hBE*K'%6$g"[4=4>cU60sO30H#mP,N(BXs]VOW_
%mY5u].[QljMGpEn]^a#9bH*AuA+a9jCc]7qF]>.b?$dU/*!Pm8.MI\V(i-H,6npA_6dipWB6f+Zf`/ab(52fAGWXtP\tWjh!"d"L
%\P'?%D:0E@c*X&""W>[O.E#>P1F@&-]sd.Ld,+o&f2j3!,d,M=f+>H^`\ekaP<VUr82'dGPD!L,ZU-q$jKFP"r_dQ3l45%1c/t7O
%YU%/]pRkjZ0IQ!\8rdY,D8Z>$PUUQCh%tTZDNC#,!2O"9h].5.:e&a+R&OFCnk1d`7(Cna#\62>H:1G:"&[l-Zp$/j2a>6dWI#JR
%p.`feV`RTUZQUG0C=N,D6)#8DTKi0;NYBouD*bM(.=0O!D)"L0Qlr;fQ!e\LK0CrK2+,Sq`ep<p<K$+5f-CsaVu:ng$X?E2pX@"%
%<"MNBVBa0W(q9dTIDuDXPH6S9TYc#[;-"D.7=q'A]'L'e6NJo9!-c?,aVL=sa4P"L+A>O"j!EoCbS^!b^c"_^-s!OSfJWN8ccKeN
%Q)`?Lrd5-nJ-B.J?X@<klK?Zr7kV#6[9Q8#6p3BFoRsahj73:ja6FJu4,=M4iU>['hOFY5s6H'%88tfl/H5CNalWF02F?Y*XoaKR
%]!0"V%-pX/n34;&c$V`4@n#2ep4?uA%qU'TRg`UjEioDU8aLlZgY(i69e8F(^AmlO@t%.@3^CuNORj@QHGa&?U>`amT=.c0U5k/"
%@eYL%<BqN18Fop&PWU+4/\Ok$b'?V#V,tC_A<g'.cRG(N2-KK>i9.CUk,PTYmNP]?[//P,6W?%a4T#"=cO8^4q<r7FUb/6K'&O>'
%g+:_#-cO2/gA7`Y`GCZ`bR_R2R"oEn1n1b)4]Me+>%R&$!KNr80ma*bj,?(2VE88P:9T,HaIl(9J0$<:WHR#F2<o-`:80k5WmFU*
%:SA\7;J+9=:[oJ3K^4md:T<K\4=Qf^#%#NM)XMfT8mNQ,a%r.kolDuTeY6bj%(!2!5r#Zt8KR^;=u*V$%SjDL9<E8*\331@,6U6N
%qBK#`@Lir:6c;Pagr4j-#YC/G5)I+b"&]qEH85=6!JN8&G_."f-7Up3O"&SRhT\'5NH0INS*U?:rItm_#WDaVdjk<*Ps-JAXk^bk
%]&"HE6`#*Kf)HpI=Ub/s3<o(J323ncDMSgFo."E@jA7:f!l3Wunf(cSP5TdOD)huAZDOg(CZR#]fDIc9m6X'nJc\D-6\d%1Yl&WS
%]>P7SVDdie]0#pi=,X4V\msHPE%0%2I@<C+,Ku1S;eftf/N3A48jd-+Jt9"^SouX^(AYHJ4T9%T0'*O+N&UI'[-ML^*!f\1HiS*p
%PFkR53;gj6"BOc5<@^6MT?H8.SCBijN>@mT$*$gEn$[k+ESSkd3oa0`6HE8F]-6o[<.^!=KBBlI&ctS8Ra#t>_"4`.Fis_Bm.pl$
%)KZF5o?sRQMMD5DrV!ac0ShC-iapIN=qh\ZO.A1AQ9fF<;*6N30X%^4_O_$f6Bc!mX)ndfm$)>i)"C]ASIV+jXIrBB"?AHfi*>NH
%a-'U$(]5eS)1:p,Ro3"k=P'!>Ht:b9\tTanB353Xk*(#YVG8)3aLGP5`)ei%A]A#8C+'sPlC[!n@J^WfknN.Kl+^=6N$Vt'fq@9I
%Y-VbR)M>A<QQL9@VOuN50?XtfpkcP!#;YH,:qF'>:p/$ZP<g"%>Nt_%&9"&>OIXI'clc'dQPe;#=IF9Q55)?]eL-Ymg0;anG!?0Y
%ApH)_e[gDk!!dJih0W;/#%S$.);"(P`W;JWB![`+";DAA2VL`?ZYYFa]Ddn*G=b=C]Ht@!'ISMI8H/B^(4Y$Mg0.7ogdD8(e$[rZ
%DI0(tZ++,m;0q;mf9[W%4R3Toe_^S$/(dS8A(Um9]I"!:E\BdOj.R1Uj`2>&q1?]0VJ%/^E8CA"Ni^m<I*8L?!^aSs;p4pka)"c$
%0L4!-r.(K#N6FI;QL\LW&WaGp!\'(`BU!<R4G`fU05b>r+]uKn"\a7S)7K+f,D!?O+u7Fb>A^Y=!"qfq,9+?fh-%HhH:&Uh]b-S0
%@s::VfJZjf_k-/&;<Q3Hg:.Ou3B<;03<TY6-lNgl&YXhMb5kV@ArK<]/SX8X->1EA^B)NA1(Ql'M\dBOK?X!3AgPGJq":p1J^f6c
%=tJU`P[2.]Q<1r42W^85;RO%n`.bm5VM]oeLRYCWW805t0X]h:1;X\'k'bf4I79YA#Rp,`rXOhE5B)^&Z81Jt:BY@PQA3';M1c<U
%gPFRCRD,%($jjisfn`r*dVm%@5GrA<[c1-4GBqP/!iUFHm66-Z?\gT&*;?m\aZ9W=6.)fdf'P>B%&8ElK:H$$>LoVt??@YooCi[!
%0u8Ib3t=8Tj?A1[f:ft@Ge%`?ghdsRPcXe?r*VR]mi&dS?KPd$:%*gTZ4FYTV&hfcJkeRU`B&=_"FC11T9b(P:6Bb>j!&P=`/gu'
%3l\<okQL/\MQ61F-Hg!^4/c"d^`Z'5^S+8n)8VA:J3.e6i[@["*"YcfAFnfR&CSRYOcq!P5iE>.`+V^o,o*QCSG!FP^DlBA;3Gl\
%eKi:mKt_`ZMmJ_G3Dlr0iJEB-8#%BFa(Xn8";1;YkNqP;Ekq.lltV@@SJe**L$=5)^+@q<!(t2,hXbI_qm*bX+4/&b/S^>P&6;Nu
%rrX:ooH)AY$e1\eCf01<#_JnkYX0f-4b:k?*6S_iPJ!>D6Eqmh^@lu@pfnB6eS2umNrhG7(s,0?6X`1r?qR$0?9*CX)aHh=(fCPq
%a2(Ur(Y0,\`+k&+j^q+8o6m<ac1G\/TKO0TI26YBL]5G`,iY5eq\,d)[RgH[ru1]R*X6Jj_'Nmn<'?<l711iIfs.T#Oe$RYd9-nK
%=;7KNc/b8\*umbrpOb]Xa'+&hn(@kYaVjbV9_ua\gfgsueQ]BKgLVUe2.[4:/T3_<I.N^C=[:ULNdL%I-<S(uJL\:-Sn1M8Hl-[*
%e`YSYhe))3a[VJi`3a9".E@ueW(K^[H[iT'$D$@m]gP,%+s9B&klua&=`Tl!TR[b,=k4U+Z@Je,3io$&W/\E-\U+`fN"/5>_0a?.
%+Haemf9I=l,H4>]O.Ydm4KW?V[L$u0H;D1`ZG/WZmYQc;.U0l>??T-fr=0&TD@1SAWZ4,p]F95Dh<+E=gP.h-f=/5n!#?4f*jq3]
%Hdl7L;@`6@E%*G+(l=7k"O3gQ)=hbc,ZTK9r7<#X7K;blY?+HciNW:k/+mOXn)aN^#4SWT^^L_:_@qg:lhq'1iC=AtNXueJ_C%:D
%npjsBa<<GTJN+h0'4O<`M"Ch?DBS3F:u)[aLh;@Nf)m;1O8K".r5]HM(F+&M=>.Mk6aZ>%Y5$=/a;8H6LI6GF6p`!"WFKt2_Xjl4
%4buQPJS?N$4m?!WO_ZA#4_SIQSS]dr4fNWmWGa0l4t2:4[;i!74pdT$X`L:pNoe`PdQ.qM+/IYRau`LR+,&[*`&q"n+%5FG^-0iZ
%+!gHO\is$N*sDJ'[Qj$X34'&]SHWF,6JS[3BP@a`*Y&Vl@5#U3jl4XW&Tr'r]cMs;OKa?_l83dkAAA-B^P`E+J9Q>rFACUSpq347
%IT(^s6hoXRFjLrrkYe?<8K!YY0Ab1Bcj*5/,jUprNJQ1&8*e[lK@0X3iA^QOE5XCffh(<2p[$E&Ml&\bfam6"$1[I@\WcAu69Q[P
%*uqsmpCBaNo`/q$5L]s$e-%BZG\@Um]'u"7`,^Tfo&1?PI+Ls"bi14RLntpF72iXWj-u_%9+LNYIY8>rDdnl6@e*fMEZ[-bW'jOL
%KBa`qa94huLZ[auS_k/CISQT(-d_e0lC^[='FBd@g8%rYoNfT"k7icE,&pR5UP]1UJM&HPE(+6>=;5r*O$usQ8<S-mY=1de5S&'8
%cFlYiOVmPcgP[>+OVI;X)@Z7lD].P#Yo&B<?OFl,;XuE>N5V&1R:`,TN+AOkKrD2s%m?o8M-eWZK1,C*ArVJIDh77J9C$rY6[A!E
%>+j9&UqEDd2\HD:6K3d_fQZe>6J9=OOdJ/U4<N)#D]s6K\:/.uml]^DP2#SmQf^AmL*&85Dm=R58e:%LOjH6(`1P!>Z-rWRa?POU
%6`#:^'(G<1husRY%9QS"SI&^8_l;VRclE_-;8b%&@=Lbna`2(mLjMP,DN[raaf/&^k\,7N^[N4pFr>5.$$p@s>r^/r*?Ft3io<a"
%@6[T@3V;MjdXg:M8O"dJFteW`:8c+1TSk:7[lV!1"^PAA\(@B29ZYY_O6icuUR&6j2so,9(3I4nh/VmQ\kb\T*dr7h?PiG"L#%.&
%eit2Mh(%X5L1+FtfR`g6=7d_%gDg+45qccq1\kple8aC5R,3!(oPR,mShGrPN?%t`0'@/e[)C5=.@Z5<AjYq<!p"*cTR*a$7kd9G
%XA$e`d]5!<fEgkDPK\__T;3q>>^nX/+2MZ_7C3";MNYgkAl3H&\;q*c:O36_PUDT?8L4mp\j.t,*Quk]+@ph-(XF6`5fWWt@aEUC
%A.!C7;Z[JqQfh[KrdcUlMMq$9rRf?5F`FCaDWD$;`[EBZ0*!ZM'eRY,[C'"CXJS^E8#c9S`8:`Z:s&5g96Ma:9HBi`k`2Yi<)Ahm
%*]S6nn`fQ)m@kYo2t9[M-.33L8HZ_C$uRX_,Y/3;$P/YX$N\-DlPt(_5ME\Sk4!0hGCeDIB09o]5;o6k?0b@7He\lKp<6%Ookt:u
%DWsG?'.RcA),@-`3N@EM.8ZZUMUb-C.8m*K$5H;`3E2rJ$<:+S8QI7s$?]Zf;-9b>$ajSB@@FMu:Ec2ChFR9^:rf-&FJ8+T<9V;A
%^.A*Ecj2f=KqEO=VZ>+uL7qd*e2<gcOF^jre5j;;Qo_^cE74uZTuuu'#<do6O%RklP5:EHIbFfDC0+cL6=ju3Tfi^"6Zm:Fj#r6J
%",1]m-%65_I7\kpQ$p+I<R%6:q';8TbGmr&oi%mX-h`dJqh[`sn5(e;'US]JT47HIF!O_f7iM,c+?iiPLH><b-pL]#a'/MPf'].9
%o0Nc@8adIR"%*sb8TP^T'LO>0,DZ*-doeG+2FISMpun.cf/Y%N>M)2d9^S;F:4V=t$pgIZ>M,&62@')?3VpOjV'0G5Jech8!`[QU
%JUZh:=6rnP$fMe5'<=+UhM@LScZ)YI+kMYq8#duYYPi%Im66+.b8>>bk1VZiNBt$;-ZSAn0;L[A*t@WFb)ID]-ED_S5.:4sTg@qS
%?^Y,H`&UlC]d=BqBf]ufj_Pae68akL@`%!>=V=D4?t4[Dhpd%>!7/NH@!&ZFfoa0_YVm"UR3oBo]$(tUDCpL2KqT<6;u$QS'r*tg
%,\LP#7@FC,2R-/9GdIXGK+4@LJ=o/1*IpPps7L/<$A<>ULa\l'XTkVO$/[cLA+Pp:B'r9)c,R!X5o"G<IX$A@gO0l&oRD_t#A9`f
%2#ZDI=h.iK3X\r6][DZ2%TfZ3GS)GKrNr2jJ(Yot94q]HI>=lL*r5Nmmr-W-JCpQXlqJe$UqA,?g<Ue4B3`LZ&dT>!j"ADQVBBA=
%P5_Z[BN$E-_CU<$8!=%#qX^Z52gsC?n1D]&iShi/qC*i9!k#cnW:\IC"RtS@l<<mb%(u!@?<9G9@M%MtBrLhGWQi+-A-i#q3bI;l
%Y-S:8NjeC3:t$a7;<`$.jeKdB6b@_s'f^++hCjt&%:0XN*W+5n5H1rmOoX0Mc4I"pV9C(bYY9DcJ7p"\eVHeb^4-TJV()R_=P7"Q
%I2h\E_)+05Umomg8>44tR?P#OQIY]ZVYh3:"-&\6`.mqWn3fa&K!b_'h<C#1Q&IFqs,f.$"Wk]eb@(Jh;j_lrM_]qXJYIOYS,A]L
%Bip*ePF'FGW.7ZMU'+:)mn:mj$+(RX,g)N$'B'"\09BLREN[G8Lf\h8C.G%Y0@tljc9`kQk9aoW7R9JR0+85\hK7AB9i6O[)t]'O
%3=V^Bqmlm'Pt,ee;J]]5Y[34u<gcpnE=iDL1,F-;!n[m4)Mhp-@ng7ukS;#g8uW_=7Mb>TB/6gcGf(PH?^2/cBeBjd.*0n74Q3CG
%r?Qac_G"O55_[c]K6MLu#%2-EH%pQ0O7rR:SR_3;Y)/omo[8A-hH'ibV6lo`EkENahl5.$5P]D%OpocBj7#t^)^Obm6h'2#o-+dO
%KkGE0ALI:)PXZAk.K176S5/,FPrbi0<5AITXDeb55h??qiEGlaX?$c>%XVTg'EG[@@Ua1XEharqLm5L=-Z0F^W0GD<`Q%YJaqkmr
%G%#Bh@*9<aeqt'>q_d3m""'`O],8G+KaLSZo*44gF!l;soj-o9?K-tj(Q0SfT)%Qb(bWqVE"/qPLJkjh]cZ:tA28l9UVLhg/+C1Y
%JZ*h6L@fD,[egPc-%\MnZ"tfABM-$,i,c2rA?V^Qq:ca%\p9Psp@JpSp#HR;+B*1h:)6X7:)lVE\XHOCdb'llfr(,a+u\@Wn^UdA
%2dl:.P'o3&.>9L:$/nJeDJ&=K#)@52?OJdOn;R,V!9W=NP;M8h1&#O(4!I&7kH/cH'lFrKE8GVSbtE]Xn:Og&a;o(R$Q>QC%XIP=
%OOcg2:ru?$OQ;3NNBP+\\C[@l0]o+sr#YUF8e9`$]#*Yb?DGMV%C'eD0bnPnBbeM^,4DRkm6j9X*-.CbM(e^3K_=_O&Q"Jim'UOT
%LLM4Q5Cj%:D\*YF/F`HV>TL*0c(s5ki48I8#Fr]0:#J3\)X8Yh,>"_2VHd6TQlG&2P7%d3p4J<0OW>?_l3:Zmhb,*s+\t;&qo;(M
%QF.Dn\]>/;HNoWSN>FD:p-8e4c*OZjVYGB(B5IAJP_C5:N6qaE$KZ`e,*%YI8RNbP:.]Tk?o:#gYhij3UtOI?7AEt<VbZIZeg_La
%1oXQ'n'Vs)(:(,S\o/IPlp[:J[gXo$rd<Z:jq[0H:uo<@:"jJ4eg>?JBT'67j)'E6JM@KsG_nCl5j+/dHEfeeLp]N&Nk;m0LL=](
%139-j`ae6M<aAFp.VK[0/02W%bY)/@\!7K9?)LA=mu)_dp;.)hC_Ne*X`d$>ac-nd/7h!b`.h4S**:6VBQ"q.AElFZ0?qMQVV\>/
%;J9.4J!=I_5)L7S=Wa`h1&I)HU0:M'+EtRK(&V08q>a224#i3Npu#`K!HFf8f4ceTD"eWe4H*`J1MV=$:aqPB0o<gTm1(4G>ue[P
%FKm[WlnGGJ.E1QP1%m!*2HF7c]X-C27b3V$;ce(oC?Nr3L,0Tk]`!7N<1thd0abFm4""!:bRqIqf+$me$47jhQItj'j^\deg"`c&
%FO*1(?9:?>SU2*]WesH'B*36rT??QkM1$rk'jSlmE"]Z@i$sD7<i"u\XS[:8bkE6e?-kRhJQ?i'jZF;(g!K1!>!f)`9P=b7Kds]_
%1U9Cp:r>39/1P2Sp2N-IBO&"R-NQkJgKjZ/#FK=8qrjPZ`8=\Dp]APb1[dss--$Rsm-^:g!O6F_!`0si>^fD9),slMAu\eA7HP&e
%<=/g)Y*?G;j"#NV+]h.7EOGm'DZGK[qpP"ej@]K+gh*BoXS<@D2:=YD6Kk'==$6^F)^lrsJ>aBQp$,I/$F#cBpf%ar0GUNp0$Q#d
%5+fCn0o_koNWAA].qC,qs30;C-O+mQLt:8QM-<:8Srh4qk7,9.56#26V!<u67u4??AR@gThMo>Y,#3+3HXTq];$<q64>7ddF%+M:
%lEZYP/PET-_;\pD<N/"5Dcd0acn$Wb7^+!.?,8iNXX=qcV77KbF_B53%lG0oN38t`&d-JRT"n$"PJ4Q1?$>cZE&/;YCgIsMrIGZ%
%$D9Y#!+fUl34)sW,<_qN\c=Nf[EY!;.UlOZ92NrW+?!?;kL:BClE-Lpbl1AZB##g$W&o!n8`C,P6[Lu3jXSM5])mkF(qQlE[RNm4
%.W,htra2W51)T)R:!b%EBmW_Y8dIZrA4KN&%5Jt98[Wan@gqZ%G#AQm0fp`k$;D`BY%^NLNtnrZ<^"l-i7eKU!2M6h^'7Ip6PW#9
%>L$/t]g9?9$XOkcq[.(0En/<YT_g=@_4W_f$QEd/$YpTFbars.4(dd;4i_)HMJNs+jk^/?UX()t&0,a^9^P5@7-;CIL<p=S)uG)\
%9gE"?N-B%Mh)>^KR((g,$/BS>:cSuPUkV.o]D!W"-<UU6n15Bs1FsPC-1Qj/F<.I$g/FXeiNK=#UcA!QMKC#h3KLA[A%@hLEfAo4
%gp+aSh<Y0)T+W1hiq<fI]7lu[Z!!**?6;X'+Ch[V#g^Z)fC4IDUA/rYSQbXn+>R:pXQK[abch7]4fB1;#OAQZ/]j*S;=Tr:(b.CG
%o!lI3,MK^-i4l&co=)0cf2`i-abS^L^!-f(5b'aN#tC#3*&<g&\VZKB6bX83<`'2>B5:@R(F=U0>VSc"U\$@f>+u-I8q[[7'2ma2
%Y@e1^PQ5-kE2Y7<![K6p:,PaBrWH6LTq2T@YGa]Je8eF>(RBi39(Gi!#$'omILSp*W$FQ+cV^AV(?C8)4Y$%J3$:[#,*3rN,@]FP
%JiH(F,XtKPJ0b8+%[]rrn%:?I"'-,/8eLi?^o7B+.tYJF-s6\OKtpoOd=lOG!;j_8@0@lGLguB<7PJEWG92jn#Xf-+ecRB@!Or`g
%Hbb:Zpc*kn"%;uA#-T8A)g"jYM+>qg!G)f2p^";m+T)ff&5`Wd]+>Pd&Rf\;2Bj%bU.Z!?9#/7_W1&gu#md2[-ou<>!W<_[<$t-c
%,ejDD/>gl?i[s*O@O<bdr*jCpK%*-V/HY/HE*`\F70)9I9+54K#bI!;bl<P(m7mI!)<*Toqla$-52"kM2%I@bo:IeV+iPBs_#\?L
%lU3GA^Zf*C#mh[oAW[^f5(G6YH'F//[imj8L%]t<&6l_a[@ik/Vl>@c(0,jE#=,[Letu]^*pj+5]aXZaTVEb4XK.0XJ)3#J)@4DL
%>4YB7Fm7IW==djF6]Se1Y$rKt-nbqh2qPE(;O<G/n!Go35Mmu9??r/*qQD/;W2Ki\O)PQ@Cj4gIjf1NMbTm/uQ;)]6`Y$l2+>e$j
%EJ\%oPP/@j<HPY2'XW(`o#$cG]],\?^Ueeoh`i-2rk@lJ4OIAtQ1Y0M)<C19bB<(54%qm$"=i&'74O$$^1V2bR.Of7b/ln7jQS-W
%l#O(jO$#U!Ct>;TlR57bT-'-!1;KOBr5Zl"7OJbjg+1ud^98@.af6*fSGJZe_6Bb/=:U4+CnbU>huBkk:t<]ELXLi!'Hj84i,@[.
%k*t2s)_jf_WA:P*E4jdKe"m2/[r82D)?ob^Fabj28+PaCkq5<G?j2o8i$H8]?3VP15PK%kkHJ[\S`?%-jJu.`*=u6._X#&kcYR6Z
%Y,8*)#%sL1!J#mJ"<),"6:_,.0GS(ES;Vf>`j[(eTLkCL7RR/'=R#X=i1lgMWjcQbl(@9A%1;l!P<Kfln*Mt%QP108m81'R7G$qY
%?dRrV"f)cJ_)4Tp3X'<s=i7NSqOD*3,u&,QeFDj6ldL=$RVg]u0rfRCmpZ?tS*fYHYXh6W<RgeCTOrqYp03WTB_P)6^^$+0E$_F4
%)K=60b\1%nm<"!6R8pLsD5?L@b@N#O`QJD(Cr^4(]dRYFT8TkhVbQ0'"cHsWGa./<p=jm;C=br!l/BVXk:"SRYUt13+ZX:/Wu&"q
%Y;o'X)D7D">k#:39ZR[o^K%+ehm]=2>JBsi_1a&d=qfl4<U%W4:_0J`l_cW5<OA#>QiW59]N]Pk`D9n,bM\Y\j94r"A3X"3%K,cr
%0#"Ckd+DX89oXe)L`t-tRb<p\RS*GuOI!S'ZG#5FdXhfJ)Fi3+UQnjXNOUC=\QrLD]Ur;5-9>iipg:Jr2%F3K!E`'1p$1[(7MGWG
%#p%upF5A!D'WHZ\,X>m1pmQikEEtB(0\!EAD0?U,P.r4`:a3TrAsAj`&4\aT`"aB^lLJ't;m!qa[!iI".W)WH!K+U<58/'=AR&Ia
%]A4\lK`^b4;i_EqTM:Mt`g1*AqSfT<!AKfNZD/TsiQ=5RJFN-i^[NU\<u&**d8bVJnC+3m)%]MLI,u]:?BtK]T@5)RUY/O3ZDcf$
%nramHMF4m1mP<g0pgHEj3X/ULm#migA@ja38=C\mDX?%TU4REak5,1ndSMR/T<Z5=jj<j/m/Xk@?.PI7=JT;RRb;h5LZD0`N4lSu
%ls[Zi(aiM&Z]0A44k9tCeG*a;S`tOZP?9%&KVY\Nkd"//=nK@66JqrF"uf;jemM^LV(fGg/`3p'iEo6N9UG:qVt].T9(S0ib,A^O
%^:Eeh2;E]`;+sDTdY$8H,Zj(O6!)4MMM&&#2!rbIM&`e:Sc).1d>VcJ(7VUN&dj:;VUMn"EQd?aJ=B&37<bJaKd+FGr\1HXC>2$O
%<"ja:oWhZ\$:Y!A2`Fjdk[>lU_X^10b/RsUB)%NYQ`j[QV8_he6*12+%2`HghV;rW,5L4g(_k*ocU^u"%g[_[B@4iqKLa+"$SWGY
%<ek8>1Z!Ns0ju*cP(TjA-/":711n$^?+HD\'1L(IFb.9RUQBq%BrU)8JV$$@"*u%aB4n],`AP>t2NV`Aoir:%(Oc'&c+7D,4P#^c
%fXImBJr,js(6f>/DXX@[%!Z'>im8;Bn4P4i9IH/Jh$+Q@c/Z&(j"OKcY0l#Ld=tR_#o,$'c$<)3V`]Q)2O6Ld'C@-WZ4H(baBD^R
%m2&b3Y'?p]ZULgukDCY6Bar+;"JG&6(cqtr.!AmuqqDXW_Z-2;:"i#4:fdf/2-%I$9?A'QZ=h*f=kiS/"rJ:R>6%4To/T?fTD5kY
%0dtm+N$Pf356G/AEYessh5*PW;1agp=3i&7ZpXtg:MaX8*R<9(?adP]J,\;)WgHYZDoJ1hXn3_!cLp$TF9r=4Kqm4&ej")K0\0'4
%#(S0YQYYY^o=Ea]n_O_1phOAh3bk83m2NmpRZDuE,S7^7#A3qB-P$B0)G2ijC?k8M2le;EH_jsuZ'M-ZUTpm,&$X.aJ1/Ps!6Y\J
%7rMe%2=1C.a%[IOk+Z9jVqYn]n=%U+0g"eS%PVEa43TETK\O#(+a;\9lV\9eg[p&]aFFSI%QK$^-O9O19OMjYHW,D?l@G[V#UV0l
%qZUB)-&*?c6&?(%(U?bQL%o;4!=RA;TmHdrTk;V?#@)>\M#^Ug(WSr[L0(I\/O^U;/2Wg3cNWXtAXc=mf,M?h>I)h?Bf/)E-aHMb
%_E):d#s>5g];(go0PI+L:CEW&$3C:;j<i/o`3u!H$3j$81?do#bnTr$O`t'%2`(_e`:UJFpdqP+l*t,)`Cm)?L0Z2VZXRs<[0pD+
%ngR(R"N5%!P9.BJ>d-TsJnn6c%fYI&W]0uo%r4U"H.#[Mi#Sl(*&5boe5M(06JV-4X$SMfVJ;Di1g<opL)R*@e%ed-nb+)E'+53A
%m0NkD(OOb6@aQ$PO&N$f_bL-PGu^+rBG%po0_:Of4Fb4ArN">Ml6iefG*uib?1rX>A(A+h/K,#m-<-<,BRp1>%EHbe_=hs!Ce,Ua
%F4(g*FMg_?]mhDR5_@(X>A\tg!'Mph>)`<Yco&WkPrk;%]*3D(;\F9C.q_@YjZ6S=d,=B0^K+cihK94:\0E>AbX?>(e@c,f&c?"?
%_4m3$l8"ap_4`-L[S3$N;ik[ZFV/-8,tY#9-tAh*6$SYe(UTfCE)jHq>2Cq_pA#Fb"X):=hM.G3g^\'i3>m`5*0Wt1e:k_e]TUqn
%!+)go\51nc%pmqj?\J\[+;5V_^SG)/075Y#;S8JD/!It^<@[IshUCQ-!0W8RZC1_2HoRKP,_(thdek_/"#-cb3gHKP5TX/1>jL(a
%<E'^Kojs,==GH4\OG\Phj%e<c.Rk+5SH]'LIM?g8=rAB4Q=*rMRH2huPOscD,N+d]L&eu&<Wh@W:LDlU<3%a>G?+:64QPdZcaKQk
%kmlC+T0Sl`Sr1!N=UN>N&;]mQa]?KgDmd`RV2?j4F^*Y62$!^(5#@=\F8Z+T-b!ar,T<4A1>u:LkeKl>]J>^a>(=W10,aqW@I@V6
%d\/GMOFM[7H[*Fh^E;tb!t*GM'=8J5:_@(MUH/V_.)_!<^f#hPKm;,Kg`ghQjA*p4Ji#"!`_Mq+SE>M3i@0,41<hd)4lieDXrHK@
%a8GapC^4\M.>NuTrLbc&eIY$W&XF`@)C@"[_U@XI7g1bO=I^B^\Y/3qbJRgA):b9dJU4>._pUIlO\aML<-j<gqQZb*bPr,%32$[&
%";-2"-Y+HV5siBJKW]u)9F0@B&=sFCML_H8aqR3@+aA,t\cPtb"ON0:>6rGA#[WJ`L!X39+s$a)(n;"CbW"\[Gm6g3=R*[#qgWg?
%>sj-#5]b8uDh&N$Mgb@(.YmNb$*+Pem2,mhiT25m*lIIpbWZ+'6Rq"^)akB-84FSTMid!*foQd?31qN?Se?Z/s4*e4-g1*UiW2=Z
%0hDVu.3ti9-L3pCK`kOLV1kGgM4b3TXH<1fSN?!5V%O;kNatb4%O7)-e^fA]kQ/pCeh.2tL?ZF':5#%@^#Q_N\)j%l0rUVAm$+/m
%n$kO5OIM3K)*&7j0&6s^U,AEs/J_RF,E^&@]%GJG_LsSh^N1_Y:JC'\P$PEY_>BS&CK^@m1;@\RP?KIW#"Ws0!jum_2ZI+.&-_l7
%=#,]@AS8__59afrF%*skE@mi^Qef?l)U?T])]Xs+mJ`BG'2ZLrX$6uIHuV."lV?)BN"!O/>i*[J2jFa-:c/W#V4iAc!Lq7r%&H)Q
%;ujd7m3VQ'oT)n`$o6^@+Nt02bbWTPckWppSO'i!+p`1@fm4cI28]Q4=Jf@^.YgZ&5?tuV'G3<[lYBMdc"l_T3T_X;mulNQX6j^O
%LbaVlH%?o3/b[;0\N(\iFXg=F2$h[d_V73?KJQ9:i'Q-D#!=f`Q0h0dQf`(FRHQ*WV`?mf4$^SD]X4Vo><(_t\di;TUXf9aF&EO;
%Xq.CQI;jpoNG_(eEZq9HDY8?8\D0n#7Q-Uhjlp:!0tJpn_+CF(@[a%@*l6u7+EY:Iq1/cOHT>ND]'Strc*+up)QU-r_dSg>B-CdT
%AmS)W>h*58E>#S$@D:<u?%mZoL-Zm,bs>V&(J<NSjTX4ueaWH"r!e'E+sKj`b3ar:<#%>ol%?YJctRJC:J[5OVr<N[!S_;jKS=+e
%HJJ$2,&AA`3j^D<'I/H=M3mR*U$g[8?r@B+3FmQtn"GM9^6&0N-U%o@Y,:A)W.RtM`JY!p^JSN.S!`#IZd4.3Te]5\r\^akY3^hp
%BfDqT9Vf-TMJM@nq'/ucpO7auj6A\*YR&#H4/WTBU[AYtFd8DlE/NK$"\+Ze\h5ZH1N8]^`9IiL>Z&7sgV92*]LRY2=jqoaN5\$?
%Va,mY0?_^"j7;]S:#2H#M$Q2)P0BV=00:jRDFiW4\Za:D?OZ6qiM$Ke8QY`-9sZH8+Xl4JZV[<ceJ8IZ,MFi92`lc,dpG6ZSA&+T
%91)]$/hJseq#mEZQG-2t>pZ=#biLJSre+&')fslH.F'e^mor(@[da$1o[`Vj:.u.Zinn8&Sq4\F8_Lh*33-7bNd6#a/>a&%nH*1/
%F:a!>@&D,RMLlk((FrkC=UP!nZ1`+X?j($>.MrdM!kXU4G,&Z>0A;5N^fg`*Y^e)nOYe2<#k4\RMq>D]kuE+`*LYk&;N4I3S5pV<
%/G!`_,h;MU7i[E1jSJM+f`liB!RH3co1fc]cb8WB_ST&rG6BUCal.ZT.'`Q"V[53]X(,(9d)Ig"g+t\aj8nJ6eN=L1<rd$R,"F\5
%2%t,c^[dQ(V-[;)6QaGLi^=I#V!JC/@?hY"N0<"g-AKLcpM+l,i$I(P@AHlQZ027'1-[d3S"<ONbC;7V/Cd9^]ISJOs+d%b:cVM=
%L(2,L^2q\bI+f*#S^74nn\$`+YY&8Cfi2oi"fLaZ$oYk2J&J8O?$YGYO?H4AnN>6%;Y/EUln\?3n1@B:<R?Dg0e._04NWbPEbRe.
%>(!?!"^\a69NuMuYunisXtT9QN+1aSM%?724on=EQf.pH.:bQbC:#>6H1A%IahBAjqe/)Y:;XH9B&iu/0\`rLXALA4/E&iC[=]T+
%<88]'5o.WF.]H"#NhIBW+k_3CV^kqNoF!@A_.<'Q/V`UP=l%.s))CTDm2$1'G$1VlKELZcT".P"b=Nr,=>[3)&NlsLq_\@3S&EsR
%bAhM\6/??OdmMe,r2d`,W>QEPDaB3d9)=^;;],DB`.sK,b*nD-IM`R=n%G%;Y"R?I\</c+l?\iI1pbMpEtF(T)/9\H%LF8(2jlU%
%>1F:F]D.n%=*SmM%*"87!b-Z_N5nQ1m!=/B2L>kIq.d$`I[):N/l>;1lLs?:(OdB._1ZZ:2?eOX>8Y8_r!&e)7/0;r[KoVnIJh%j
%BQ^a;HV\pX<fu[=*fbL=nS/a?bWqksM3L67E%$I"+I]+C]_ob)+Vr(VljX,"ZuQW_Q15R[s0@PXB&%POa9m16C=PpY$!d!j5_#l(
%(eMdsG2"WmW)gNpqm/6eUu5:?iBbakLEO\C$Y^R4AJoTa0qsfnkSXGN#7:ldH+2=k.XC`)Pfp""S;u+@e/pXB@Uj>IS_!nG<U#O/
%%Wm6+UN(#V`,7^]B@&Y8PbJ(Z<8kOVKNg@kH-3Q>b+gN*!pY%_?/rj50",BEQ7!poKGa=qM+$>;TFOd2?B>$F9%G4fec*R2(7k.t
%#mmOmpuj*p+#[Dq\2-[,n/OVT!@3,&^O/cG3.HV'$<KEEJ1K.[K'Q[>hHSVP1l(bmI1mnm;$I=>)GS0m$rWg;h/:$sU,2QQ1c,o\
%ZmK[_,BE`Vl(%)+>J]pMGCK+^gmJ5pQ(_ceF/mX5cG=F[Wjd>ZYDPpGV,pI,'hT&nfAt46)XF6D9Ti+@ni^21;2-(u1Gs]61>^eD
%XZ-sMgstLAijG1%nm-TE-9]n7[eHN7&tSPuLL$_<6loe>CVFFWS%Q^^\H"eO3AbkT,$bB^q8&D;>tl>*Qk5GJ*&+*YoH-T,j$?1q
%3Qp4n<7(k@O@+;=@uk02e((1d`+V=fKc*K,'[%.,=AViRn=^iX=ik\34r5"k4j742f*nP"oG'>:ec85Cb\@hQ"Ju;a!_S;l3ELbf
%r?+qC;kn%E)&jOa(U+s`[eQaDm#e:3E.AL0<O"IOKrWQfTEh5@$1?Md&XobFlG[HYGFk,eVH^eT9Xuh"_Bk#3$t4Ij4RR)KNQu+,
%#W7--Q%N-RT+,SY6ju_U(G0-A\rHF'%['=AUJsNi!!'U2,1,T`fbeQOFG,7NGb1_)2,]k4d^0b#ZpG>>9][2Jjj8ESI,1^#iKEo9
%<c(24mdsCa7l?#)Vd;lt9Q\kaAOjh-XC<bnjbY!Pm7M-_Cl2eFN^8/]-#J$;pq]:l%%M*!F^1FP6@*1e_b8Uc@do1b?%iqH6oL`\
%kT=snb7?&r+siq_Q&XfqXj(qod#^(2N@`c`H!`LRb%Bl@fj7_,L'sCX^o(7*'g0D0gP%X4g/Fhc_`XF6T;5fjAu@kVI6Xh=b[h#H
%-&G7@/>-(V;A5mjb'*G/+jmALFFjc_3bL\<:XI\2V=)5J,BFdPi]X-i5dMhO<i^ReH[;1\"<j0[DI?3<G_!rUC`_6,*YXcRrWA75
%27X;an"qZUX/\2/<&DEM,X3,3@6s7nelU2I,nDkc2]1:FCtXXYTiGs'5V5X>)Xs&^S%LFnn';*ojg2'"ZPJM]V3Ss(>Rbj6e!,5n
%ElH9hgY7g2'UG?u-rt1m9.:T&F1,Ol%]s)sNlC#(?]9H7DYlTPr]arWUSciR&nY=-"#s%^9CV-0NQDHV(mBS_aF/lX]XQ550?$S?
%1(ag"+fQ$c3[%c@.Mfm6-`AVKjWaWjK_:&7?jIpq5Zs&GL%sC'XCJ+BUo@$q_ONO.ISZq`Qrf%\pb?'8Er3'J30an\I1]O)Vm7VK
%EM?q+:cKJqXEQZ?Q#=W'0.I>/Md<Vi"aR%(%u"_"`J4'RTf<N4l+#k>($JLL+'8CgL`jVL6KI)*;hUN-N./]98VjC"pr`uF$'Cc;
%!-EgM@U(?MT[%N,)qt]sYQJDOibJcEmL7hR(gi('StNt,ArPZh"*Ah*3<MZ+L/11<2+2"##kup_mg[(kJ)Q/M,WUIH:[iI^AOi]n
%!?i!$oGDd:JFjGJ+(P<UU*+%_6N5rZ<J8"SaFKfEP)*7t(mktB'66/H#o(iW&[<$*:^=EY@^\T5m)57(M7&Fp4-=Y/ZPRV31!XpW
%`'X+_"LZ4Y>_q<lE8Nk^ZU3:n"K5(/<XaCF(ter63ob`6?l).V-QMUY)SY1L,7XuZ&Ol]]df<T<RNh:u_3W`dJXJB)Q0ON#Ib?ig
%o\hnbX`Kl6?#5;O[hBY``o/P+7Psh)l!8g?(3qKC,ITjFf9Zi0\reGB.(n*BlGq?WZ%Q^SWm>9As874;Yjq&oBZDK]!'?:<`K/Hd
%r<2KM(n/3RfBkp!""\#Vqpc#S)`9LPlo9Z+HGY6>5ig69b\"'q"BAS"cp#k,;HMc^Bqh(;a/-DDnh2JP#6;df3"BWVY\X$H$hera
%c*ERP/,Ut,r>^%_kA"<]0*!eSE/L/FYeW0"?PbdLQ3D'4>a45_WTcD`M>IhsFYaKC-m_F'WP4h,gnhC0-6.*59N#oKFR&,oT*Pni
%_jJ+t8`O0f1&;?@;K`9F0tFU%'C1;qNBar:G7hd07M]84J,eKRe)gJ&!ifF\7@u@R9*/264q3:irD`*W_0Ml!Q0C3]P[g6AP/[ZU
%po)jI_[Dg75b7K0<j5T,HGMUhrnGCGBQ(cY%!?3:V_d(K0Llod),0lGPQ)L5Uj]u,b7)27KMMf:F6HBpmGWp@BP7N2Sijrq4U`7D
%+Q6mf0@,0Ll`g$XoZ?<IhnNB>-2u0hiVH>3PMT=6J,K(KrqHHls89A+li6nX&-)Gis0'1drP-,I\,Z??ru_%&J,K(;IpAP?WUJJ9
%J\(3M]A;ST>X*M#gP(n13#_IVLs:k./1+3pTD9Y2,0LtcO$4%V5GE)rb<HNOf!qN#(c0=hh\I4\lPL\e!Up@n%u1WppgJYC"\^"D
%)R_<:,G1T5+,9q^^\[Eu1b9o9NcPS)b:[D6o21u[(l#n3=Wb4qYWa5]J4).nWOPD+h6WERnY>^TB`7EfpA9peH[P_Jrct/)p>oKp
%-R:):FW_"[]HOr>r?2JE7;i?>F]kY.GK>kk9trlJimeO+rI>[[rloriQ/h(J^,),_Y_Ki3(neV<c<sC"EJr-1e"YK0fk=At)gn?j
%/bH5B@bHa$q#9j!r9FPK)>Bu*eX27&&QUtBda&<T=9>e8LM*\G+hGmDpAKMl1*ngW*'P8]o(DC"qr\\f^r?,C_6m'C0B#RF.ud:a
%35Q#l7Ola:`$-gl1@fP.b]b[J0OOV&i/"T*rnHl]#hmBX!N#tmA0O-m2)AK.@j2-.(*R8t$Is$fk4$:IK>I(!?i?=0>[K7irkW%M
%m8pl=0`BNhPi_aLG&!;OUDUC+)s>?!X-8P^G39ngj_a!#ZQ6?"7,RsPIiK0B^fMp;7M!OX$dYnk(d3R@O&<%-#Qq>7QsFjk0Rdmm
%&#IrP(Ol!raRKjjqqqBuh(WLnBtFT?T19^MU@9G,K_MLp0bGpF):U5\n`#E4&*?)lj7apr,JLnin,Bo7L,D(6")T^5IN?<G98`4f
%KW9pAN#dp5dKGLT5V>,V<%\%=ip>!Pk)\OG+5d(,IicTk,9[q>]dWX$j3/Nu#A2blG(jgAa!rVjm/2M@,$&OB`;?<Q-,(B4`T6pN
%s7V145mUKkaA86X.go+OGijNY&M$6[O50*,OL+IS[[_:Ds$<8NF%u7e[Vm7I%f,tl^O5LcC!uW_T^T/rHSc>[][4H5-]8e6bUdEe
%q&GV(@fTXKlhrGa/t2r\+14<DNqiD;^]3=T)d3FTf2oS6>UL"G^p2n]0\0EqMQ,$89I1[,?Xu4frb26i*qJjgJ,d2t9a^sZhmMga
%>LkionA'(\=QR?[_02YQ/4ODS`/6o#ViQ9gAH%D!rGV]uCc*V+-7<c_@6\[CnXPYmn,d(;=Jq`uJtlT$A)+C%X2?]tdmp0#5/-tK
%Vda>/k>\L9VUKF>f[@,>#(&s9VD&tri$r1>`j(JF2OG_T>Y+J_k_C7bgdad&o_e!hrQDKLL+df(pi?`Jgu>siKJVad8/B6S:b*'4
%ZV2k#W<6:&@1;0GSfdq#,L5aJI!thJIk362D,$r1L6XtWnQHXC+l(1j1R>hq+L\L30d_70$)4.5d*#51r;>XQLp&K3gBGGNs+Q^<
%Rh%.`i5O%WD+"'u`&?.0aVK-@#/-$4+AB+sH%32Lp^uh?8;fXFr,4ff`?l%qOu3=.[tVrt0q>'4KDlS=PT<E&pgG^45$J"*VC=3j
%+8pF+E-t(2rO3kB\/'VW+3T=i^HHu/JYSh>;_Db87TV-nY#gR"3f$clJNnT?3oo>Us*bT?VrYlH(R0sI/'0&!3M86^LE1RcK"sGP
%/^\-4@_$e_CmnMJqkKIP/g7M]UrC&tq;:)P4)G0,8C,uWSU=CKmSN%LL(AlN2T7^J&B5JU*"HYj^4'8X_/BRc^&@h0s8C!$j&ZFA
%*_sE,JmN6n*\bKGdk:4:S=3n;hmEi5'Qc-,U#W%H^(:#:lG$RA5TN6)%s%OUYJf<6m[R5&l"NZA'WO*c4`EQ9R"hl:6*UX0+AEO0
%^-7FK>_cR5aRTpkq;8r,.5QIu374ealcH;qH(jOg0OWD]NkDZ,"$;2PKJ@`E_$J:Merr<_C?nH5aN(dirSg*(,o!\Q&EU=9jL6>B
%.)YWNFlD$bR&B/g+\&rXJN^gr#22Rg\Nai*_4O6)_WUets8ARUWQQ44Gu6X"Dj/B)-rUThN"lVC)-\/^i/2^aV1>QC&"ie"C:fcI
%99/AO([+*=NF9CI&b!b\/7u[O?n[K+SS<$f)l>Ki29b!.n+aV<,-1"KM68Dc/?QkTXF/jJaRf0JYBHijiSCcB^,Tf4+r@3r.Q_KJ
%X?]Tl!a1B2QLj\JoL=\V`"%Hu^*V&BLl56qSD)ileLkM$p!GG+]S!jae6Jnf$Bk#m[-mu$RM*tW@#@qfeVbTVj/@^8`?`tYgLoA=
%MTA0pJiZ25Rt_-0'*]S4*:YgC+OL0\''M9n"rl,?[@SLK`RFjdTkT64?%Ao2]>T)'=FLQP#$0d(>!lruQjjkaSiemGocV=%Y!N6n
%1aIjA8&kVE0bo7_P1P=RoX2np20YIRciaZi)d;TgYg7n+NurME\L=$e?/)WB+O>01G+ME87j4''?r,f"'7(rA5<hHf2gR]8V+!5s
%SffnRL`"%Wkm7';hG*W_mXRO3-j,>\+_tb]3j]Ho7gYG50l\J.J<$TH9bA6mL,c)gTdVR1/<Q1$_!MmuKSVDR8.`,p`*0I5aU*R>
%)0m6]U$D=KISg"PIiaG2F$Yt?(sqi0/EJn8`\"@ikJ.QA8-qMg!2qaUL&ai0QIR`)XGC0j^k:T;!(X"<fUc!QoZ_1PCjF=p6BQ`E
%Lp9Bj,@$3lN?.3m]Scn`U^APEecYt6K9nji:Z4AHY^iJ&6;/OW0N.a^l&eF(N.nQ@)\JR3!3mCr=>=6IB"VuI^=U4;JF4Ah1nPm-
%iW-+XUA(Qu/kNPV+A%Ag/G2(T`JsHLJ3!8..r_3r!<Ug)c;eW7%&,('N*n^L@+b\77P@NSk`V*9db85I(KDQR&=jf0H?1j]mn0?W
%:]/pHDi=/\/SPTgQM=R7K)oD[0,j9N.BVX-`5:sFjF_PQ8EiYj-=HQu"L$jJDlt&9mB59H,@CK8$NsC-/>UWPR\.=X,s`usnm[Dq
%[0YkpMSp.[+X9H*]k<:l[HX_TqO;WsX7OREJ.V04=9PcKrB@Df4P5h'@@*cXK6SY+G\lA2mKF]SS7apIS!IR5HJ@e,3Vq:F!`bi]
%r;\kr?sP2s+OeCJ'*)U""c4'-!W.RiqlI%l.F\Et]k5a:QM@=sO.dYBA?i?Yr8Ocpm"I&t<9K^+#OjXE>fGq%R0Z&O&15AZ"/Rip
%Y;ioEW3aY>jn\2C:%*8YDoTVs^,Qa,nX1b,h!%VdJ\!+Q#WQtIZNGu5dpesm*Cl-C;+op,KHi#aB5Mt(7t7iTIeA?8+Y^r3%DpZl
%gO\h?AT.h(,\Q0LE?o#rq+`=ni5/YFFXXP+rU;G/ZAMAnqOP7"2s][/?QN+;cMJ%//[9QmI#DNi&&nG$H$M[:&aP22)VWZ!8IlWB
%R_l^"Hdd,(bL*MB2M't#!Xt6+RH$l3@6lr%,$%a#BgB+)Nka#gQ!FM"G]F!IP24o`N[O9S%C^JHm:IC;lAl!YE0UYsk*]fp@baXZ
%2*Z*:c8+F387pt[i.mCoSRSH%2*pfT2o42\H^%78a)J?pIeD6NAW<6):>Pha69':@i3$OPlFfNU7;89575$eWb^L17+RmS]fA2b_
%[b^!"_6:R6d,LIsqB/J70,e^R9`bRf8P@)%FYZVn"gpsh3MF;X&jeTi/O>^t_ela'jlfd\H"`oB6^0uhpPVN:P,Jp:ec;AJ.iWg*
%InaCC,S(Ff1&u1^hLU93r:B\.h.(ojV8cg`qs%rao8_I(aB-[T(pt8RRD=_&.\TYb0;^ZV@SO-&d.(N4cT-"&QE.XPoX=1mgoQ-8
%NR*9D4BVBW[PKm,K$V@OR34X`,<57;g!V#6.BscA,pi]ELikX"*Tj6M/si>?>p]\2C%11r,"a3K!PCt_((,laP3=-fU#MMme3,*M
%CB<jI_?)W">!%+[ljpTcXCDDrU&=K0\55On)60\TA%;\0RkJKq^dkE#T"4XUg0SS6DsK$:>P$k,f9^]Pc*[nu1tJg4hR1YV<CPeI
%n0WU9UAt[r`!g/*'Ls^03T@X-<,4L0QZks7rg.\glZlNMp;+%"EsPY6Zm<Qo7Kip77]HZ-nLl:+lZU:n?6An;T</7s'.Oh35!Ap\
%WGAk3Ne&#r3#-341u[Q)$i1=^CK1Mh9psqPg/JXZZHF,3FmSFtX`F.n8qhH\g9H#]h"8aHbR>nGmBh^HUAQa)D>K/cH^UG,5kb3U
%%\5eYY7H'[V7@l@/@<oR4Kcr>)+G!<VE,]Jf*6fdU/RTm3$)QUV.\lD]'8#lp#>BLIf7fVWet_>rUEE0dFY'(!2@k"SS3sM6XuO3
%@E+1HeNm8aDA64m)EW=pk\E8Zj$h#8i'rYKY_@%Fk]o95m`#`$k_*?K"K7Np+.JA)TZIc':[lk(]hLej0,e`83RTUqd($*oShl=1
%W:!LCh(9P'9riM[;eq`Cd4`dZd%W(YTlt1b.m=$n7YGBOJVe,$$EJb%=&jbQ7P>Bi;1!rhVK[CZ2s]C'?QI(lMV^P&l)'8BU,<Ct
%M)-$b2_%^=`aHtTIW?VT<IQ6rPjD,H>qSX^qXOVJCi]DnR+\pCdTi)WXA7kk,(]ZJ"_mBjF/Ke5*Vt$(VW"uMP/#iOYqNgL0S>9I
%)X^Gj!I(&:$(iEe@*5G(,!6t.+Tr[lOMO^T,k&C[F2iCSmd:U5m=di>TQu]M>p_YJ+"HT=_ibUea:a3E3)uh@)E*VI>&5K6MA'`Q
%@VNo_$lWi]!lq?p^-tlcV^<=!%\LaG]P'M9>dT\,>ufbdNI:Pe""Gr&3Sn_0css.`6J\=ad+M$^>%S=njFK@\Z'<8mdX<,JFR(>Z
%"bi.6W$s81g_@cE<1HpH%Sf*c#C&bT^59Tm6%>)U%Q#itD[=D!WM^$"NQPb+:E>76/K!KiD[X5rl4XqRqL]hP9dROuK_BDDBG-Y3
%c`m\fR8@=bT&VeXnrtYEYb1.@=]<`P9'&%jogCrq*DXbE\4!ipc5WOW]AX!kb.m9DqAPTTEDSZr?6qj))f;)pl@.7oGN+hOTRRcU
%SkQ%J?IPZ0[co3,(MhL5-@CWn#Op_C*+Ap_EPrMg]].?^]B#^ap:ru*/p^<]ob(_rcNn.-FQc%>W-+uJV7jq2i)d+nmRKl*@K-h7
%3jS$[cBWL.m#K\KpPj,e_Va%rJPe$s%u?K3WPdN@oj^qNdTZ?hJ*;f3,WD<^nMp^?\&75Bc>a$R"*13/E"^M@_11*No&,i@iK6"3
%2'L`a#T<>9TMi.;dW30$=pVC<G5+!=<@dpg!,4$H.\U6<_ANt<iqgL`#SM2lMEV)eR^!%e,kMl+q&p`o'GkA?9Go'8#OrDuB%Wb8
%KprZW<(9u\a`JFZd`grA%*-(XULO*g`SL]6%9+mRZp=e_JM(XFAL@T3%ctb)+j`tRS(u.O[7A1Z<]>#SQ!^/ifYm\/Ca-pB]bQAb
%(h!`/K_-i)V)*D3h]>`M1[T79C5+8-3acBV'f8$Oja!QAH&n!d*9n$l^p&'i+rp,1ArOS6Q.h>1SaYa^p[n%p:AX-i7s<QB:_u`m
%%5"3DQ)+/u8f/=C(13+d7kKa1<IF(Io'[Yfh%-rq0bhNfS.W<b6BHjdS^U<('Po-eI*if$e_Q$WS=!u1M_Hq1Z+=\',2k;i2#,CV
%!k^5qaLbRT_bl06@YriN;dVPJAR^QClW[kbAKkUmDN$"P;$fC)E"<RrU/iRnV4`1[=KHO,^E(hN2P:7sR_gYR:N,])!!]!'G4[k;
%/:JW?*UGHb$qGW,'fqn`,+FIR/4\]RW600`Q#O(W0.'_Ri=LgQC`r09JSPtTdGb#5#PE]Rp'aIeCD`!:!$B_qD_[?<OA@tJL?Q)U
%^;9q=0J(4[FFAnf(0L^OLQ"Yo$(iLXoRftZa&0&X"UmK`nIQ`pD,aPW(D.16501iqMs:/.'Rc;3b\.8beNu_X7aNboD`Js`?q!*9
%"&q]Om2g&kY\jcKlkK5nUrRq;kQf!XE_HbGB*gl^as/:4&jp)I40;^QM$lZX_c3c]#eHa'a`*8f\8c<ZY!UafIus("[45AQ)Klrh
%H+=+VCO?;q3'SO";/R=E$_#&ccHcKpj$]*[G.'u\o*IH*d%b"<ErnK=g?R&;VU1WD2F8RKnnEnk14^Lnj,1=**gaq#NE=@t3#C/E
%RBlcg@N:\_bikO)r#cUn9*fE^-;L,s>$0.^Cn-^T;JE;Cjgop;Id2^Y;^^N`[g_Y[M<_d.ei-J)2?CVQ$CI=bRsna"'eDhlLAYHL
%,V2-5c+L8?)CCfgVL;PT&W95d+e9JJ'T:#;UV'^q(lLgm;?1OAJAE_f&.hO<K#MH.fak:e&]l>b5?$O-IO?-^)U$?GC2!:K<EEDS
%cpfiWNgV6tVD`/5C_EuBNXeA7[<tnaD@r\NK^2[(3Qbgn+G=f`hT/>Tdt7_W*JG\#D6=\NU*XjRZ74jTW;R19HPVY_4Go(qlR^Z$
%hJDnu7<N7Q1d2,[M/=j[*5"rdfe7=?]`*OJ"<_#D8f.U@$ta*+GgO-K0.$7:q!3ZsYOkl@lSF4K7e4A.BOEg)\'Q:r9t1[B/b=po
%C-?;,-RebRX`(K@<tbK<,JiM9'@/)aM?LJ/mL\Cfro+7@(-G#h@q__CV/ODO;eMt]$j"N%-1[oX]dA+/1@:XA%1.0E.f<t!'J<S=
%`I\"=r,BZr\B+TF"Kki1@e_^F7-cA%!e*M-*Z.Adf$n04E,EN)V*rmj*c!ooJM3&o;hNR[\8AfZJ2mc(!aZC2fYobGNYN-JmZ%FL
%*K3)d:\c-:jJ\,k'NH=q4'i#rpPX-a*),bq=fLqQRR&Q#fbIKc=XcAjlAc]cV>a\^)6:9e3QV\a"/o'AS@"/d$]Zi'Lj>WccS(WI
%@0b1W[_"ObZ(,tP6YKb75"PkG"%4$&,mm%(_[^WKBrDBs#d"sGGY[OaWA)pah(e-tHR:0)\AY=q4u2+M0pcP)pP^YjDRq<W=gDG`
%g1G)$a[HWl"V6k9=,3%/+dhm@`KBf==)fMMi:EHW("uZTU.KEQ]YGaBdW*33<bkRj3[LgQ;[O"S@"dSOo!bumiLNf_*06U$^!\XZ
%3RK>pcU],tNLE%$2Bu_W&nANH&?KW%WfdZ&%G<8%0\E+/'=dP0@/"5afWIY+8Q=p5(%m%&3E[tT3a$d(Dd_[-=PX%m>EEk</So[L
%;hAc.KF;f\W5&S\o0.dFSH.,;W)3l-dno9td.K6-FH#Ime.nd+[<B!3)p]1oL$,fL_Z@KHj#\/EKKTbK5&eCD^A&0HXMNO8*'"=6
%Li^i#;(EW9HS*6`?=K&$bB;\!:9`h.p-tM-4oe5+@JW]!Qu`#uPkWu/kK)b+I08fH_I?77loj!$T(Btd;tan5k[.DZEb2<].I)8d
%-o^q'aMW;ZLeMms_Ehj&Gj4>793Ap_Q@+&@`.&IBGU]lj4(O*t`aJ:nM>p,p1Eht4=1G.Js!,l]f+2\-'5Z\F%8UeMS(L2XIMLVi
%-FOKmJRTSQJSerMET!p,`>M]B%5F_<?PAp\?=NNKJ^%s82Qn+Q]QR]Snq#&$#<#A("rM84gtX_*:)jg"jorbe&)^rE$%,DOn?F"L
%a*7S+gOrJEM0joDXl:BJ*,Cu$HC1Uq,M"_L=5Y-/cbR4JJU85p.)sS/i#WnV"UjN.\VG!1[Q>o,J,t@W9@kc9k?VM<76T8X"L'",
%!A$Lq.+X*.4*kmU*%(_%_E`a(EtlFL%KMDPG'ogI];@!J!"3!3-c-[P0uX=,Qai]7i.Ba8$`XFaa;qd`Eo;Q)JI>q3,a1#Xg]:lg
%>#[=R4<S^&H?1`:DgC@&gjtMZ#E6qM0Y04EGQ&oHc95\/gr/?kNH1cgl9t0-n-o,.0-GaX#u,f?S+o5_nInK]-B\ori/.;N#O75m
%>SA<9L+"3S$,ESJ-E@eR#3ao3T#DMe1CgUo!n*Z;C2.?SkSiDA0<oG/\NXN\cll,8I=qJ.V?SlS%0FZS%$#Hih,t]!EL^QXdoW_H
%,;P$/%FS?BIRUog*'3Q&/*&[HbF;.nU@IbDRS10<\Ecu:nEP<\<abjfaS$+%7"L-1.1PcC[Y+)^<?Q!;J>E1[S$n/4FU'P,4l]E\
%)Z**Y\LSHNLD4B[;k/!@^%beco&<>N4H,bdrYd3r3`KR?1@\_/N&S+0`*mAF&QuM2CeYO@^;Q0pZ#iE."VOJ-`"k6+!&5gC;TFHR
%a:A3Lk]RLH).D7>1F$Ldk1>tEh4B/MKc?-k#^(\7TP9J43$,R!JVF81<,;d,.#l_s:r"%5*YGd^*NW)h`2_X[nZn2jY;GL/cuXtc
%G`F0#d",b("ZAl@i&rs1Fu^O,d3t^Yf;Q5_r1UOR;1c+4<i'<WdEY>3%<@6cF`CSkZQ2JE.(F2,Q:bBcULt.)b6H$in:9h?c^rgM
%6UHB+F(U%B1NBZDFi`$g#=q+KKZZGcYZq_+)AI^,K]&i[Z`YgM=Q/fJ+?-1n)ZU@JQAV-->sD8H=D5)(LaV=e"3CtV$XCSq0=h3E
%em.]/7EqNi-f=#1!5L>CKG;T7SB]5Y*C-bfrY2gs1mOu?&jZ\7,<dtYmb7k>&XN)HdU/C`H,-E]Veuqm0O-5uHNIP*"!p'IUs:08
%VSP,1_qDIT*ntIs)bM%m5rmNV+RAP6rN73"GL4;JVfXK]DD(N/B(VQhdu/-2oZnTj5<g8]"e@bk'qct8"-=FhR-\Pg\?cA3:)dHJ
%1I1$*Kj3NuhEn*WRJ@oADIM@<=M0?\2j*eQ:qhY@?W$ea3^>cI."C;SmDu^5O_\*=m0BoU9N!`poU7oe2Npff8YuflhBTT"iRo.q
%GF1BH_O<99R9QGgVn'4OT<X52(*@0Vh9!!*+J5ZLoqFkY@o\p]/+74?d<Z&`WucC]5O,%je5Q=EV^u$$j.rc*P_`U<7&$PaS0:pr
%-DBjI3aXkp[6E%s+-*_2+)0Pr]VM1l`*JZA6JD$2I^C>fbqkbF<n^1_FK8CsGlUlH`Tk1iI2\$WClk/G4ef?TA@8!%*NB?8k!fa'
%C:3H?Ef[1PR*A!na(Y,i/Hl5Tl+l_>XrUHAZ+B8;52_uF[>HmpA\7j;VIIE,6.khDf.OVa9XidE(7!^O]\=HVCH,]2&aXMT6i:h;
%,[ua.2H,p,k5I!q]JU/(VFI$Ue!lp]l'p]bCD(4fbVl4RgF['C^p1n*eca>@'Q-BtQ8QiIgg7)8V_o\Va/P@JPAT*^)<P+D?Y_j<
%)(!%3TG>0qa>QNEp1/P,7"<Qb_4()$W.5>-i*dEA$gD%B,#%LEcKo)L0X6`Z(<47BJf(-m$X[B&:c=CM'A\6u1kBZ^6H=fI6$T33
%GSj(akt6L,QuIHNB((a%Z&p>m]>;XfdCGY;.Ip<td,5un,r$Zq0=eai8oK#TN#$kU"#[AL8Hs9N"*1\A8QP-i'4>B:Z#%@E$1>*X
%H;$Pq%C0dRTikb\$e8kb+5&PD)aN5:]sBD=><(MTEatNrCpAXDm*L>3DNKef\p>uB9+-up_/J%^_Ns_rM&s'TVA:<)L9?u*^QpUY
%"e&`E[2'$lJa;lf/QHjbr7mN.2[%Y_iUra2]-6?TahD[-i[lm1;fmJ`:VVV2^BE?lRr8%f2>9&6r['54U(;(-"qO?(=d02M3jE*r
%=9e$Yn6@p*+=h/:__4%/5$dmC(4uds;IqbV)Tu"O*@A0@pLg<.D:h7;=iad2Vj/*1F/W-/@+.eo_r%bu?5=i'b8u#KY1b)1)-jZ\
%C[PUYn<MjCd/\%#i7=7f[Fsi*X_8:c/HY"!/%PF3=a!PEU?9V_[()`4Rcl6)D96a88?*GteYKmI"PF%QZn3W.c1j0<_1q*cV2`5u
%-<hI%S*R_\7B``Ymh14Zl.ZuuHUe?Kp$gibZ#:6+=+\%YKt!k7/ICGH%GtX]gW]YV#f*G\Ce+tQ'aQ@qJlU<.UOQ[PTj+P]LAHKJ
%e?BU.fP!LNC?=XOcRjt\>KUEMHL[jp\Z0mVOrLhhLF(rbdJJ/e4ZqN6V)DfHP$%9$)l8bKp#R2@16ro<U"Wu@]52=\Lo>U`D6d$*
%Z%Qd+]paqdbmD_2a[*1SFY!h?9<-#Fom,%:dZPY,'T-]UUX]_$Z4,RS-s;^+Q8FdWiaeI"Soaq=KVgYZ<#b3SbLu?s<M1YCAP$mp
%U0WL^U?/Fhl@iBh@^ZEm7]jmT5'i!POp1fm+QC/dKl@qLI\[A1Q$uu:PQN9Akcm,OQh+ZsE6Q$AIM+%Jb)/E$??3^)W32V_iAc89
%q[AKJ'3"6FP6s1U6GBWf8ROp""Vb$YT*$-Vq=?MqjV5$bap%_o*^,jcY?PjkYLdj1G1%F.gVp$V6lAu1DU,b`nYt_XP(mtR^]h$+
%-=9]!6.%fNA$tQS`aQD!Bth4^0quDDb9&F_69[JgJ5JD.HpHhLDg\<&XV^*B`Q8/\)Qsg*-8I@\jri`f6mUp>=OS+.`,m^1en/d7
%ls.o!^`&p=^p"P2F-&45#NU0MQ!\lR1V+QrcX[H.0d7;29SKj40FBTel+*Gr2h'kI'f*(mO"-FdY(Y"7n;j3orl:?<2]N9ULLOPn
%bT/h`5dLiQINqmTT4'ei,_Fn,$p@]XqOW4pc@AALY6#ptTLAlJA3\^+pM4\B6j#B@n)$s+B!p/,FV@@Z9TU`:lp-VX1o$/c2&>=&
%XWe[N<*E\R4&INDj-\2bBE\975%B_r"Gf1)LbI&PMGTGp(r03R/RB[U;eR86E'^B8S$F1]S"bUi:I.BqL5<(=C>tT0LDHF,2FUgo
%DJQ<oOWR%6SY/*0e&I)KHY8aoYXZPs)Z]V;mK1roU2;DE49?W*!/fqJODL'DG`rgIVcV>8HBPtdM&@J5B`-dO%THO1Ggm=AMq?c>
%bA3j]%XMoQHo+/!TV"M]1S?s_8Occ"T+ZUNTT^P>7aiL@q:>d-&MFF4ZuV\u,6)iN?,TtJ9"9CJ(MTKQP!7<h6lcn\![uZU+\?5+
%NtN`%A-iY!'9H,=@+Hc)7V\FRD\M*Hki1W3nF!!;5bAEII*\<&ZbDqd'hk,=@JL'?^NrZ$3(lZnLD;)aXsj%!m$t73g3,^NYAo_s
%X%jJX-moIa^&?_Gh,-%h]Bd3)nO18*=QLJfrOse:*BbA8oJ(!!lllP6)3Oc9FHB$Q!fW:"0@$^%?6Z4"3i4=IaK=FtM)Lprll`#F
%M/<+jlKd.'5jeii)3,2_a2&:BJr].=6CA]-`iu:RVt08o0>00rN(<o]hgY;1\,Z6tn%\bK5E<PJs!e!2++F$h5CNCCcX3<97c9&O
%q=O:AJ,T6.J,]BAlhB<8r9L8qID1.+jVJp%oDai#])DR"o<3ZBbLb(L?iU!VIn'WkFSrrc5Q'K4s7lP:rssAJP55~>
%AI9_PrivateDataEnd
